-- Script Path: game:GetService("Players").ugxcvhhhcccg.PlayerGui.gameGui.gameGuiScript
-- Took 1.46s to decompile.
-- Executor: Delta (1.1.692.843)

-- Decompiler will be improved VERY SOON!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/brNTY8nX8t)
-- Decompiled on 2025-10-10 16:18:11
-- Luau version 6, Types version 3
-- Time taken: 0.238447 seconds

local LocalPlayer_upvr = game.Players.LocalPlayer
repeat
    wait()
until LocalPlayer_upvr.Character
local Character_upvr = LocalPlayer_upvr.Character
local Humanoid_upvr = Character_upvr:WaitForChild("Humanoid")
if LocalPlayer_upvr:WaitForChild("dataLoaded").Value == false then
    script.Parent:WaitForChild("loadingDataLabel").Visible = true
    repeat
        wait()
        local var4
        if var4 < 15.1 then
            var4 += 0.03
        end
        if 15 <= var4 and script.Parent:WaitForChild("tooLongLoadingLabel").Visible == false then
            script.Parent:WaitForChild("tooLongLoadingLabel").Visible = true
        end
        local var5
        if 0.5 <= 0 + 0.03 then
            if 4 <= var5 then
                var5 = 1
            else
                var5 += 1
            end
            script.Parent:WaitForChild("loadingDataLabel").Text = "Loading Data"..({"", '.', "..", "..."})[var5]
            script.Parent.loadingDataLabel:WaitForChild("shadow").Text = script.Parent.loadingDataLabel.Text
        end
    until LocalPlayer_upvr:WaitForChild("dataLoaded").Value == true
    script.Parent:WaitForChild("loadingDataLabel").Visible = false
    script.Parent:WaitForChild("tooLongLoadingLabel").Visible = false
end
local Parent_3_upvr = script.Parent
local hoverSound_upvr = script:WaitForChild("hoverSound")
local deniedSound_upvr = script:WaitForChild("deniedSound")
local clickSound_upvr = script:WaitForChild("clickSound")
local levelUpSound_upvr = script:WaitForChild("levelUpSound")
local explosionSound_upvr = script:WaitForChild("explosionSound")
local gemsSound_upvr = script:WaitForChild("gemsSound")
local powerUpLevelUpSound_upvr = script:WaitForChild("powerUpLevelUpSound")
local ReplicatedStorage_upvr = game:GetService("ReplicatedStorage")
local rEvents_upvr = ReplicatedStorage_upvr:WaitForChild("rEvents")
local module_upvr_2 = require(ReplicatedStorage_upvr:WaitForChild("globalFunctions"))
local shortenNumber_upvr = module_upvr_2.shortenNumber
local calculateRequiredRebirthStrength_upvr = module_upvr_2.calculateRequiredRebirthStrength
local getNumberOfSamePowerUp_upvr = module_upvr_2.getNumberOfSamePowerUp
local BodyWidthScale_upvr = Humanoid_upvr:WaitForChild("BodyWidthScale")
local BodyHeightScale_upvr = Humanoid_upvr:WaitForChild("BodyHeightScale")
local brawlTitleFrame_upvr = Parent_3_upvr:WaitForChild("brawlTitleFrame")
local any_getPlayerPlatform_result1_upvr = module_upvr_2.getPlayerPlatform()
local brawlJoinLabel_upvr = Parent_3_upvr:WaitForChild("brawlJoinLabel")
local powerUpNotificationLabel_upvr = script:WaitForChild("powerUpNotificationLabel")
local powerUpsNotificationsFrame_upvr = Parent_3_upvr:WaitForChild("powerUpsNotificationsFrame")
local petsFolder_upvr = LocalPlayer_upvr:WaitForChild("petsFolder")
local powerUpsFolder_upvr = LocalPlayer_upvr:WaitForChild("powerUpsFolder")
local Debris_upvr = game:GetService("Debris")
local GuiService_upvr = game:GetService("GuiService")
local TweenService_upvr = game:GetService("TweenService")
local MarketplaceService_upvr = game:GetService("MarketplaceService")
local leaderstats_3 = LocalPlayer_upvr:WaitForChild("leaderstats")
local Strength_4_upvr = leaderstats_3:WaitForChild("Strength")
local Rebirths_upvr = leaderstats_3:WaitForChild("Rebirths")
local Kills_upvr = leaderstats_3:WaitForChild("Kills")
local Brawls_upvr = leaderstats_3:WaitForChild("Brawls")
local goodKarma_upvr = LocalPlayer_upvr:WaitForChild("goodKarma")
local evilKarma_upvr = LocalPlayer_upvr:WaitForChild("evilKarma")
local Durability_upvr = LocalPlayer_upvr:WaitForChild("Durability")
local Agility_upvr = LocalPlayer_upvr:WaitForChild("Agility")
local Gems_upvr = LocalPlayer_upvr:WaitForChild("Gems")
local rebirthMultiplier_upvr = LocalPlayer_upvr:WaitForChild("rebirthMultiplier")
local currencyFrame_upvr = LocalPlayer_upvr:WaitForChild("PlayerGui"):WaitForChild("currencyFrameGui"):WaitForChild("currencyFrame")
local travelAreaMenu_upvr = Parent_3_upvr:WaitForChild("travelAreaMenu")
local Lighting_upvr = game:GetService("Lighting")
local sideButtons_upvr_3 = Parent_3_upvr:WaitForChild("sideButtons")
local rightSideButtons_upvr = Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("rightSideButtons")
local rebirthMenu_upvr = Parent_3_upvr:WaitForChild("rebirthMenu")
local shopMenu_upvr = Parent_3_upvr:WaitForChild("shopMenu")
local codesMenu_upvr = Parent_3_upvr:WaitForChild("codesMenu")
local itemsMenu_upvr = Parent_3_upvr:WaitForChild("itemsMenu")
local groupRewardsMenu_upvr = Parent_3_upvr:WaitForChild("groupRewardsMenu")
local notInGroupMenu_upvr = Parent_3_upvr:WaitForChild("notInGroupMenu")
local settingsMenu_upvr = Parent_3_upvr:WaitForChild("settingsMenu")
local helpMenu_upvr = Parent_3_upvr:WaitForChild("helpMenu")
local statsMenu_upvr = Parent_3_upvr:WaitForChild("statsMenu")
local movesMenu_upvr = Parent_3_upvr:WaitForChild("movesMenu")
local tradeMenu_upvr = Parent_3_upvr:WaitForChild("tradeMenu")
local fortuneMenu_upvr = Parent_3_upvr.Parent:WaitForChild("fortuneWheelMenuGui"):WaitForChild("fortuneMenu")
local upgradePremiumMenu = Parent_3_upvr.Parent:WaitForChild("premiumGui"):WaitForChild("upgradePremiumMenu")
local packsMenu_upvr = Parent_3_upvr.Parent:WaitForChild("packsGui"):WaitForChild("packsMenu")
local questsMenu = Parent_3_upvr.Parent:WaitForChild("questsGui"):WaitForChild("questsMenu")
rightSideButtons_upvr:WaitForChild("packsButton"):WaitForChild("whichMenu").Value = packsMenu_upvr
rightSideButtons_upvr:WaitForChild("questsButton"):WaitForChild("whichMenu").Value = questsMenu
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):WaitForChild("giftsButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):WaitForChild("freeGiftsMenu")
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):WaitForChild("codesButton"):WaitForChild("whichMenu").Value = codesMenu_upvr
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):WaitForChild("ultimateButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu")
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):WaitForChild("upgradeButton"):WaitForChild("whichMenu").Value = upgradePremiumMenu
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("specialOfferButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):WaitForChild("specialOfferMenu")
rightSideButtons_upvr:WaitForChild("fortuneButton"):WaitForChild("whichMenu").Value = fortuneMenu_upvr
rightSideButtons_upvr:WaitForChild("movesButton"):WaitForChild("whichMenu").Value = movesMenu_upvr
currencyFrame_upvr:WaitForChild("settingsButton"):WaitForChild("whichMenu").Value = settingsMenu_upvr
local tradePanel_upvr = Parent_3_upvr:WaitForChild("tradePanel")
local tbl_2_upvr = {rebirthMenu_upvr, shopMenu_upvr, codesMenu_upvr, itemsMenu_upvr, groupRewardsMenu_upvr, notInGroupMenu_upvr, settingsMenu_upvr, helpMenu_upvr, statsMenu_upvr, movesMenu_upvr, tradeMenu_upvr, fortuneMenu_upvr, upgradePremiumMenu, packsMenu_upvr, questsMenu, Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("updateCountdownMenu"), Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("x2WeekendMenu"), Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):WaitForChild("freeGiftsMenu"), Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu"), Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):WaitForChild("specialOfferMenu")}
statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("playerImage").Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..tostring(LocalPlayer_upvr.UserId).."&width=420&height=420&format=png"
statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("nameLabel").Text = LocalPlayer_upvr.DisplayName
statsMenu_upvr.playerImageFrame.nameLabel:WaitForChild("shadow").Text = statsMenu_upvr.playerImageFrame.nameLabel.Text
local sidePetMenu_upvr = itemsMenu_upvr:WaitForChild("sidePetMenu")
local paidTradingDisabled_upvr = LocalPlayer_upvr:WaitForChild("paidTradingDisabled")
local sideBoostMenu_upvr = itemsMenu_upvr:WaitForChild("sideBoostMenu")
local powerUpEquipFrame_upvr = itemsMenu_upvr:WaitForChild("powerUpEquipFrame")
local equippedPowerUp_upvr = LocalPlayer_upvr:WaitForChild("equippedPowerUp")
local Backpack_upvr = LocalPlayer_upvr:WaitForChild("Backpack")
local inventoryPage_upvr = script:WaitForChild("inventoryPage")
local var75_upvw = false
local var76_upvw = false
local var77_upvw
local var78_upvw
local onButton_upvr = settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("musicSetting"):WaitForChild("onButton")
local rarityColorsFolder_upvr = ReplicatedStorage_upvr:WaitForChild("rarityColorsFolder")
local areaWarningLabel_upvr = Parent_3_upvr:WaitForChild("areaWarningLabel")
local var82_upvw
local tostring_result1_upvw = tostring(math.floor(Humanoid_upvr.WalkSpeed))
local tostring_result1_upvw_2 = tostring(math.floor(BodyHeightScale_upvr.Value))
local usingCustomSpeed_upvr = LocalPlayer_upvr:WaitForChild("usingCustomSpeed")
local usingCustomSize_upvr = LocalPlayer_upvr:WaitForChild("usingCustomSize")
local ownedGamepasses_upvr = LocalPlayer_upvr:WaitForChild("ownedGamepasses")
local petsFrames_upvr_2 = itemsMenu_upvr:WaitForChild("petsFrames")
local powerUpFrames_upvr = itemsMenu_upvr:WaitForChild("powerUpFrames")
local boostsFrames_upvr = itemsMenu_upvr:WaitForChild("boostsFrames")
local perkImage_upvr = script:WaitForChild("perkImage")
local powerUpButton_upvr = script:WaitForChild("powerUpButton")
local tradingOn_3_upvr = LocalPlayer_upvr:WaitForChild("tradingOn")
local var94_upvw = 1
local var95_upvw = 0
local var96_upvw = 1
local var97_upvw = 0
local var98_upvw = 1
local var99_upvw = 0
local tbl_upvr = {-15, 15}
local function resetSeaAndSky_upvr() -- Line 327, Named "resetSeaAndSky"
    --[[ Upvalues[1]:
        [1]: Lighting_upvr (readonly)
    ]]
    if Lighting_upvr:FindFirstChild("orangeBrawlSky") ~= nil then
        Lighting_upvr.orangeBrawlSky:Destroy()
    end
    Lighting_upvr.FogColor = Color3.fromRGB(0, 170, 255)
    workspace:WaitForChild("seaPart").Color = Color3.fromRGB(107, 183, 223)
    workspace:WaitForChild("underSea").Color = Color3.fromRGB(89, 131, 153)
end
resetSeaAndSky_upvr()
if Lighting_upvr:FindFirstChild("screenBlur") == nil then
    local BlurEffect_upvw = Instance.new("BlurEffect")
    BlurEffect_upvw.Name = "screenBlur"
    BlurEffect_upvw.Size = 0
    BlurEffect_upvw.Parent = Lighting_upvr
else
    BlurEffect_upvw.Size = 0  by plusgiant5 (https://discord.gg/brNTY8nX8t)
-- Decompiled on 2025-10-10 16:18:11
-- Luau version 6, Types version 3
-- Time taken: 0.238447 seconds

local LocalPlayer_upvr = game.Players.LocalPlayer
repeat
    wait()
until LocalPlayer_upvr.Character
local Character_upvr = LocalPlayer_upvr.Character
local Humanoid_upvr = Character_upvr:WaitForChild("Humanoid")
if LocalPlayer_upvr:WaitForChild("dataLoaded").Value == false then
    script.Parent:WaitForChild("loadingDataLabel").Visible = true
    repeat
        wait()
        local var4
        if var4 < 15.1 then
            var4 += 0.03
        end
        if 15 <= var4 and script.Parent:WaitForChild("tooLongLoadingLabel").Visible == false then
            script.Parent:WaitForChild("tooLongLoadingLabel").Visible = true
        end
        local var5
        if 0.5 <= 0 + 0.03 then
            if 4 <= var5 then
                var5 = 1
            else
                var5 += 1
            end
            script.Parent:WaitForChild("loadingDataLabel").Text = "Loading Data"..({"", '.', "..", "..."})[var5]
            script.Parent.loadingDataLabel:WaitForChild("shadow").Text = script.Parent.loadingDataLabel.Text
        end
    until LocalPlayer_upvr:WaitForChild("dataLoaded").Value == true
    script.Parent:WaitForChild("loadingDataLabel").Visible = false
    script.Parent:WaitForChild("tooLongLoadingLabel").Visible = false
end
local Parent_3_upvr = script.Parent
local hoverSound_upvr = script:WaitForChild("hoverSound")
local deniedSound_upvr = script:WaitForChild("deniedSound")
local clickSound_upvr = script:WaitForChild("clickSound")
local levelUpSound_upvr = script:WaitForChild("levelUpSound")
local explosionSound_upvr = script:WaitForChild("explosionSound")
local gemsSound_upvr = script:WaitForChild("gemsSound")
local powerUpLevelUpSound_upvr = script:WaitForChild("powerUpLevelUpSound")
local ReplicatedStorage_upvr = game:GetService("ReplicatedStorage")
local rEvents_upvr = ReplicatedStorage_upvr:WaitForChild("rEvents")
local module_upvr_2 = require(ReplicatedStorage_upvr:WaitForChild("globalFunctions"))
local shortenNumber_upvr = module_upvr_2.shortenNumber
local calculateRequiredRebirthStrength_upvr = module_upvr_2.calculateRequiredRebirthStrength
local getNumberOfSamePowerUp_upvr = module_upvr_2.getNumberOfSamePowerUp
local BodyWidthScale_upvr = Humanoid_upvr:WaitForChild("BodyWidthScale")
local BodyHeightScale_upvr = Humanoid_upvr:WaitForChild("BodyHeightScale")
local brawlTitleFrame_upvr = Parent_3_upvr:WaitForChild("brawlTitleFrame")
local any_getPlayerPlatform_result1_upvr = module_upvr_2.getPlayerPlatform()
local brawlJoinLabel_upvr = Parent_3_upvr:WaitForChild("brawlJoinLabel")
local powerUpNotificationLabel_upvr = script:WaitForChild("powerUpNotificationLabel")
local powerUpsNotificationsFrame_upvr = Parent_3_upvr:WaitForChild("powerUpsNotificationsFrame")
local petsFolder_upvr = LocalPlayer_upvr:WaitForChild("petsFolder")
local powerUpsFolder_upvr = LocalPlayer_upvr:WaitForChild("powerUpsFolder")
local Debris_upvr = game:GetService("Debris")
local GuiService_upvr = game:GetService("GuiService")
local TweenService_upvr = game:GetService("TweenService")
local MarketplaceService_upvr = game:GetService("MarketplaceService")
local leaderstats_3 = LocalPlayer_upvr:WaitForChild("leaderstats")
local Strength_4_upvr = leaderstats_3:WaitForChild("Strength")
local Rebirths_upvr = leaderstats_3:WaitForChild("Rebirths")
local Kills_upvr = leaderstats_3:WaitForChild("Kills")
local Brawls_upvr = leaderstats_3:WaitForChild("Brawls")
local goodKarma_upvr = LocalPlayer_upvr:WaitForChild("goodKarma")
local evilKarma_upvr = LocalPlayer_upvr:WaitForChild("evilKarma")
local Durability_upvr = LocalPlayer_upvr:WaitForChild("Durability")
local Agility_upvr = LocalPlayer_upvr:WaitForChild("Agility")
local Gems_upvr = LocalPlayer_upvr:WaitForChild("Gems")
local rebirthMultiplier_upvr = LocalPlayer_upvr:WaitForChild("rebirthMultiplier")
local currencyFrame_upvr = LocalPlayer_upvr:WaitForChild("PlayerGui"):WaitForChild("currencyFrameGui"):WaitForChild("currencyFrame")
local travelAreaMenu_upvr = Parent_3_upvr:WaitForChild("travelAreaMenu")
local Lighting_upvr = game:GetService("Lighting")
local sideButtons_upvr_3 = Parent_3_upvr:WaitForChild("sideButtons")
local rightSideButtons_upvr = Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("rightSideButtons")
local rebirthMenu_upvr = Parent_3_upvr:WaitForChild("rebirthMenu")
local shopMenu_upvr = Parent_3_upvr:WaitForChild("shopMenu")
local codesMenu_upvr = Parent_3_upvr:WaitForChild("codesMenu")
local itemsMenu_upvr = Parent_3_upvr:WaitForChild("itemsMenu")
local groupRewardsMenu_upvr = Parent_3_upvr:WaitForChild("groupRewardsMenu")
local notInGroupMenu_upvr = Parent_3_upvr:WaitForChild("notInGroupMenu")
local settingsMenu_upvr = Parent_3_upvr:WaitForChild("settingsMenu")
local helpMenu_upvr = Parent_3_upvr:WaitForChild("helpMenu")
local statsMenu_upvr = Parent_3_upvr:WaitForChild("statsMenu")
local movesMenu_upvr = Parent_3_upvr:WaitForChild("movesMenu")
local tradeMenu_upvr = Parent_3_upvr:WaitForChild("tradeMenu")
local fortuneMenu_upvr = Parent_3_upvr.Parent:WaitForChild("fortuneWheelMenuGui"):WaitForChild("fortuneMenu")
local upgradePremiumMenu = Parent_3_upvr.Parent:WaitForChild("premiumGui"):WaitForChild("upgradePremiumMenu")
local packsMenu_upvr = Parent_3_upvr.Parent:WaitForChild("packsGui"):WaitForChild("packsMenu")
local questsMenu = Parent_3_upvr.Parent:WaitForChild("questsGui"):WaitForChild("questsMenu")
rightSideButtons_upvr:WaitForChild("packsButton"):WaitForChild("whichMenu").Value = packsMenu_upvr
rightSideButtons_upvr:WaitForChild("questsButton"):WaitForChild("whichMenu").Value = questsMenu
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):WaitForChild("giftsButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):WaitForChild("freeGiftsMenu")
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):WaitForChild("codesButton"):WaitForChild("whichMenu").Value = codesMenu_upvr
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):WaitForChild("ultimateButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu")
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):WaitForChild("upgradeButton"):WaitForChild("whichMenu").Value = upgradePremiumMenu
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("specialOfferButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):WaitForChild("specialOfferMenu")
rightSideButtons_upvr:WaitForChild("fortuneButton"):WaitForChild("whichMenu").Value = fortuneMenu_upvr
rightSideButtons_upvr:WaitForChild("movesButton"):WaitForChild("whichMenu").Value = movesMenu_upvr
currencyFrame_upvr:WaitForChild("settingsButton"):WaitForChild("whichMenu").Value = settingsMenu_upvr
local tradePanel_upvr = Parent_3_upvr:WaitForChild("tradePanel")
local tbl_2_upvr = {rebirthMenu_upvr, shopMenu_upvr, codesMenu_upvr, itemsMenu_upvr, groupRewardsMenu_upvr, notInGroupMenu_upvr, settingsMenu_upvr, helpMenu_upvr, statsMenu_upvr, movesMenu_upvr, tradeMenu_upvr, fortuneMenu_upvr, upgradePremiumMenu, packsMenu_upvr, questsMenu, Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("updateCountdownMenu"), Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("x2WeekendMenu"), Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):WaitForChild("freeGiftsMenu"), Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu"), Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):WaitForChild("specialOfferMenu")}
statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("playerImage").Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..tostring(LocalPlayer_upvr.UserId).."&width=420&height=420&format=png"
statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("nameLabel").Text = LocalPlayer_upvr.DisplayName
statsMenu_upvr.playerImageFrame.nameLabel:WaitForChild("shadow").Text = statsMenu_upvr.playerImageFrame.nameLabel.Text
local sidePetMenu_upvr = itemsMenu_upvr:WaitForChild("sidePetMenu")
local paidTradingDisabled_upvr = LocalPlayer_upvr:WaitForChild("paidTradingDisabled")
local sideBoostMenu_upvr = itemsMenu_upvr:WaitForChild("sideBoostMenu")
local powerUpEquipFrame_upvr = itemsMenu_upvr:WaitForChild("powerUpEquipFrame")
local equippedPowerUp_upvr = LocalPlayer_upvr:WaitForChild("equippedPowerUp")
local Backpack_upvr = LocalPlayer_upvr:WaitForChild("Backpack")
local inventoryPage_upvr = script:WaitForChild("inventoryPage")
local var75_upvw = false
local var76_upvw = false
local var77_upvw
local var78_upvw
local onButton_upvr = settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("musicSetting"):WaitForChild("onButton")
local rarityColorsFolder_upvr = ReplicatedStorage_upvr:WaitForChild("rarityColorsFolder")
local areaWarningLabel_upvr = Parent_3_upvr:WaitForChild("areaWarningLabel")
local var82_upvw
local tostring_result1_upvw = tostring(math.floor(Humanoid_upvr.WalkSpeed))
local tostring_result1_upvw_2 = tostring(math.floor(BodyHeightScale_upvr.Value))
local usingCustomSpeed_upvr = LocalPlayer_upvr:WaitForChild("usingCustomSpeed")
local usingCustomSize_upvr = LocalPlayer_upvr:WaitForChild("usingCustomSize")
local ownedGamepasses_upvr = LocalPlayer_upvr:WaitForChild("ownedGamepasses")
local petsFrames_upvr_2 = itemsMenu_upvr:WaitForChild("petsFrames")
local powerUpFrames_upvr = itemsMenu_upvr:WaitForChild("powerUpFrames")
local boostsFrames_upvr = itemsMenu_upvr:WaitForChild("boostsFrames")
local perkImage_upvr = script:WaitForChild("perkImage")
local powerUpButton_upvr = script:WaitForChild("powerUpButton")
local tradingOn_3_upvr = LocalPlayer_upvr:WaitForChild("tradingOn")
local var94_upvw = 1
local var95_upvw = 0
local var96_upvw = 1
local var97_upvw = 0
local var98_upvw = 1
local var99_upvw = 0
local tbl_upvr = {-15, 15}
local function resetSeaAndSky_upvr() -- Line 327, Named "resetSeaAndSky"
    --[[ Upvalues[1]:
        [1]: Lighting_upvr (readonly)
    ]]
    if Lighting_upvr:FindFirstChild("orangeBrawlSky") ~= nil then
        Lighting_upvr.orangeBrawlSky:Destroy()
    end
    Lighting_upvr.FogColor = Color3.fromRGB(0, 170, 255)
    workspace:WaitForChild("seaPart").Color = Color3.fromRGB(107, 183, 223)
    workspace:WaitForChild("underSea").Color = Color3.fromRGB(89, 131, 153)
end
resetSeaAndSky_upvr()
if Lighting_upvr:FindFirstChild("screenBlur") == nil then
    local BlurEffect_upvw = Instance.new("BlurEffect")
    BlurEffect_upvw.Name = "screenBlur"
    BlurEffect_upvw.Size = 0
    BlurEffect_upvw.Parent = Lighting_upvr
else
    BlurEffect_upvw.Size = 0  by plusgiant5 (https://discord.gg/brNTY8nX8t)
-- Decompiled on 2025-10-10 16:18:11
-- Luau version 6, Types version 3
-- Time taken: 0.238447 seconds

local LocalPlayer_upvr = game.Players.LocalPlayer
repeat
    wait()
until LocalPlayer_upvr.Character
local Character_upvr = LocalPlayer_upvr.Character
local Humanoid_upvr = Character_upvr:WaitForChild("Humanoid")
if LocalPlayer_upvr:WaitForChild("dataLoaded").Value == false then
    script.Parent:WaitForChild("loadingDataLabel").Visible = true
    repeat
        wait()
        local var4
        if var4 < 15.1 then
            var4 += 0.03
        end
        if 15 <= var4 and script.Parent:WaitForChild("tooLongLoadingLabel").Visible == false then
            script.Parent:WaitForChild("tooLongLoadingLabel").Visible = true
        end
        local var5
        if 0.5 <= 0 + 0.03 then
            if 4 <= var5 then
                var5 = 1
            else
                var5 += 1
            end
            script.Parent:WaitForChild("loadingDataLabel").Text = "Loading Data"..({"", '.', "..", "..."})[var5]
            script.Parent.loadingDataLabel:WaitForChild("shadow").Text = script.Parent.loadingDataLabel.Text
        end
    until LocalPlayer_upvr:WaitForChild("dataLoaded").Value == true
    script.Parent:WaitForChild("loadingDataLabel").Visible = false
    script.Parent:WaitForChild("tooLongLoadingLabel").Visible = false
end
local Parent_3_upvr = script.Parent
local hoverSound_upvr = script:WaitForChild("hoverSound")
local deniedSound_upvr = script:WaitForChild("deniedSound")
local clickSound_upvr = script:WaitForChild("clickSound")
local levelUpSound_upvr = script:WaitForChild("levelUpSound")
local explosionSound_upvr = script:WaitForChild("explosionSound")
local gemsSound_upvr = script:WaitForChild("gemsSound")
local powerUpLevelUpSound_upvr = script:WaitForChild("powerUpLevelUpSound")
local ReplicatedStorage_upvr = game:GetService("ReplicatedStorage")
local rEvents_upvr = ReplicatedStorage_upvr:WaitForChild("rEvents")
local module_upvr_2 = require(ReplicatedStorage_upvr:WaitForChild("globalFunctions"))
local shortenNumber_upvr = module_upvr_2.shortenNumber
local calculateRequiredRebirthStrength_upvr = module_upvr_2.calculateRequiredRebirthStrength
local getNumberOfSamePowerUp_upvr = module_upvr_2.getNumberOfSamePowerUp
local BodyWidthScale_upvr = Humanoid_upvr:WaitForChild("BodyWidthScale")
local BodyHeightScale_upvr = Humanoid_upvr:WaitForChild("BodyHeightScale")
local brawlTitleFrame_upvr = Parent_3_upvr:WaitForChild("brawlTitleFrame")
local any_getPlayerPlatform_result1_upvr = module_upvr_2.getPlayerPlatform()
local brawlJoinLabel_upvr = Parent_3_upvr:WaitForChild("brawlJoinLabel")
local powerUpNotificationLabel_upvr = script:WaitForChild("powerUpNotificationLabel")
local powerUpsNotificationsFrame_upvr = Parent_3_upvr:WaitForChild("powerUpsNotificationsFrame")
local petsFolder_upvr = LocalPlayer_upvr:WaitForChild("petsFolder")
local powerUpsFolder_upvr = LocalPlayer_upvr:WaitForChild("powerUpsFolder")
local Debris_upvr = game:GetService("Debris")
local GuiService_upvr = game:GetService("GuiService")
local TweenService_upvr = game:GetService("TweenService")
local MarketplaceService_upvr = game:GetService("MarketplaceService")
local leaderstats_3 = LocalPlayer_upvr:WaitForChild("leaderstats")
local Strength_4_upvr = leaderstats_3:WaitForChild("Strength")
local Rebirths_upvr = leaderstats_3:WaitForChild("Rebirths")
local Kills_upvr = leaderstats_3:WaitForChild("Kills")
local Brawls_upvr = leaderstats_3:WaitForChild("Brawls")
local goodKarma_upvr = LocalPlayer_upvr:WaitForChild("goodKarma")
local evilKarma_upvr = LocalPlayer_upvr:WaitForChild("evilKarma")
local Durability_upvr = LocalPlayer_upvr:WaitForChild("Durability")
local Agility_upvr = LocalPlayer_upvr:WaitForChild("Agility")
local Gems_upvr = LocalPlayer_upvr:WaitForChild("Gems")
local rebirthMultiplier_upvr = LocalPlayer_upvr:WaitForChild("rebirthMultiplier")
local currencyFrame_upvr = LocalPlayer_upvr:WaitForChild("PlayerGui"):WaitForChild("currencyFrameGui"):WaitForChild("currencyFrame")
local travelAreaMenu_upvr = Parent_3_upvr:WaitForChild("travelAreaMenu")
local Lighting_upvr = game:GetService("Lighting")
local sideButtons_upvr_3 = Parent_3_upvr:WaitForChild("sideButtons")
local rightSideButtons_upvr = Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("rightSideButtons")
local rebirthMenu_upvr = Parent_3_upvr:WaitForChild("rebirthMenu")
local shopMenu_upvr = Parent_3_upvr:WaitForChild("shopMenu")
local codesMenu_upvr = Parent_3_upvr:WaitForChild("codesMenu")
local itemsMenu_upvr = Parent_3_upvr:WaitForChild("itemsMenu")
local groupRewardsMenu_upvr = Parent_3_upvr:WaitForChild("groupRewardsMenu")
local notInGroupMenu_upvr = Parent_3_upvr:WaitForChild("notInGroupMenu")
local settingsMenu_upvr = Parent_3_upvr:WaitForChild("settingsMenu")
local helpMenu_upvr = Parent_3_upvr:WaitForChild("helpMenu")
local statsMenu_upvr = Parent_3_upvr:WaitForChild("statsMenu")
local movesMenu_upvr = Parent_3_upvr:WaitForChild("movesMenu")
local tradeMenu_upvr = Parent_3_upvr:WaitForChild("tradeMenu")
local fortuneMenu_upvr = Parent_3_upvr.Parent:WaitForChild("fortuneWheelMenuGui"):WaitForChild("fortuneMenu")
local upgradePremiumMenu = Parent_3_upvr.Parent:WaitForChild("premiumGui"):WaitForChild("upgradePremiumMenu")
local packsMenu_upvr = Parent_3_upvr.Parent:WaitForChild("packsGui"):WaitForChild("packsMenu")
local questsMenu = Parent_3_upvr.Parent:WaitForChild("questsGui"):WaitForChild("questsMenu")
rightSideButtons_upvr:WaitForChild("packsButton"):WaitForChild("whichMenu").Value = packsMenu_upvr
rightSideButtons_upvr:WaitForChild("questsButton"):WaitForChild("whichMenu").Value = questsMenu
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):WaitForChild("giftsButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):WaitForChild("freeGiftsMenu")
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):WaitForChild("codesButton"):WaitForChild("whichMenu").Value = codesMenu_upvr
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):WaitForChild("ultimateButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu")
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):WaitForChild("upgradeButton"):WaitForChild("whichMenu").Value = upgradePremiumMenu
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("specialOfferButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):WaitForChild("specialOfferMenu")
rightSideButtons_upvr:WaitForChild("fortuneButton"):WaitForChild("whichMenu").Value = fortuneMenu_upvr
rightSideButtons_upvr:WaitForChild("movesButton"):WaitForChild("whichMenu").Value = movesMenu_upvr
currencyFrame_upvr:WaitForChild("settingsButton"):WaitForChild("whichMenu").Value = settingsMenu_upvr
local tradePanel_upvr = Parent_3_upvr:WaitForChild("tradePanel")
local tbl_2_upvr = {rebirthMenu_upvr, shopMenu_upvr, codesMenu_upvr, itemsMenu_upvr, groupRewardsMenu_upvr, notInGroupMenu_upvr, settingsMenu_upvr, helpMenu_upvr, statsMenu_upvr, movesMenu_upvr, tradeMenu_upvr, fortuneMenu_upvr, upgradePremiumMenu, packsMenu_upvr, questsMenu, Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("updateCountdownMenu"), Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("x2WeekendMenu"), Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):WaitForChild("freeGiftsMenu"), Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu"), Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):WaitForChild("specialOfferMenu")}
statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("playerImage").Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..tostring(LocalPlayer_upvr.UserId).."&width=420&height=420&format=png"
statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("nameLabel").Text = LocalPlayer_upvr.DisplayName
statsMenu_upvr.playerImageFrame.nameLabel:WaitForChild("shadow").Text = statsMenu_upvr.playerImageFrame.nameLabel.Text
local sidePetMenu_upvr = itemsMenu_upvr:WaitForChild("sidePetMenu")
local paidTradingDisabled_upvr = LocalPlayer_upvr:WaitForChild("paidTradingDisabled")
local sideBoostMenu_upvr = itemsMenu_upvr:WaitForChild("sideBoostMenu")
local powerUpEquipFrame_upvr = itemsMenu_upvr:WaitForChild("powerUpEquipFrame")
local equippedPowerUp_upvr = LocalPlayer_upvr:WaitForChild("equippedPowerUp")
local Backpack_upvr = LocalPlayer_upvr:WaitForChild("Backpack")
local inventoryPage_upvr = script:WaitForChild("inventoryPage")
local var75_upvw = false
local var76_upvw = false
local var77_upvw
local var78_upvw
local onButton_upvr = settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("musicSetting"):WaitForChild("onButton")
local rarityColorsFolder_upvr = ReplicatedStorage_upvr:WaitForChild("rarityColorsFolder")
local areaWarningLabel_upvr = Parent_3_upvr:WaitForChild("areaWarningLabel")
local var82_upvw
local tostring_result1_upvw = tostring(math.floor(Humanoid_upvr.WalkSpeed))
local tostring_result1_upvw_2 = tostring(math.floor(BodyHeightScale_upvr.Value))
local usingCustomSpeed_upvr = LocalPlayer_upvr:WaitForChild("usingCustomSpeed")
local usingCustomSize_upvr = LocalPlayer_upvr:WaitForChild("usingCustomSize")
local ownedGamepasses_upvr = LocalPlayer_upvr:WaitForChild("ownedGamepasses")
local petsFrames_upvr_2 = itemsMenu_upvr:WaitForChild("petsFrames")
local powerUpFrames_upvr = itemsMenu_upvr:WaitForChild("powerUpFrames")
local boostsFrames_upvr = itemsMenu_upvr:WaitForChild("boostsFrames")
local perkImage_upvr = script:WaitForChild("perkImage")
local powerUpButton_upvr = script:WaitForChild("powerUpButton")
local tradingOn_3_upvr = LocalPlayer_upvr:WaitForChild("tradingOn")
local var94_upvw = 1
local var95_upvw = 0
local var96_upvw = 1
local var97_upvw = 0
local var98_upvw = 1
local var99_upvw = 0
local tbl_upvr = {-15, 15}
local function resetSeaAndSky_upvr() -- Line 327, Named "resetSeaAndSky"
    --[[ Upvalues[1]:
        [1]: Lighting_upvr (readonly)
    ]]
    if Lighting_upvr:FindFirstChild("orangeBrawlSky") ~= nil then
        Lighting_upvr.orangeBrawlSky:Destroy()
    end
    Lighting_upvr.FogColor = Color3.fromRGB(0, 170, 255)
    workspace:WaitForChild("seaPart").Color = Color3.fromRGB(107, 183, 223)
    workspace:WaitForChild("underSea").Color = Color3.fromRGB(89, 131, 153)
end
resetSeaAndSky_upvr()
if Lighting_upvr:FindFirstChild("screenBlur") == nil then
    local BlurEffect_upvw = Instance.new("BlurEffect")
    BlurEffect_upvw.Name = "screenBlur"
    BlurEffect_upvw.Size = 0
    BlurEffect_upvw.Parent = Lighting_upvr
else
    BlurEffect_upvw.Size = 0  by plusgiant5 (https://discord.gg/brNTY8nX8t)
-- Decompiled on 2025-10-10 16:18:11
-- Luau version 6, Types version 3
-- Time taken: 0.238447 seconds

local LocalPlayer_upvr = game.Players.LocalPlayer
repeat
    wait()
until LocalPlayer_upvr.Character
local Character_upvr = LocalPlayer_upvr.Character
local Humanoid_upvr = Character_upvr:WaitForChild("Humanoid")
if LocalPlayer_upvr:WaitForChild("dataLoaded").Value == false then
    script.Parent:WaitForChild("loadingDataLabel").Visible = true
    repeat
        wait()
        local var4
        if var4 < 15.1 then
            var4 += 0.03
        end
        if 15 <= var4 and script.Parent:WaitForChild("tooLongLoadingLabel").Visible == false then
            script.Parent:WaitForChild("tooLongLoadingLabel").Visible = true
        end
        local var5
        if 0.5 <= 0 + 0.03 then
            if 4 <= var5 then
                var5 = 1
            else
                var5 += 1
            end
            script.Parent:WaitForChild("loadingDataLabel").Text = "Loading Data"..({"", '.', "..", "..."})[var5]
            script.Parent.loadingDataLabel:WaitForChild("shadow").Text = script.Parent.loadingDataLabel.Text
        end
    until LocalPlayer_upvr:WaitForChild("dataLoaded").Value == true
    script.Parent:WaitForChild("loadingDataLabel").Visible = false
    script.Parent:WaitForChild("tooLongLoadingLabel").Visible = false
end
local Parent_3_upvr = script.Parent
local hoverSound_upvr = script:WaitForChild("hoverSound")
local deniedSound_upvr = script:WaitForChild("deniedSound")
local clickSound_upvr = script:WaitForChild("clickSound")
local levelUpSound_upvr = script:WaitForChild("levelUpSound")
local explosionSound_upvr = script:WaitForChild("explosionSound")
local gemsSound_upvr = script:WaitForChild("gemsSound")
local powerUpLevelUpSound_upvr = script:WaitForChild("powerUpLevelUpSound")
local ReplicatedStorage_upvr = game:GetService("ReplicatedStorage")
local rEvents_upvr = ReplicatedStorage_upvr:WaitForChild("rEvents")
local module_upvr_2 = require(ReplicatedStorage_upvr:WaitForChild("globalFunctions"))
local shortenNumber_upvr = module_upvr_2.shortenNumber
local calculateRequiredRebirthStrength_upvr = module_upvr_2.calculateRequiredRebirthStrength
local getNumberOfSamePowerUp_upvr = module_upvr_2.getNumberOfSamePowerUp
local BodyWidthScale_upvr = Humanoid_upvr:WaitForChild("BodyWidthScale")
local BodyHeightScale_upvr = Humanoid_upvr:WaitForChild("BodyHeightScale")
local brawlTitleFrame_upvr = Parent_3_upvr:WaitForChild("brawlTitleFrame")
local any_getPlayerPlatform_result1_upvr = module_upvr_2.getPlayerPlatform()
local brawlJoinLabel_upvr = Parent_3_upvr:WaitForChild("brawlJoinLabel")
local powerUpNotificationLabel_upvr = script:WaitForChild("powerUpNotificationLabel")
local powerUpsNotificationsFrame_upvr = Parent_3_upvr:WaitForChild("powerUpsNotificationsFrame")
local petsFolder_upvr = LocalPlayer_upvr:WaitForChild("petsFolder")
local powerUpsFolder_upvr = LocalPlayer_upvr:WaitForChild("powerUpsFolder")
local Debris_upvr = game:GetService("Debris")
local GuiService_upvr = game:GetService("GuiService")
local TweenService_upvr = game:GetService("TweenService")
local MarketplaceService_upvr = game:GetService("MarketplaceService")
local leaderstats_3 = LocalPlayer_upvr:WaitForChild("leaderstats")
local Strength_4_upvr = leaderstats_3:WaitForChild("Strength")
local Rebirths_upvr = leaderstats_3:WaitForChild("Rebirths")
local Kills_upvr = leaderstats_3:WaitForChild("Kills")
local Brawls_upvr = leaderstats_3:WaitForChild("Brawls")
local goodKarma_upvr = LocalPlayer_upvr:WaitForChild("goodKarma")
local evilKarma_upvr = LocalPlayer_upvr:WaitForChild("evilKarma")
local Durability_upvr = LocalPlayer_upvr:WaitForChild("Durability")
local Agility_upvr = LocalPlayer_upvr:WaitForChild("Agility")
local Gems_upvr = LocalPlayer_upvr:WaitForChild("Gems")
local rebirthMultiplier_upvr = LocalPlayer_upvr:WaitForChild("rebirthMultiplier")
local currencyFrame_upvr = LocalPlayer_upvr:WaitForChild("PlayerGui"):WaitForChild("currencyFrameGui"):WaitForChild("currencyFrame")
local travelAreaMenu_upvr = Parent_3_upvr:WaitForChild("travelAreaMenu")
local Lighting_upvr = game:GetService("Lighting")
local sideButtons_upvr_3 = Parent_3_upvr:WaitForChild("sideButtons")
local rightSideButtons_upvr = Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("rightSideButtons")
local rebirthMenu_upvr = Parent_3_upvr:WaitForChild("rebirthMenu")
local shopMenu_upvr = Parent_3_upvr:WaitForChild("shopMenu")
local codesMenu_upvr = Parent_3_upvr:WaitForChild("codesMenu")
local itemsMenu_upvr = Parent_3_upvr:WaitForChild("itemsMenu")
local groupRewardsMenu_upvr = Parent_3_upvr:WaitForChild("groupRewardsMenu")
local notInGroupMenu_upvr = Parent_3_upvr:WaitForChild("notInGroupMenu")
local settingsMenu_upvr = Parent_3_upvr:WaitForChild("settingsMenu")
local helpMenu_upvr = Parent_3_upvr:WaitForChild("helpMenu")
local statsMenu_upvr = Parent_3_upvr:WaitForChild("statsMenu")
local movesMenu_upvr = Parent_3_upvr:WaitForChild("movesMenu")
local tradeMenu_upvr = Parent_3_upvr:WaitForChild("tradeMenu")
local fortuneMenu_upvr = Parent_3_upvr.Parent:WaitForChild("fortuneWheelMenuGui"):WaitForChild("fortuneMenu")
local upgradePremiumMenu = Parent_3_upvr.Parent:WaitForChild("premiumGui"):WaitForChild("upgradePremiumMenu")
local packsMenu_upvr = Parent_3_upvr.Parent:WaitForChild("packsGui"):WaitForChild("packsMenu")
local questsMenu = Parent_3_upvr.Parent:WaitForChild("questsGui"):WaitForChild("questsMenu")
rightSideButtons_upvr:WaitForChild("packsButton"):WaitForChild("whichMenu").Value = packsMenu_upvr
rightSideButtons_upvr:WaitForChild("questsButton"):WaitForChild("whichMenu").Value = questsMenu
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):WaitForChild("giftsButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):WaitForChild("freeGiftsMenu")
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):WaitForChild("codesButton"):WaitForChild("whichMenu").Value = codesMenu_upvr
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):WaitForChild("ultimateButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu")
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):WaitForChild("upgradeButton"):WaitForChild("whichMenu").Value = upgradePremiumMenu
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("specialOfferButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):WaitForChild("specialOfferMenu")
rightSideButtons_upvr:WaitForChild("fortuneButton"):WaitForChild("whichMenu").Value = fortuneMenu_upvr
rightSideButtons_upvr:WaitForChild("movesButton"):WaitForChild("whichMenu").Value = movesMenu_upvr
currencyFrame_upvr:WaitForChild("settingsButton"):WaitForChild("whichMenu").Value = settingsMenu_upvr
local tradePanel_upvr = Parent_3_upvr:WaitForChild("tradePanel")
local tbl_2_upvr = {rebirthMenu_upvr, shopMenu_upvr, codesMenu_upvr, itemsMenu_upvr, groupRewardsMenu_upvr, notInGroupMenu_upvr, settingsMenu_upvr, helpMenu_upvr, statsMenu_upvr, movesMenu_upvr, tradeMenu_upvr, fortuneMenu_upvr, upgradePremiumMenu, packsMenu_upvr, questsMenu, Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("updateCountdownMenu"), Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("x2WeekendMenu"), Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):WaitForChild("freeGiftsMenu"), Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu"), Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):WaitForChild("specialOfferMenu")}
statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("playerImage").Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..tostring(LocalPlayer_upvr.UserId).."&width=420&height=420&format=png"
statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("nameLabel").Text = LocalPlayer_upvr.DisplayName
statsMenu_upvr.playerImageFrame.nameLabel:WaitForChild("shadow").Text = statsMenu_upvr.playerImageFrame.nameLabel.Text
local sidePetMenu_upvr = itemsMenu_upvr:WaitForChild("sidePetMenu")
local paidTradingDisabled_upvr = LocalPlayer_upvr:WaitForChild("paidTradingDisabled")
local sideBoostMenu_upvr = itemsMenu_upvr:WaitForChild("sideBoostMenu")
local powerUpEquipFrame_upvr = itemsMenu_upvr:WaitForChild("powerUpEquipFrame")
local equippedPowerUp_upvr = LocalPlayer_upvr:WaitForChild("equippedPowerUp")
local Backpack_upvr = LocalPlayer_upvr:WaitForChild("Backpack")
local inventoryPage_upvr = script:WaitForChild("inventoryPage")
local var75_upvw = false
local var76_upvw = false
local var77_upvw
local var78_upvw
local onButton_upvr = settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("musicSetting"):WaitForChild("onButton")
local rarityColorsFolder_upvr = ReplicatedStorage_upvr:WaitForChild("rarityColorsFolder")
local areaWarningLabel_upvr = Parent_3_upvr:WaitForChild("areaWarningLabel")
local var82_upvw
local tostring_result1_upvw = tostring(math.floor(Humanoid_upvr.WalkSpeed))
local tostring_result1_upvw_2 = tostring(math.floor(BodyHeightScale_upvr.Value))
local usingCustomSpeed_upvr = LocalPlayer_upvr:WaitForChild("usingCustomSpeed")
local usingCustomSize_upvr = LocalPlayer_upvr:WaitForChild("usingCustomSize")
local ownedGamepasses_upvr = LocalPlayer_upvr:WaitForChild("ownedGamepasses")
local petsFrames_upvr_2 = itemsMenu_upvr:WaitForChild("petsFrames")
local powerUpFrames_upvr = itemsMenu_upvr:WaitForChild("powerUpFrames")
local boostsFrames_upvr = itemsMenu_upvr:WaitForChild("boostsFrames")
local perkImage_upvr = script:WaitForChild("perkImage")
local powerUpButton_upvr = script:WaitForChild("powerUpButton")
local tradingOn_3_upvr = LocalPlayer_upvr:WaitForChild("tradingOn")
local var94_upvw = 1
local var95_upvw = 0
local var96_upvw = 1
local var97_upvw = 0
local var98_upvw = 1
local var99_upvw = 0
local tbl_upvr = {-15, 15}
local function resetSeaAndSky_upvr() -- Line 327, Named "resetSeaAndSky"
    --[[ Upvalues[1]:
        [1]: Lighting_upvr (readonly)
    ]]
    if Lighting_upvr:FindFirstChild("orangeBrawlSky") ~= nil then
        Lighting_upvr.orangeBrawlSky:Destroy()
    end
    Lighting_upvr.FogColor = Color3.fromRGB(0, 170, 255)
    workspace:WaitForChild("seaPart").Color = Color3.fromRGB(107, 183, 223)
    workspace:WaitForChild("underSea").Color = Color3.fromRGB(89, 131, 153)
end
resetSeaAndSky_upvr()
if Lighting_upvr:FindFirstChild("screenBlur") == nil then
    local BlurEffect_upvw = Instance.new("BlurEffect")
    BlurEffect_upvw.Name = "screenBlur"
    BlurEffect_upvw.Size = 0
    BlurEffect_upvw.Parent = Lighting_upvr
else
    BlurEffect_upvw.Size = 0 I by plusgiant5 (https://discord.gg/brNTY8nX8t)
-- Decompiled on 2025-10-10 16:18:11
-- Luau version 6, Types version 3
-- Time taken: 0.238447 seconds

local LocalPlayer_upvr = game.Players.LocalPlayer
repeat
    wait()
until LocalPlayer_upvr.Character
local Character_upvr = LocalPlayer_upvr.Character
local Humanoid_upvr = Character_upvr:WaitForChild("Humanoid")
if LocalPlayer_upvr:WaitForChild("dataLoaded").Value == false then
    script.Parent:WaitForChild("loadingDataLabel").Visible = true
    repeat
        wait()
        local var4
        if var4 < 15.1 then
            var4 += 0.03
        end
        if 15 <= var4 and script.Parent:WaitForChild("tooLongLoadingLabel").Visible == false then
            script.Parent:WaitForChild("tooLongLoadingLabel").Visible = true
        end
        local var5
        if 0.5 <= 0 + 0.03 then
            if 4 <= var5 then
                var5 = 1
            else
                var5 += 1
            end
            script.Parent:WaitForChild("loadingDataLabel").Text = "Loading Data"..({"", '.', "..", "..."})[var5]
            script.Parent.loadingDataLabel:WaitForChild("shadow").Text = script.Parent.loadingDataLabel.Text
        end
    until LocalPlayer_upvr:WaitForChild("dataLoaded").Value == true
    script.Parent:WaitForChild("loadingDataLabel").Visible = false
    script.Parent:WaitForChild("tooLongLoadingLabel").Visible = false
end
local Parent_3_upvr = script.Parent
local hoverSound_upvr = script:WaitForChild("hoverSound")
local deniedSound_upvr = script:WaitForChild("deniedSound")
local clickSound_upvr = script:WaitForChild("clickSound")
local levelUpSound_upvr = script:WaitForChild("levelUpSound")
local explosionSound_upvr = script:WaitForChild("explosionSound")
local gemsSound_upvr = script:WaitForChild("gemsSound")
local powerUpLevelUpSound_upvr = script:WaitForChild("powerUpLevelUpSound")
local ReplicatedStorage_upvr = game:GetService("ReplicatedStorage")
local rEvents_upvr = ReplicatedStorage_upvr:WaitForChild("rEvents")
local module_upvr_2 = require(ReplicatedStorage_upvr:WaitForChild("globalFunctions"))
local shortenNumber_upvr = module_upvr_2.shortenNumber
local calculateRequiredRebirthStrength_upvr = module_upvr_2.calculateRequiredRebirthStrength
local getNumberOfSamePowerUp_upvr = module_upvr_2.getNumberOfSamePowerUp
local BodyWidthScale_upvr = Humanoid_upvr:WaitForChild("BodyWidthScale")
local BodyHeightScale_upvr = Humanoid_upvr:WaitForChild("BodyHeightScale")
local brawlTitleFrame_upvr = Parent_3_upvr:WaitForChild("brawlTitleFrame")
local any_getPlayerPlatform_result1_upvr = module_upvr_2.getPlayerPlatform()
local brawlJoinLabel_upvr = Parent_3_upvr:WaitForChild("brawlJoinLabel")
local powerUpNotificationLabel_upvr = script:WaitForChild("powerUpNotificationLabel")
local powerUpsNotificationsFrame_upvr = Parent_3_upvr:WaitForChild("powerUpsNotificationsFrame")
local petsFolder_upvr = LocalPlayer_upvr:WaitForChild("petsFolder")
local powerUpsFolder_upvr = LocalPlayer_upvr:WaitForChild("powerUpsFolder")
local Debris_upvr = game:GetService("Debris")
local GuiService_upvr = game:GetService("GuiService")
local TweenService_upvr = game:GetService("TweenService")
local MarketplaceService_upvr = game:GetService("MarketplaceService")
local leaderstats_3 = LocalPlayer_upvr:WaitForChild("leaderstats")
local Strength_4_upvr = leaderstats_3:WaitForChild("Strength")
local Rebirths_upvr = leaderstats_3:WaitForChild("Rebirths")
local Kills_upvr = leaderstats_3:WaitForChild("Kills")
local Brawls_upvr = leaderstats_3:WaitForChild("Brawls")
local goodKarma_upvr = LocalPlayer_upvr:WaitForChild("goodKarma")
local evilKarma_upvr = LocalPlayer_upvr:WaitForChild("evilKarma")
local Durability_upvr = LocalPlayer_upvr:WaitForChild("Durability")
local Agility_upvr = LocalPlayer_upvr:WaitForChild("Agility")
local Gems_upvr = LocalPlayer_upvr:WaitForChild("Gems")
local rebirthMultiplier_upvr = LocalPlayer_upvr:WaitForChild("rebirthMultiplier")
local currencyFrame_upvr = LocalPlayer_upvr:WaitForChild("PlayerGui"):WaitForChild("currencyFrameGui"):WaitForChild("currencyFrame")
local travelAreaMenu_upvr = Parent_3_upvr:WaitForChild("travelAreaMenu")
local Lighting_upvr = game:GetService("Lighting")
local sideButtons_upvr_3 = Parent_3_upvr:WaitForChild("sideButtons")
local rightSideButtons_upvr = Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("rightSideButtons")
local rebirthMenu_upvr = Parent_3_upvr:WaitForChild("rebirthMenu")
local shopMenu_upvr = Parent_3_upvr:WaitForChild("shopMenu")
local codesMenu_upvr = Parent_3_upvr:WaitForChild("codesMenu")
local itemsMenu_upvr = Parent_3_upvr:WaitForChild("itemsMenu")
local groupRewardsMenu_upvr = Parent_3_upvr:WaitForChild("groupRewardsMenu")
local notInGroupMenu_upvr = Parent_3_upvr:WaitForChild("notInGroupMenu")
local settingsMenu_upvr = Parent_3_upvr:WaitForChild("settingsMenu")
local helpMenu_upvr = Parent_3_upvr:WaitForChild("helpMenu")
local statsMenu_upvr = Parent_3_upvr:WaitForChild("statsMenu")
local movesMenu_upvr = Parent_3_upvr:WaitForChild("movesMenu")
local tradeMenu_upvr = Parent_3_upvr:WaitForChild("tradeMenu")
local fortuneMenu_upvr = Parent_3_upvr.Parent:WaitForChild("fortuneWheelMenuGui"):WaitForChild("fortuneMenu")
local upgradePremiumMenu = Parent_3_upvr.Parent:WaitForChild("premiumGui"):WaitForChild("upgradePremiumMenu")
local packsMenu_upvr = Parent_3_upvr.Parent:WaitForChild("packsGui"):WaitForChild("packsMenu")
local questsMenu = Parent_3_upvr.Parent:WaitForChild("questsGui"):WaitForChild("questsMenu")
rightSideButtons_upvr:WaitForChild("packsButton"):WaitForChild("whichMenu").Value = packsMenu_upvr
rightSideButtons_upvr:WaitForChild("questsButton"):WaitForChild("whichMenu").Value = questsMenu
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):WaitForChild("giftsButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):WaitForChild("freeGiftsMenu")
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):WaitForChild("codesButton"):WaitForChild("whichMenu").Value = codesMenu_upvr
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):WaitForChild("ultimateButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu")
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):WaitForChild("upgradeButton"):WaitForChild("whichMenu").Value = upgradePremiumMenu
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("specialOfferButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):WaitForChild("specialOfferMenu")
rightSideButtons_upvr:WaitForChild("fortuneButton"):WaitForChild("whichMenu").Value = fortuneMenu_upvr
rightSideButtons_upvr:WaitForChild("movesButton"):WaitForChild("whichMenu").Value = movesMenu_upvr
currencyFrame_upvr:WaitForChild("settingsButton"):WaitForChild("whichMenu").Value = settingsMenu_upvr
local tradePanel_upvr = Parent_3_upvr:WaitForChild("tradePanel")
local tbl_2_upvr = {rebirthMenu_upvr, shopMenu_upvr, codesMenu_upvr, itemsMenu_upvr, groupRewardsMenu_upvr, notInGroupMenu_upvr, settingsMenu_upvr, helpMenu_upvr, statsMenu_upvr, movesMenu_upvr, tradeMenu_upvr, fortuneMenu_upvr, upgradePremiumMenu, packsMenu_upvr, questsMenu, Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("updateCountdownMenu"), Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("x2WeekendMenu"), Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):WaitForChild("freeGiftsMenu"), Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu"), Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):WaitForChild("specialOfferMenu")}
statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("playerImage").Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..tostring(LocalPlayer_upvr.UserId).."&width=420&height=420&format=png"
statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("nameLabel").Text = LocalPlayer_upvr.DisplayName
statsMenu_upvr.playerImageFrame.nameLabel:WaitForChild("shadow").Text = statsMenu_upvr.playerImageFrame.nameLabel.Text
local sidePetMenu_upvr = itemsMenu_upvr:WaitForChild("sidePetMenu")
local paidTradingDisabled_upvr = LocalPlayer_upvr:WaitForChild("paidTradingDisabled")
local sideBoostMenu_upvr = itemsMenu_upvr:WaitForChild("sideBoostMenu")
local powerUpEquipFrame_upvr = itemsMenu_upvr:WaitForChild("powerUpEquipFrame")
local equippedPowerUp_upvr = LocalPlayer_upvr:WaitForChild("equippedPowerUp")
local Backpack_upvr = LocalPlayer_upvr:WaitForChild("Backpack")
local inventoryPage_upvr = script:WaitForChild("inventoryPage")
local var75_upvw = false
local var76_upvw = false
local var77_upvw
local var78_upvw
local onButton_upvr = settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("musicSetting"):WaitForChild("onButton")
local rarityColorsFolder_upvr = ReplicatedStorage_upvr:WaitForChild("rarityColorsFolder")
local areaWarningLabel_upvr = Parent_3_upvr:WaitForChild("areaWarningLabel")
local var82_upvw
local tostring_result1_upvw = tostring(math.floor(Humanoid_upvr.WalkSpeed))
local tostring_result1_upvw_2 = tostring(math.floor(BodyHeightScale_upvr.Value))
local usingCustomSpeed_upvr = LocalPlayer_upvr:WaitForChild("usingCustomSpeed")
local usingCustomSize_upvr = LocalPlayer_upvr:WaitForChild("usingCustomSize")
local ownedGamepasses_upvr = LocalPlayer_upvr:WaitForChild("ownedGamepasses")
local petsFrames_upvr_2 = itemsMenu_upvr:WaitForChild("petsFrames")
local powerUpFrames_upvr = itemsMenu_upvr:WaitForChild("powerUpFrames")
local boostsFrames_upvr = itemsMenu_upvr:WaitForChild("boostsFrames")
local perkImage_upvr = script:WaitForChild("perkImage")
local powerUpButton_upvr = script:WaitForChild("powerUpButton")
local tradingOn_3_upvr = LocalPlayer_upvr:WaitForChild("tradingOn")
local var94_upvw = 1
local var95_upvw = 0
local var96_upvw = 1
local var97_upvw = 0
local var98_upvw = 1
local var99_upvw = 0
local tbl_upvr = {-15, 15}
local function resetSeaAndSky_upvr() -- Line 327, Named "resetSeaAndSky"
    --[[ Upvalues[1]:
        [1]: Lighting_upvr (readonly)
    ]]
    if Lighting_upvr:FindFirstChild("orangeBrawlSky") ~= nil then
        Lighting_upvr.orangeBrawlSky:Destroy()
    end
    Lighting_upvr.FogColor = Color3.fromRGB(0, 170, 255)
    workspace:WaitForChild("seaPart").Color = Color3.fromRGB(107, 183, 223)
    workspace:WaitForChild("underSea").Color = Color3.fromRGB(89, 131, 153)
end
resetSeaAndSky_upvr()
if Lighting_upvr:FindFirstChild("screenBlur") == nil then
    local BlurEffect_upvw = Instance.new("BlurEffect")
    BlurEffect_upvw.Name = "screenBlur"
    BlurEffect_upvw.Size = 0
    BlurEffect_upvw.Parent = Lighting_upvr
else
    BlurEffect_upvw.Size = 0 I by plusgiant5 (https://discord.gg/brNTY8nX8t)
-- Decompiled on 2025-10-10 16:18:11
-- Luau version 6, Types version 3
-- Time taken: 0.238447 seconds

local LocalPlayer_upvr = game.Players.LocalPlayer
repeat
    wait()
until LocalPlayer_upvr.Character
local Character_upvr = LocalPlayer_upvr.Character
local Humanoid_upvr = Character_upvr:WaitForChild("Humanoid")
if LocalPlayer_upvr:WaitForChild("dataLoaded").Value == false then
    script.Parent:WaitForChild("loadingDataLabel").Visible = true
    repeat
        wait()
        local var4
        if var4 < 15.1 then
            var4 += 0.03
        end
        if 15 <= var4 and script.Parent:WaitForChild("tooLongLoadingLabel").Visible == false then
            script.Parent:WaitForChild("tooLongLoadingLabel").Visible = true
        end
        local var5
        if 0.5 <= 0 + 0.03 then
            if 4 <= var5 then
                var5 = 1
            else
                var5 += 1
            end
            script.Parent:WaitForChild("loadingDataLabel").Text = "Loading Data"..({"", '.', "..", "..."})[var5]
            script.Parent.loadingDataLabel:WaitForChild("shadow").Text = script.Parent.loadingDataLabel.Text
        end
    until LocalPlayer_upvr:WaitForChild("dataLoaded").Value == true
    script.Parent:WaitForChild("loadingDataLabel").Visible = false
    script.Parent:WaitForChild("tooLongLoadingLabel").Visible = false
end
local Parent_3_upvr = script.Parent
local hoverSound_upvr = script:WaitForChild("hoverSound")
local deniedSound_upvr = script:WaitForChild("deniedSound")
local clickSound_upvr = script:WaitForChild("clickSound")
local levelUpSound_upvr = script:WaitForChild("levelUpSound")
local explosionSound_upvr = script:WaitForChild("explosionSound")
local gemsSound_upvr = script:WaitForChild("gemsSound")
local powerUpLevelUpSound_upvr = script:WaitForChild("powerUpLevelUpSound")
local ReplicatedStorage_upvr = game:GetService("ReplicatedStorage")
local rEvents_upvr = ReplicatedStorage_upvr:WaitForChild("rEvents")
local module_upvr_2 = require(ReplicatedStorage_upvr:WaitForChild("globalFunctions"))
local shortenNumber_upvr = module_upvr_2.shortenNumber
local calculateRequiredRebirthStrength_upvr = module_upvr_2.calculateRequiredRebirthStrength
local getNumberOfSamePowerUp_upvr = module_upvr_2.getNumberOfSamePowerUp
local BodyWidthScale_upvr = Humanoid_upvr:WaitForChild("BodyWidthScale")
local BodyHeightScale_upvr = Humanoid_upvr:WaitForChild("BodyHeightScale")
local brawlTitleFrame_upvr = Parent_3_upvr:WaitForChild("brawlTitleFrame")
local any_getPlayerPlatform_result1_upvr = module_upvr_2.getPlayerPlatform()
local brawlJoinLabel_upvr = Parent_3_upvr:WaitForChild("brawlJoinLabel")
local powerUpNotificationLabel_upvr = script:WaitForChild("powerUpNotificationLabel")
local powerUpsNotificationsFrame_upvr = Parent_3_upvr:WaitForChild("powerUpsNotificationsFrame")
local petsFolder_upvr = LocalPlayer_upvr:WaitForChild("petsFolder")
local powerUpsFolder_upvr = LocalPlayer_upvr:WaitForChild("powerUpsFolder")
local Debris_upvr = game:GetService("Debris")
local GuiService_upvr = game:GetService("GuiService")
local TweenService_upvr = game:GetService("TweenService")
local MarketplaceService_upvr = game:GetService("MarketplaceService")
local leaderstats_3 = LocalPlayer_upvr:WaitForChild("leaderstats")
local Strength_4_upvr = leaderstats_3:WaitForChild("Strength")
local Rebirths_upvr = leaderstats_3:WaitForChild("Rebirths")
local Kills_upvr = leaderstats_3:WaitForChild("Kills")
local Brawls_upvr = leaderstats_3:WaitForChild("Brawls")
local goodKarma_upvr = LocalPlayer_upvr:WaitForChild("goodKarma")
local evilKarma_upvr = LocalPlayer_upvr:WaitForChild("evilKarma")
local Durability_upvr = LocalPlayer_upvr:WaitForChild("Durability")
local Agility_upvr = LocalPlayer_upvr:WaitForChild("Agility")
local Gems_upvr = LocalPlayer_upvr:WaitForChild("Gems")
local rebirthMultiplier_upvr = LocalPlayer_upvr:WaitForChild("rebirthMultiplier")
local currencyFrame_upvr = LocalPlayer_upvr:WaitForChild("PlayerGui"):WaitForChild("currencyFrameGui"):WaitForChild("currencyFrame")
local travelAreaMenu_upvr = Parent_3_upvr:WaitForChild("travelAreaMenu")
local Lighting_upvr = game:GetService("Lighting")
local sideButtons_upvr_3 = Parent_3_upvr:WaitForChild("sideButtons")
local rightSideButtons_upvr = Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("rightSideButtons")
local rebirthMenu_upvr = Parent_3_upvr:WaitForChild("rebirthMenu")
local shopMenu_upvr = Parent_3_upvr:WaitForChild("shopMenu")
local codesMenu_upvr = Parent_3_upvr:WaitForChild("codesMenu")
local itemsMenu_upvr = Parent_3_upvr:WaitForChild("itemsMenu")
local groupRewardsMenu_upvr = Parent_3_upvr:WaitForChild("groupRewardsMenu")
local notInGroupMenu_upvr = Parent_3_upvr:WaitForChild("notInGroupMenu")
local settingsMenu_upvr = Parent_3_upvr:WaitForChild("settingsMenu")
local helpMenu_upvr = Parent_3_upvr:WaitForChild("helpMenu")
local statsMenu_upvr = Parent_3_upvr:WaitForChild("statsMenu")
local movesMenu_upvr = Parent_3_upvr:WaitForChild("movesMenu")
local tradeMenu_upvr = Parent_3_upvr:WaitForChild("tradeMenu")
local fortuneMenu_upvr = Parent_3_upvr.Parent:WaitForChild("fortuneWheelMenuGui"):WaitForChild("fortuneMenu")
local upgradePremiumMenu = Parent_3_upvr.Parent:WaitForChild("premiumGui"):WaitForChild("upgradePremiumMenu")
local packsMenu_upvr = Parent_3_upvr.Parent:WaitForChild("packsGui"):WaitForChild("packsMenu")
local questsMenu = Parent_3_upvr.Parent:WaitForChild("questsGui"):WaitForChild("questsMenu")
rightSideButtons_upvr:WaitForChild("packsButton"):WaitForChild("whichMenu").Value = packsMenu_upvr
rightSideButtons_upvr:WaitForChild("questsButton"):WaitForChild("whichMenu").Value = questsMenu
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):WaitForChild("giftsButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):WaitForChild("freeGiftsMenu")
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):WaitForChild("codesButton"):WaitForChild("whichMenu").Value = codesMenu_upvr
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):WaitForChild("ultimateButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu")
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):WaitForChild("upgradeButton"):WaitForChild("whichMenu").Value = upgradePremiumMenu
Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("specialOfferButton"):WaitForChild("whichMenu").Value = Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):WaitForChild("specialOfferMenu")
rightSideButtons_upvr:WaitForChild("fortuneButton"):WaitForChild("whichMenu").Value = fortuneMenu_upvr
rightSideButtons_upvr:WaitForChild("movesButton"):WaitForChild("whichMenu").Value = movesMenu_upvr
currencyFrame_upvr:WaitForChild("settingsButton"):WaitForChild("whichMenu").Value = settingsMenu_upvr
local tradePanel_upvr = Parent_3_upvr:WaitForChild("tradePanel")
local tbl_2_upvr = {rebirthMenu_upvr, shopMenu_upvr, codesMenu_upvr, itemsMenu_upvr, groupRewardsMenu_upvr, notInGroupMenu_upvr, settingsMenu_upvr, helpMenu_upvr, statsMenu_upvr, movesMenu_upvr, tradeMenu_upvr, fortuneMenu_upvr, upgradePremiumMenu, packsMenu_upvr, questsMenu, Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("updateCountdownMenu"), Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("x2WeekendMenu"), Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):WaitForChild("freeGiftsMenu"), Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu"), Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):WaitForChild("specialOfferMenu")}
statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("playerImage").Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..tostring(LocalPlayer_upvr.UserId).."&width=420&height=420&format=png"
statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("nameLabel").Text = LocalPlayer_upvr.DisplayName
statsMenu_upvr.playerImageFrame.nameLabel:WaitForChild("shadow").Text = statsMenu_upvr.playerImageFrame.nameLabel.Text
local sidePetMenu_upvr = itemsMenu_upvr:WaitForChild("sidePetMenu")
local paidTradingDisabled_upvr = LocalPlayer_upvr:WaitForChild("paidTradingDisabled")
local sideBoostMenu_upvr = itemsMenu_upvr:WaitForChild("sideBoostMenu")
local powerUpEquipFrame_upvr = itemsMenu_upvr:WaitForChild("powerUpEquipFrame")
local equippedPowerUp_upvr = LocalPlayer_upvr:WaitForChild("equippedPowerUp")
local Backpack_upvr = LocalPlayer_upvr:WaitForChild("Backpack")
local inventoryPage_upvr = script:WaitForChild("inventoryPage")
local var75_upvw = false
local var76_upvw = false
local var77_upvw
local var78_upvw
local onButton_upvr = settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("musicSetting"):WaitForChild("onButton")
local rarityColorsFolder_upvr = ReplicatedStorage_upvr:WaitForChild("rarityColorsFolder")
local areaWarningLabel_upvr = Parent_3_upvr:WaitForChild("areaWarningLabel")
local var82_upvw
local tostring_result1_upvw = tostring(math.floor(Humanoid_upvr.WalkSpeed))
local tostring_result1_upvw_2 = tostring(math.floor(BodyHeightScale_upvr.Value))
local usingCustomSpeed_upvr = LocalPlayer_upvr:WaitForChild("usingCustomSpeed")
local usingCustomSize_upvr = LocalPlayer_upvr:WaitForChild("usingCustomSize")
local ownedGamepasses_upvr = LocalPlayer_upvr:WaitForChild("ownedGamepasses")
local petsFrames_upvr_2 = itemsMenu_upvr:WaitForChild("petsFrames")
local powerUpFrames_upvr = itemsMenu_upvr:WaitForChild("powerUpFrames")
local boostsFrames_upvr = itemsMenu_upvr:WaitForChild("boostsFrames")
local perkImage_upvr = script:WaitForChild("perkImage")
local powerUpButton_upvr = script:WaitForChild("powerUpButton")
local tradingOn_3_upvr = LocalPlayer_upvr:WaitForChild("tradingOn")
local var94_upvw = 1
local var95_upvw = 0
local var96_upvw = 1
local var97_upvw = 0
local var98_upvw = 1
local var99_upvw = 0
local tbl_upvr = {-15, 15}
local function resetSeaAndSky_upvr() -- Line 327, Named "resetSeaAndSky"
    --[[ Upvalues[1]:
        [1]: Lighting_upvr (readonly)
    ]]
    if Lighting_upvr:FindFirstChild("orangeBrawlSky") ~= nil then
        Lighting_upvr.orangeBrawlSky:Destroy()
    end
    Lighting_upvr.FogColor = Color3.fromRGB(0, 170, 255)
    workspace:WaitForChild("seaPart").Color = Color3.fromRGB(107, 183, 223)
    workspace:WaitForChild("underSea").Color = Color3.fromRGB(89, 131, 153)
end
resetSeaAndSky_upvr()
if Lighting_upvr:FindFirstChild("screenBlur") == nil then
    local BlurEffect_upvw = Instance.new("BlurEffect")
    BlurEffect_upvw.Name = "screenBlur"
    BlurEffect_upvw.Size = 0
    BlurEffect_upvw.Parent = Lighting_upvr
else
    BlurEffect_upvw.Size = 0 I
end
local function gameMusicDeathTween_upvr(arg1) -- Line 354, Named "gameMusicDeathTween"
    --[[ Upvalues[1]:
        [1]: TweenService_upvr (readonly)
    ]]
    for _, v in pairs(workspace:WaitForChild("musicFolder"):GetDescendants()) do
        if v ~= nil and v:IsA("Sound") then
            local tbl_7 = {}
            tbl_7.PlaybackSpeed = arg1
            TweenService_upvr:Create(v, TweenInfo.new(2), tbl_7):Play()
        end
    end
end
gameMusicDeathTween_upvr(1)
local var108_upvw
local function blurScreenEffect_upvr() -- Line 369, Named "blurScreenEffect"
    --[[ Upvalues[3]:
        [1]: var108_upvw (read and write)
        [2]: TweenService_upvr (readonly)
        [3]: BlurEffect_upvw (read and write)
    ]]
    if var108_upvw ~= nil then
        var108_upvw:Cancel()
    end
    var108_upvw = TweenService_upvr:Create(BlurEffect_upvw, TweenInfo.new(0.5), {
        Size = 12;
    })
    var108_upvw:Play()
end
local function unblurScreenEffect_upvr() -- Line 380, Named "unblurScreenEffect"
    --[[ Upvalues[3]:
        [1]: var108_upvw (read and write)
        [2]: TweenService_upvr (readonly)
        [3]: BlurEffect_upvw (read and write)
    ]]
    if var108_upvw ~= nil then
        var108_upvw:Cancel()
    end
    var108_upvw = TweenService_upvr:Create(BlurEffect_upvw, TweenInfo.new(0.5), {
        Size = 0;
    })
    var108_upvw:Play()
end
local calculatePowerUpCapacity_upvr = module_upvr_2.calculatePowerUpCapacity
local calculatePetCapacity_upvr = module_upvr_2.calculatePetCapacity
local function calculateRemainingPowerUpCapacity_upvr() -- Line 391, Named "calculateRemainingPowerUpCapacity"
    --[[ Upvalues[6]:
        [1]: itemsMenu_upvr (readonly)
        [2]: calculatePowerUpCapacity_upvr (readonly)
        [3]: powerUpsFolder_upvr (readonly)
        [4]: calculatePetCapacity_upvr (readonly)
        [5]: petsFolder_upvr (readonly)
        [6]: LocalPlayer_upvr (readonly)
    ]]
    itemsMenu_upvr:WaitForChild("bottomItemsMenu"):WaitForChild("capacityLabel").Text = "Capacity: "..tostring(calculatePowerUpCapacity_upvr(powerUpsFolder_upvr) + calculatePetCapacity_upvr(petsFolder_upvr))..'/'..tostring(LocalPlayer_upvr:WaitForChild("maxPetCapacity").Value)
    itemsMenu_upvr:WaitForChild("bottomItemsMenu").capacityLabel:WaitForChild("shadow").Text = itemsMenu_upvr:WaitForChild("bottomItemsMenu").capacityLabel.Text
end
local function _() -- Line 398, Named "updatePetsInfoMenu"
    --[[ Upvalues[1]:
        [1]: calculateRemainingPowerUpCapacity_upvr (readonly)
    ]]
    calculateRemainingPowerUpCapacity_upvr()
end
local module_upvr = require(ReplicatedStorage_upvr:WaitForChild("ChinaPolicyService"))
local function resetMenus_upvr(arg1) -- Line 406, Named "resetMenus"
    --[[ Upvalues[27]:
        [1]: unblurScreenEffect_upvr (readonly)
        [2]: tbl_2_upvr (readonly)
        [3]: TweenService_upvr (readonly)
        [4]: tradeMenu_upvr (readonly)
        [5]: paidTradingDisabled_upvr (readonly)
        [6]: fortuneMenu_upvr (readonly)
        [7]: shopMenu_upvr (readonly)
        [8]: rebirthMenu_upvr (readonly)
        [9]: itemsMenu_upvr (readonly)
        [10]: sidePetMenu_upvr (readonly)
        [11]: sideBoostMenu_upvr (readonly)
        [12]: calculateRemainingPowerUpCapacity_upvr (readonly)
        [13]: codesMenu_upvr (readonly)
        [14]: shortenNumber_upvr (readonly)
        [15]: calculateRequiredRebirthStrength_upvr (readonly)
        [16]: Rebirths_upvr (readonly)
        [17]: LocalPlayer_upvr (readonly)
        [18]: packsMenu_upvr (readonly)
        [19]: settingsMenu_upvr (readonly)
        [20]: usingCustomSpeed_upvr (readonly)
        [21]: tostring_result1_upvw (read and write)
        [22]: Humanoid_upvr (readonly)
        [23]: usingCustomSize_upvr (readonly)
        [24]: tostring_result1_upvw_2 (read and write)
        [25]: BodyHeightScale_upvr (readonly)
        [26]: module_upvr (readonly)
        [27]: blurScreenEffect_upvr (readonly)
    ]]
    if arg1 == nil then
        unblurScreenEffect_upvr()
    end
    for _, v_2 in pairs(tbl_2_upvr) do
        if v_2 ~= nil and v_2 ~= arg1 then
            if v_2:WaitForChild("tweenValue").Value ~= nil then
                v_2.tweenValue.Value:Cancel()
            end
            v_2.tweenValue.Value = TweenService_upvr:Create(v_2, TweenInfo.new(0.25), {
                Visible = false;
            })
            v_2.tweenValue.Value:Play()
            v_2:TweenPosition(UDim2.new(0.5, 0, -2, 0), "In", "Back", 0.25, true)
        elseif v_2 ~= nil and v_2 == arg1 then
            if arg1.Visible == false then
                if arg1 == tradeMenu_upvr then
                    if paidTradingDisabled_upvr.Value == true then
                        do
                            return
                        end
                        -- KONSTANTWARNING: GOTO [89] #61
                    end
                elseif arg1 ~= fortuneMenu_upvr then
                end
                if v_2:WaitForChild("tweenValue").Value ~= nil then
                    v_2.tweenValue.Value:Cancel()
                end
                v_2.Visible = true
                if arg1 == shopMenu_upvr then
                    v_2:TweenPosition(UDim2.new(0.5, 0, 0.525, 0), "Out", "Back", 0.5, true)
                elseif arg1 == rebirthMenu_upvr then
                    v_2:TweenPosition(UDim2.new(0.45, 0, 0.5, 0), "Out", "Back", 0.5, true)
                elseif arg1 == tradeMenu_upvr then
                    v_2:TweenPosition(UDim2.new(0.5, 0, 0.525, 0), "Out", "Back", 0.5, true)
                elseif arg1 == fortuneMenu_upvr then
                    v_2:TweenPosition(UDim2.new(0.5, 0, 0.45, 0), "Out", "Back", 0.5, true)
                else
                    v_2:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), "Out", "Back", 0.5, true)
                end
                if arg1 == itemsMenu_upvr then
                    itemsMenu_upvr:WaitForChild("powerUpEquipFrame").Visible = false
                    sidePetMenu_upvr.Visible = false
                    sideBoostMenu_upvr.Visible = false
                    calculateRemainingPowerUpCapacity_upvr()
                elseif arg1 == codesMenu_upvr then
                    codesMenu_upvr:WaitForChild("codeBox").Text = "Type Code Here"
                    codesMenu_upvr:WaitForChild("codeBox").TextColor3 = Color3.fromRGB(255, 255, 255)
                elseif arg1 == shopMenu_upvr then
                    shopMenu_upvr:WaitForChild("descLabel").Text = ""
                elseif arg1 == rebirthMenu_upvr then
                    rebirthMenu_upvr:WaitForChild("neededLabel"):WaitForChild("amountLabel").Text = shortenNumber_upvr(calculateRequiredRebirthStrength_upvr(Rebirths_upvr.Value, LocalPlayer_upvr)).." Strength"
                    rebirthMenu_upvr.neededLabel.amountLabel:WaitForChild("shadow").Text = rebirthMenu_upvr.neededLabel.amountLabel.Text
                elseif arg1 == packsMenu_upvr then
                    packsMenu_upvr:WaitForChild("descLabel").Text = ""
                    packsMenu_upvr:WaitForChild("packsScrollMenu").CanvasPosition = Vector2.new(0, 0)
                elseif arg1 == settingsMenu_upvr then
                    if usingCustomSpeed_upvr.Value == true then
                        settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("speedSetting"):WaitForChild("amountBox").Text = tostring_result1_upvw
                    else
                        settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("speedSetting"):WaitForChild("amountBox").Text = tostring(math.floor(Humanoid_upvr.WalkSpeed))
                    end
                    if usingCustomSize_upvr.Value == true then
                        settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("sizeSetting"):WaitForChild("amountBox").Text = tostring_result1_upvw_2
                    else
                        settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("sizeSetting"):WaitForChild("amountBox").Text = tostring(math.floor(BodyHeightScale_upvr.Value))
                    end
                elseif arg1 == fortuneMenu_upvr then
                    if LocalPlayer_upvr:WaitForChild("playerJoinedGroup").Value == true then
                        fortuneMenu_upvr:WaitForChild("descLabel").Visible = false
                    elseif LocalPlayer_upvr:WaitForChild("playerJoinedGroup").Value == false and module_upvr:IsActive() == false then
                        fortuneMenu_upvr:WaitForChild("descLabel").Visible = true
                    elseif module_upvr:IsActive() == true then
                        fortuneMenu_upvr:WaitForChild("descLabel").Visible = false
                    end
                end
                blurScreenEffect_upvr()
            else
                unblurScreenEffect_upvr()
                if v_2:WaitForChild("tweenValue").Value ~= nil then
                    v_2.tweenValue.Value:Cancel()
                end
                v_2.tweenValue.Value = TweenService_upvr:Create(v_2, TweenInfo.new(0.25), {
                    Visible = false;
                })
                v_2.tweenValue.Value:Play()
                if arg1 == rebirthMenu_upvr then
                    v_2:TweenPosition(UDim2.new(0.45, 0, -2, 0), "In", "Back", 0.25, true)
                else
                    v_2:TweenPosition(UDim2.new(0.5, 0, -2, 0), "In", "Back", 0.25, true)
                end
            end
        end
    end
end
Parent_3_upvr:WaitForChild("guiEffectsEvent").Event:Connect(function(arg1, arg2) -- Line 526
    --[[ Upvalues[1]:
        [1]: resetMenus_upvr (readonly)
    ]]
    if arg1 == "resetMenus" then
        resetMenus_upvr(arg2)
    end
end)
local var122_upvw
local function connectNewPowerUpLevelUpChange_upvr() -- Line 532, Named "connectNewPowerUpLevelUpChange"
    --[[ Upvalues[9]:
        [1]: var122_upvw (read and write)
        [2]: equippedPowerUp_upvr (readonly)
        [3]: powerUpLevelUpSound_upvr (readonly)
        [4]: powerUpNotificationLabel_upvr (readonly)
        [5]: rarityColorsFolder_upvr (readonly)
        [6]: powerUpsNotificationsFrame_upvr (readonly)
        [7]: TweenService_upvr (readonly)
        [8]: Debris_upvr (readonly)
        [9]: powerUpFrames_upvr (readonly)
    ]]
    if var122_upvw ~= nil then
        var122_upvw:Disconnect()
        var122_upvw = nil
    end
    if equippedPowerUp_upvr.Value ~= nil and equippedPowerUp_upvr.Value:FindFirstChild("level") ~= nil then
        var122_upvw = equippedPowerUp_upvr.Value.level.Changed:Connect(function() -- Line 541
            --[[ Upvalues[8]:
                [1]: powerUpLevelUpSound_upvr (copied, readonly)
                [2]: powerUpNotificationLabel_upvr (copied, readonly)
                [3]: equippedPowerUp_upvr (copied, readonly)
                [4]: rarityColorsFolder_upvr (copied, readonly)
                [5]: powerUpsNotificationsFrame_upvr (copied, readonly)
                [6]: TweenService_upvr (copied, readonly)
                [7]: Debris_upvr (copied, readonly)
                [8]: powerUpFrames_upvr (copied, readonly)
            ]]
            -- KONSTANTERROR: [0] 1. Error Block 19 start (CF ANALYSIS FAILED)
            powerUpLevelUpSound_upvr:Play()
            local clone_9 = powerUpNotificationLabel_upvr:Clone()
            clone_9.Text = equippedPowerUp_upvr.Value.Name.." has reached level "..tostring(equippedPowerUp_upvr.Value.level.Value)..'!'
            clone_9:WaitForChild("shadow").Text = clone_9.Text
            local SOME_3 = rarityColorsFolder_upvr:FindFirstChild(equippedPowerUp_upvr.Value.Parent.Name)
            if SOME_3 ~= nil and SOME_3.Name ~= "Basic" then
                clone_9.TextColor3 = SOME_3.Value
            end
            clone_9.Parent = powerUpsNotificationsFrame_upvr
            TweenService_upvr:Create(clone_9, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
                Size = UDim2.new(1.4, 0, 0.35, 0);
            }):Play()
            Debris_upvr:AddItem(clone_9, 5)
            local pairs_result1_37, pairs_result2_38, pairs_result3_51 = pairs(powerUpFrames_upvr:GetChildren())
            -- KONSTANTERROR: [0] 1. Error Block 19 end (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [188] 126. Error Block 16 start (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [188] 126. Error Block 16 end (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [106] 74. Error Block 5 start (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [106] 74. Error Block 5 end (CF ANALYSIS FAILED)
        end)
    end
end
connectNewPowerUpLevelUpChange_upvr()
local function _(arg1) -- Line 588, Named "newMoveSequence"
    --[[ Upvalues[4]:
        [1]: Parent_3_upvr (readonly)
        [2]: levelUpSound_upvr (readonly)
        [3]: TweenService_upvr (readonly)
        [4]: Debris_upvr (readonly)
    ]]
    coroutine.resume(coroutine.create(function() -- Line 590
        --[[ Upvalues[5]:
            [1]: Parent_3_upvr (copied, readonly)
            [2]: arg1 (readonly)
            [3]: levelUpSound_upvr (copied, readonly)
            [4]: TweenService_upvr (copied, readonly)
            [5]: Debris_upvr (copied, readonly)
        ]]
        local newMoveImage = Parent_3_upvr:WaitForChild("newMoveImage")
        local newSpeedLabel = newMoveImage:WaitForChild("newSpeedLabel")
        for _, v_3 in pairs(newMoveImage:GetDescendants()) do
            if v_3 ~= nil and v_3:IsA("ObjectValue") and v_3.Name == "tweenValue" and v_3.Value ~= nil then
                v_3.Value:Cancel()
            end
        end
        newSpeedLabel.Text = "You unlocked '"..arg1.."'! Equip from your Toolbar or Moves menu!"
        levelUpSound_upvr:Play()
        newMoveImage.Size = UDim2.new(0, 0, 0.1, 0)
        newSpeedLabel.Visible = false
        newSpeedLabel.TextTransparency = 1
        newSpeedLabel.TextStrokeTransparency = 1
        newMoveImage.ImageTransparency = 0
        newMoveImage.Visible = true
        newMoveImage:TweenSize(UDim2.new(0.28, 0, 0.15, 0), "Out", "Quad", 0.5, true)
        wait(0.4)
        local clone_35 = newMoveImage:Clone()
        for _, v_4 in pairs(clone_35:GetChildren()) do
            if v_4 ~= nil and v_4:IsA("UIAspectRatioConstraint") == false then
                v_4:Destroy()
            end
        end
        clone_35.Size = UDim2.new(0.28, 0, 0.15, 0)
        clone_35.ImageTransparency = 0.5
        clone_35.Parent = Parent_3_upvr
        TweenService_upvr:Create(clone_35, TweenInfo.new(0.5), {
            ImageTransparency = 1;
            Size = UDim2.new(0.56, 0, 0.3, 0);
        }):Play()
        Debris_upvr:AddItem(clone_35, 0.5)
        wait(0.5)
        newSpeedLabel.Visible = true
        newSpeedLabel:WaitForChild("tweenValue1").Value = TweenService_upvr:Create(newSpeedLabel, TweenInfo.new(0.25), {
            TextStrokeTransparency = 0.9;
        })
        newSpeedLabel.tweenValue1.Value:Play()
        newSpeedLabel:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(newSpeedLabel, TweenInfo.new(0.5), {
            TextTransparency = 0;
        })
        newSpeedLabel.tweenValue2.Value:Play()
        wait(5)
        newMoveImage:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(newMoveImage, TweenInfo.new(1), {
            ImageTransparency = 1;
        })
        newMoveImage.tweenValue2.Value:Play()
        wait(0.5)
        newSpeedLabel:WaitForChild("tweenValue1").Value = TweenService_upvr:Create(newSpeedLabel, TweenInfo.new(0.5), {
            TextStrokeTransparency = 1;
        })
        newSpeedLabel.tweenValue1.Value:Play()
        newSpeedLabel:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(newSpeedLabel, TweenInfo.new(0.25), {
            TextTransparency = 1;
        })
        newSpeedLabel.tweenValue2.Value:Play()
    end))
end
local function tradeUnlockedSequence_upvr() -- Line 666, Named "tradeUnlockedSequence"
    --[[ Upvalues[5]:
        [1]: paidTradingDisabled_upvr (readonly)
        [2]: Parent_3_upvr (readonly)
        [3]: levelUpSound_upvr (readonly)
        [4]: TweenService_upvr (readonly)
        [5]: Debris_upvr (readonly)
    ]]
    if paidTradingDisabled_upvr.Value == true then
    else
        local tradeUnlockedImage = Parent_3_upvr:WaitForChild("tradeUnlockedImage")
        local newSpeedLabel_2 = tradeUnlockedImage:WaitForChild("newSpeedLabel")
        for _, v_79 in pairs(tradeUnlockedImage:GetDescendants()) do
            if v_79 ~= nil and v_79:IsA("ObjectValue") and v_79.Name == "tweenValue" and v_79.Value ~= nil then
                v_79.Value:Cancel()
            end
        end
        levelUpSound_upvr:Play()
        tradeUnlockedImage.Size = UDim2.new(0, 0, 0.1, 0)
        newSpeedLabel_2.Visible = false
        newSpeedLabel_2.TextTransparency = 1
        newSpeedLabel_2.TextStrokeTransparency = 1
        tradeUnlockedImage.ImageTransparency = 0
        tradeUnlockedImage.Visible = true
        tradeUnlockedImage:TweenSize(UDim2.new(0.32, 0, 0.15, 0), "Out", "Quad", 0.5, true)
        wait(0.4)
        local clone_38 = tradeUnlockedImage:Clone()
        for _, v_80 in pairs(clone_38:GetChildren()) do
            if v_80 ~= nil and v_80:IsA("UIAspectRatioConstraint") == false then
                v_80:Destroy()
            end
        end
        clone_38.Size = UDim2.new(0.4, 0, 0.15, 0)
        clone_38.ImageTransparency = 0.5
        clone_38.Parent = Parent_3_upvr
        TweenService_upvr:Create(clone_38, TweenInfo.new(0.5), {
            ImageTransparency = 1;
            Size = UDim2.new(0.56, 0, 0.3, 0);
        }):Play()
        Debris_upvr:AddItem(clone_38, 0.5)
        wait(0.5)
        newSpeedLabel_2.Visible = true
        newSpeedLabel_2:WaitForChild("tweenValue1").Value = TweenService_upvr:Create(newSpeedLabel_2, TweenInfo.new(0.25), {
            TextStrokeTransparency = 0.9;
        })
        newSpeedLabel_2.tweenValue1.Value:Play()
        newSpeedLabel_2:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(newSpeedLabel_2, TweenInfo.new(0.5), {
            TextTransparency = 0;
        })
        newSpeedLabel_2.tweenValue2.Value:Play()
        wait(5)
        tradeUnlockedImage:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(tradeUnlockedImage, TweenInfo.new(1), {
            ImageTransparency = 1;
        })
        tradeUnlockedImage.tweenValue2.Value:Play()
        wait(0.5)
        newSpeedLabel_2:WaitForChild("tweenValue1").Value = TweenService_upvr:Create(newSpeedLabel_2, TweenInfo.new(0.5), {
            TextStrokeTransparency = 1;
        })
        newSpeedLabel_2.tweenValue1.Value:Play()
        newSpeedLabel_2:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(newSpeedLabel_2, TweenInfo.new(0.25), {
            TextTransparency = 1;
        })
        newSpeedLabel_2.tweenValue2.Value:Play()
    end
end
local function brawlWinSequence_upvr(arg1, arg2) -- Line 764, Named "brawlWinSequence"
    --[[ Upvalues[5]:
        [1]: shortenNumber_upvr (readonly)
        [2]: levelUpSound_upvr (readonly)
        [3]: Parent_3_upvr (readonly)
        [4]: TweenService_upvr (readonly)
        [5]: Debris_upvr (readonly)
    ]]
    local brawlWinLabel = arg1:WaitForChild("brawlWinLabel")
    local gemLabel = arg1:WaitForChild("gemLabel")
    for _, v_5 in pairs(arg1:GetDescendants()) do
        if v_5 ~= nil and v_5:IsA("ObjectValue") and v_5.Name == "tweenValue" and v_5.Value ~= nil then
            v_5.Value:Cancel()
        end
    end
    brawlWinLabel.Text = "+1 Brawl Win"
    gemLabel.Text = '+'..shortenNumber_upvr(arg2).." Gems"
    levelUpSound_upvr:Play()
    arg1.Size = UDim2.new(0, 0, 0.1, 0)
    brawlWinLabel.Visible = false
    gemLabel.Visible = false
    brawlWinLabel.TextTransparency = 1
    brawlWinLabel.TextStrokeTransparency = 1
    gemLabel.TextTransparency = 1
    gemLabel.TextStrokeTransparency = 1
    arg1.ImageTransparency = 0
    arg1.Visible = true
    arg1:TweenSize(UDim2.new(0.3, 0, 0.15, 0), "Out", "Quad", 0.5, true)
    wait(0.4)
    local clone_16 = arg1:Clone()
    for _, v_6 in pairs(clone_16:GetChildren()) do
        if v_6 ~= nil and v_6:IsA("UIAspectRatioConstraint") == false then
            v_6:Destroy()
        end
    end
    clone_16.Size = UDim2.new(0.3, 0, 0.15, 0)
    clone_16.ImageTransparency = 0.5
    clone_16.Parent = Parent_3_upvr
    TweenService_upvr:Create(clone_16, TweenInfo.new(0.5), {
        ImageTransparency = 1;
        Size = UDim2.new(0.56, 0, 0.3, 0);
    }):Play()
    Debris_upvr:AddItem(clone_16, 0.5)
    wait(0.5)
    brawlWinLabel.Visible = true
    brawlWinLabel:WaitForChild("tweenValue1").Value = TweenService_upvr:Create(brawlWinLabel, TweenInfo.new(0.25), {
        TextStrokeTransparency = 0.9;
    })
    brawlWinLabel.tweenValue1.Value:Play()
    brawlWinLabel:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(brawlWinLabel, TweenInfo.new(0.5), {
        TextTransparency = 0;
    })
    brawlWinLabel.tweenValue2.Value:Play()
    wait(0.25)
    gemLabel.Visible = true
    gemLabel:WaitForChild("tweenValue1").Value = TweenService_upvr:Create(gemLabel, TweenInfo.new(0.25), {
        TextStrokeTransparency = 0.9;
    })
    gemLabel.tweenValue1.Value:Play()
    gemLabel:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(gemLabel, TweenInfo.new(0.5), {
        TextTransparency = 0;
    })
    gemLabel.tweenValue2.Value:Play()
    wait(5)
    arg1:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(arg1, TweenInfo.new(1), {
        ImageTransparency = 1;
    })
    arg1.tweenValue2.Value:Play()
    wait(0.5)
    brawlWinLabel:WaitForChild("tweenValue1").Value = TweenService_upvr:Create(brawlWinLabel, TweenInfo.new(0.5), {
        TextStrokeTransparency = 1;
    })
    brawlWinLabel.tweenValue1.Value:Play()
    brawlWinLabel:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(brawlWinLabel, TweenInfo.new(0.25), {
        TextTransparency = 1;
    })
    brawlWinLabel.tweenValue2.Value:Play()
    wait(0.5)
    gemLabel:WaitForChild("tweenValue1").Value = TweenService_upvr:Create(gemLabel, TweenInfo.new(0.5), {
        TextStrokeTransparency = 1;
    })
    gemLabel.tweenValue1.Value:Play()
    gemLabel:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(gemLabel, TweenInfo.new(0.25), {
        TextTransparency = 1;
    })
    gemLabel.tweenValue2.Value:Play()
end
local var192_upvw = true
if 1000 <= Strength_4_upvr.Value or 1 <= Rebirths_upvr.Value then
    var192_upvw = false
end
local calculateNextRebirthGems_upvr = module_upvr_2.calculateNextRebirthGems
local getPlayerRank_upvr = module_upvr_2.getPlayerRank
local var195_upvw = false
local function updateStatMenus_upvr() -- Line 869, Named "updateStatMenus"
    --[[ Upvalues[23]:
        [1]: currencyFrame_upvr (readonly)
        [2]: shortenNumber_upvr (readonly)
        [3]: Strength_4_upvr (readonly)
        [4]: Gems_upvr (readonly)
        [5]: rebirthMenu_upvr (readonly)
        [6]: rebirthMultiplier_upvr (readonly)
        [7]: calculateNextRebirthGems_upvr (readonly)
        [8]: Rebirths_upvr (readonly)
        [9]: ReplicatedStorage_upvr (readonly)
        [10]: statsMenu_upvr (readonly)
        [11]: Durability_upvr (readonly)
        [12]: Agility_upvr (readonly)
        [13]: BodyWidthScale_upvr (readonly)
        [14]: BodyHeightScale_upvr (readonly)
        [15]: Kills_upvr (readonly)
        [16]: Brawls_upvr (readonly)
        [17]: getPlayerRank_upvr (readonly)
        [18]: goodKarma_upvr (readonly)
        [19]: evilKarma_upvr (readonly)
        [20]: var195_upvw (read and write)
        [21]: tradeMenu_upvr (readonly)
        [22]: var192_upvw (read and write)
        [23]: tradeUnlockedSequence_upvr (readonly)
    ]]
    currencyFrame_upvr:WaitForChild("strengthFrame"):WaitForChild("amountLabel").Text = shortenNumber_upvr(Strength_4_upvr.Value)
    currencyFrame_upvr:WaitForChild("gemsFrame"):WaitForChild("amountLabel").Text = shortenNumber_upvr(Gems_upvr.Value)
    rebirthMenu_upvr:WaitForChild("rewardFrame"):WaitForChild("rebirthMultiplierLabel").Text = "Current Rebirth Multiplier: "..tostring(rebirthMultiplier_upvr.Value)..'%'
    rebirthMenu_upvr.rewardFrame.rebirthMultiplierLabel:WaitForChild("shadow").Text = rebirthMenu_upvr.rewardFrame.rebirthMultiplierLabel.Text
    rebirthMenu_upvr:WaitForChild("rewardFrame"):WaitForChild("rewardList"):WaitForChild("gemReward"):WaitForChild("amountLabel").Text = '+'..shortenNumber_upvr(calculateNextRebirthGems_upvr(Rebirths_upvr.Value)).." Gems"
    rebirthMenu_upvr:WaitForChild("rewardFrame"):WaitForChild("rewardList"):WaitForChild("multiplierReward"):WaitForChild("amountLabel").Text = tostring(ReplicatedStorage_upvr:WaitForChild("rebirthMultiplierIncrement").Value).."% Multiplier (Stacks)"
    local statsList = statsMenu_upvr:WaitForChild("statsList")
    local bottomStatList = statsMenu_upvr:WaitForChild("bottomStatList")
    statsList:WaitForChild("strengthFrame"):WaitForChild("amountLabel").Text = shortenNumber_upvr(Strength_4_upvr.Value)
    statsList.strengthFrame.amountLabel:WaitForChild("shadow").Text = statsList.strengthFrame.amountLabel.Text
    statsList:WaitForChild("durabilityFrame"):WaitForChild("amountLabel").Text = shortenNumber_upvr(Durability_upvr.Value)
    statsList.durabilityFrame.amountLabel:WaitForChild("shadow").Text = statsList.durabilityFrame.amountLabel.Text
    statsList:WaitForChild("agilityFrame"):WaitForChild("amountLabel").Text = shortenNumber_upvr(Agility_upvr.Value)
    statsList.agilityFrame.amountLabel:WaitForChild("shadow").Text = statsList.agilityFrame.amountLabel.Text
    statsList:WaitForChild("buffnessFrame"):WaitForChild("amountLabel").Text = tostring(math.floor(BodyWidthScale_upvr.Value * 26)).."kg"
    statsList.buffnessFrame.amountLabel:WaitForChild("shadow").Text = statsList.buffnessFrame.amountLabel.Text
    statsList:WaitForChild("heightFrame"):WaitForChild("amountLabel").Text = tostring(math.floor(BodyHeightScale_upvr.Value * 2))..'m'
    statsList.heightFrame.amountLabel:WaitForChild("shadow").Text = statsList.heightFrame.amountLabel.Text
    bottomStatList:WaitForChild("killsFrame"):WaitForChild("statLabel").Text = "KOs - "..shortenNumber_upvr(Kills_upvr.Value)
    bottomStatList.killsFrame.statLabel:WaitForChild("shadow").Text = bottomStatList.killsFrame.statLabel.Text
    bottomStatList:WaitForChild("rebirthsFrame"):WaitForChild("statLabel").Text = "Rebirths - "..shortenNumber_upvr(Rebirths_upvr.Value)
    bottomStatList.rebirthsFrame.statLabel:WaitForChild("shadow").Text = bottomStatList.rebirthsFrame.statLabel.Text
    bottomStatList:WaitForChild("brawlsFrame"):WaitForChild("statLabel").Text = "Brawls - "..shortenNumber_upvr(Brawls_upvr.Value)
    bottomStatList.brawlsFrame.statLabel:WaitForChild("shadow").Text = bottomStatList.brawlsFrame.statLabel.Text
    local var194_result1, var194_result2 = getPlayerRank_upvr(Strength_4_upvr)
    if var194_result1 == nil then
        var194_result1 = "Rookie"
    end
    statsMenu_upvr:WaitForChild("playerImageFrame"):WaitForChild("rankLabel").Text = var194_result1
    statsMenu_upvr.playerImageFrame.rankLabel:WaitForChild("shadow").Text = statsMenu_upvr.playerImageFrame.rankLabel.Text
    if var194_result2 ~= nil then
        statsMenu_upvr.playerImageFrame.rankLabel.TextColor3 = var194_result2
    end
    statsMenu_upvr:WaitForChild("goodKarmaFrame"):WaitForChild("amountLabel").Text = shortenNumber_upvr(goodKarma_upvr.Value)
    statsMenu_upvr.goodKarmaFrame.amountLabel:WaitForChild("shadow").Text = statsMenu_upvr.goodKarmaFrame.amountLabel.Text
    statsMenu_upvr:WaitForChild("evilKarmaFrame"):WaitForChild("amountLabel").Text = shortenNumber_upvr(evilKarma_upvr.Value)
    statsMenu_upvr.evilKarmaFrame.amountLabel:WaitForChild("shadow").Text = statsMenu_upvr.evilKarmaFrame.amountLabel.Text
    if 1000 <= Strength_4_upvr.Value or 1 <= Rebirths_upvr.Value or var195_upvw == false then
        for _, v_7 in pairs(tradeMenu_upvr:GetChildren()) do
            if v_7 ~= nil and (v_7:IsA("Frame") or v_7:IsA("TextLabel") or v_7:IsA("ImageLabel")) then
                if v_7.Name == "unlockLabel" or v_7.Name == "unlockImage" or v_7.Name == "lockImage" then
                    v_7.Visible = false
                elseif v_7.Name == "titleFrame" then
                    v_7:WaitForChild("unlockImage").Visible = false
                end
            end
        end
        var195_upvw = true
        if var192_upvw == true then
            tradeUnlockedSequence_upvr()
        end
    end
end
updateStatMenus_upvr()
Strength_4_upvr.Changed:Connect(updateStatMenus_upvr)
Rebirths_upvr.Changed:Connect(updateStatMenus_upvr)
Kills_upvr.Changed:Connect(updateStatMenus_upvr)
Brawls_upvr.Changed:Connect(updateStatMenus_upvr)
Agility_upvr.Changed:Connect(updateStatMenus_upvr)
Durability_upvr.Changed:Connect(updateStatMenus_upvr)
Gems_upvr.Changed:Connect(updateStatMenus_upvr)
rebirthMultiplier_upvr.Changed:Connect(updateStatMenus_upvr)
BodyHeightScale_upvr.Changed:Connect(updateStatMenus_upvr)
BodyWidthScale_upvr.Changed:Connect(updateStatMenus_upvr)
goodKarma_upvr.Changed:Connect(updateStatMenus_upvr)
evilKarma_upvr.Changed:Connect(updateStatMenus_upvr)
LocalPlayer_upvr:WaitForChild("currentMap").Changed:Connect(updateStatMenus_upvr)
local winnersFrame_upvr = Parent_3_upvr:WaitForChild("winnersFolder"):WaitForChild("winnersFrame")
local brawlRulesDescFrame_upvr = Parent_3_upvr:WaitForChild("brawlRulesDescFrame")
local brawlRulesDesc_upvr = script:WaitForChild("brawlRulesDesc")
local brawlRulesTitle_upvr = brawlTitleFrame_upvr:WaitForChild("brawlRulesTitle")
local brawlInProgress_upvr = ReplicatedStorage_upvr:WaitForChild("brawlInProgress")
local brawlLabel_upvr = currencyFrame_upvr:WaitForChild("brawlLabelFolder"):WaitForChild("brawlLabel")
local brawlEvent_upvr = rEvents_upvr:WaitForChild("brawlEvent")
local brawlBeepSound_upvr = script:WaitForChild("brawlBeepSound")
local brawlStarted_upvr = ReplicatedStorage_upvr:WaitForChild("brawlStarted")
local brawlTimer_upvr = ReplicatedStorage_upvr:WaitForChild("brawlTimer")
;(function() -- Line 973, Named "connectBrawlStuff"
    --[[ Upvalues[24]:
        [1]: Parent_3_upvr (readonly)
        [2]: winnersFrame_upvr (readonly)
        [3]: ReplicatedStorage_upvr (readonly)
        [4]: brawlRulesDescFrame_upvr (readonly)
        [5]: brawlRulesDesc_upvr (readonly)
        [6]: Debris_upvr (readonly)
        [7]: brawlRulesTitle_upvr (readonly)
        [8]: brawlInProgress_upvr (readonly)
        [9]: Character_upvr (readonly)
        [10]: brawlLabel_upvr (readonly)
        [11]: brawlTitleFrame_upvr (readonly)
        [12]: LocalPlayer_upvr (readonly)
        [13]: brawlEvent_upvr (readonly)
        [14]: brawlJoinLabel_upvr (readonly)
        [15]: TweenService_upvr (readonly)
        [16]: shortenNumber_upvr (readonly)
        [17]: brawlBeepSound_upvr (readonly)
        [18]: brawlWinSequence_upvr (readonly)
        [19]: Lighting_upvr (readonly)
        [20]: resetSeaAndSky_upvr (readonly)
        [21]: brawlStarted_upvr (readonly)
        [22]: clickSound_upvr (readonly)
        [23]: brawlTimer_upvr (readonly)
        [24]: settingsMenu_upvr (readonly)
    ]]
    local var217_upvw = false
    local var218_upvw = 45
    local var219_upvw = false
    local var220_upvw = 0
    local function spawnNewBrawlRuleText_upvr(arg1, arg2) -- Line 996, Named "spawnNewBrawlRuleText"
        --[[ Upvalues[4]:
            [1]: brawlRulesDescFrame_upvr (copied, readonly)
            [2]: brawlRulesDesc_upvr (copied, readonly)
            [3]: Debris_upvr (copied, readonly)
            [4]: brawlRulesTitle_upvr (copied, readonly)
        ]]
        for i_8, v_8 in pairs(brawlRulesDescFrame_upvr:GetChildren()) do
            if v_8 ~= nil and v_8:IsA("TextLabel") then
                v_8:TweenPosition(UDim2.new(-1, 0, 0.5, 0), "Out", "Quad", 0.5, true)
            end
        end
        local clone_30 = brawlRulesDesc_upvr:Clone()
        clone_30.Text = arg1
        i_8 = "shadow"
        clone_30:WaitForChild(i_8).Text = clone_30.Text
        clone_30.Parent = brawlRulesDescFrame_upvr
        i_8 = UDim2.new
        v_8 = 0
        i_8 = i_8(v_8, 0, 0.5, 0)
        v_8 = "Out"
        clone_30:TweenPosition(i_8, v_8, "Quad", 0.5, true)
        i_8 = clone_30
        v_8 = 10
        Debris_upvr:AddItem(i_8, v_8)
        if arg2 ~= nil and arg2 == true then
            wait(5)
            i_8 = UDim2.new
            v_8 = -1
            i_8 = i_8(v_8, 0, 0.5, 0)
            v_8 = "Out"
            clone_30:TweenPosition(i_8, v_8, "Quad", 0.5, true)
            i_8 = UDim2.new
            v_8 = 1
            i_8 = i_8(v_8, 0, 0.5, 0)
            v_8 = "Out"
            brawlRulesTitle_upvr:TweenPosition(i_8, v_8, "Quad", 0.5, true)
            wait(0.5)
        end
    end
    local function showBrawlRulesSequence_upvr() -- Line 1027, Named "showBrawlRulesSequence"
        --[[ Upvalues[8]:
            [1]: brawlInProgress_upvr (copied, readonly)
            [2]: Character_upvr (copied, readonly)
            [3]: brawlLabel_upvr (copied, readonly)
            [4]: brawlRulesTitle_upvr (copied, readonly)
            [5]: brawlTitleFrame_upvr (copied, readonly)
            [6]: spawnNewBrawlRuleText_upvr (readonly)
            [7]: brawlRulesDescFrame_upvr (copied, readonly)
            [8]: LocalPlayer_upvr (copied, readonly)
        ]]
        if brawlInProgress_upvr.Value == false or Character_upvr:FindFirstChild("lastMapCFrame") == nil then
        else
            brawlLabel_upvr.Visible = false
            brawlRulesTitle_upvr.Visible = true
            brawlTitleFrame_upvr.Visible = true
            brawlRulesTitle_upvr.Position = UDim2.new(-1, 0, 0.5, 0)
            brawlRulesTitle_upvr:TweenPosition(UDim2.new(0, 0, 0.5, 0), "Out", "Quad", 0.5, true)
            spawnNewBrawlRuleText_upvr("A random player is chosen to fight in the ring every 10 seconds!")
            brawlRulesDescFrame_upvr.Visible = true
            wait(5)
            if brawlRulesTitle_upvr.Visible == false or brawlInProgress_upvr.Value == false or Character_upvr:FindFirstChild("lastMapCFrame") == nil then return end
            spawnNewBrawlRuleText_upvr("Gain some Gems per kill, the player with the most Kills wins the Brawl!")
            wait(5)
            if brawlRulesTitle_upvr.Visible == false or brawlInProgress_upvr.Value == false or Character_upvr:FindFirstChild("lastMapCFrame") == nil then return end
            spawnNewBrawlRuleText_upvr("Win the Brawl to receive huge rewards & fame, good luck "..LocalPlayer_upvr.DisplayName..'!', true)
            brawlRulesDescFrame_upvr.Visible = false
            brawlRulesTitle_upvr.Visible = false
            brawlLabel_upvr.Visible = true
            brawlTitleFrame_upvr.Visible = false
        end
    end
    local const_number_upvw = 10
    local var229_upvw = false
    local orangeBrawlSky_upvr = ReplicatedStorage_upvr:WaitForChild("orangeBrawlSky")
    local var231_upvw
    local var232_upvw
    local var233_upvw
    local countdownLabels_upvr = Parent_3_upvr:WaitForChild("countdownLabels")
    local firstFrame_upvr = winnersFrame_upvr:WaitForChild("firstFrame")
    local secondFrame_upvr = winnersFrame_upvr:WaitForChild("secondFrame")
    local thirdFrame_upvr = winnersFrame_upvr:WaitForChild("thirdFrame")
    local chosenFrame_upvr = Parent_3_upvr:WaitForChild("chosenPlayerFolder"):WaitForChild("chosenPlayers"):WaitForChild("chosenFrame")
    brawlEvent_upvr.OnClientEvent:Connect(function(arg1, arg2, arg3, arg4, arg5) -- Line 1066
        --[[ Upvalues[32]:
            [1]: const_number_upvw (read and write)
            [2]: var217_upvw (read and write)
            [3]: var220_upvw (read and write)
            [4]: var218_upvw (read and write)
            [5]: brawlJoinLabel_upvr (copied, readonly)
            [6]: var229_upvw (read and write)
            [7]: orangeBrawlSky_upvr (readonly)
            [8]: Parent_3_upvr (copied, readonly)
            [9]: TweenService_upvr (copied, readonly)
            [10]: var231_upvw (read and write)
            [11]: var232_upvw (read and write)
            [12]: shortenNumber_upvr (copied, readonly)
            [13]: var233_upvw (read and write)
            [14]: countdownLabels_upvr (readonly)
            [15]: brawlBeepSound_upvr (copied, readonly)
            [16]: Debris_upvr (copied, readonly)
            [17]: var219_upvw (read and write)
            [18]: firstFrame_upvr (readonly)
            [19]: LocalPlayer_upvr (copied, readonly)
            [20]: brawlWinSequence_upvr (copied, readonly)
            [21]: secondFrame_upvr (readonly)
            [22]: thirdFrame_upvr (readonly)
            [23]: Character_upvr (copied, readonly)
            [24]: brawlRulesDescFrame_upvr (copied, readonly)
            [25]: brawlRulesTitle_upvr (copied, readonly)
            [26]: brawlLabel_upvr (copied, readonly)
            [27]: brawlTitleFrame_upvr (copied, readonly)
            [28]: chosenFrame_upvr (readonly)
            [29]: Lighting_upvr (copied, readonly)
            [30]: showBrawlRulesSequence_upvr (readonly)
            [31]: resetSeaAndSky_upvr (copied, readonly)
            [32]: winnersFrame_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [86] 73. Error Block 106 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [86] 73. Error Block 106 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [456] 347. Error Block 35 start (CF ANALYSIS FAILED)
        firstFrame_upvr:WaitForChild("playerIcon").Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..tostring(arg2.UserId).."&width=420&height=420&format=png"
        firstFrame_upvr:WaitForChild("playerName").Text = arg2.DisplayName
        firstFrame_upvr:WaitForChild("killsLabel").Text = tostring(arg4).." Kills"
        firstFrame_upvr.Visible = true
        -- KONSTANTERROR: [456] 347. Error Block 35 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [504] 383. Error Block 36 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [504] 383. Error Block 36 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [525] 397. Error Block 42 start (CF ANALYSIS FAILED)
        secondFrame_upvr:WaitForChild("playerIcon").Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..tostring(arg2.UserId).."&width=420&height=420&format=png"
        secondFrame_upvr:WaitForChild("playerName").Text = arg2.DisplayName
        secondFrame_upvr:WaitForChild("killsLabel").Text = tostring(arg4).." Kills"
        secondFrame_upvr.Visible = true
        -- KONSTANTERROR: [525] 397. Error Block 42 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [573] 433. Error Block 43 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [573] 433. Error Block 43 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [594] 447. Error Block 49 start (CF ANALYSIS FAILED)
        thirdFrame_upvr:WaitForChild("playerIcon").Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..tostring(arg2.UserId).."&width=420&height=420&format=png"
        thirdFrame_upvr:WaitForChild("playerName").Text = arg2.DisplayName
        thirdFrame_upvr:WaitForChild("killsLabel").Text = tostring(arg4).." Kills"
        thirdFrame_upvr.Visible = true
        -- KONSTANTERROR: [594] 447. Error Block 49 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [642] 483. Error Block 50 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [642] 483. Error Block 50 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1030] 756. Error Block 82 start (CF ANALYSIS FAILED)
        brawlRulesDescFrame_upvr.Visible = false
        brawlRulesTitle_upvr.Visible = false
        brawlLabel_upvr.Visible = true
        brawlTitleFrame_upvr.Visible = false
        brawlLabel_upvr.Text = "Brawl ending in "..tostring(arg2)..'!'
        brawlLabel_upvr:WaitForChild("shadow").Text = brawlLabel_upvr.Text
        -- KONSTANTERROR: [1030] 756. Error Block 82 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1127] 828. Error Block 111 start (CF ANALYSIS FAILED)
        if arg1 == "endBrawl" then
            chosenFrame_upvr.Visible = false
            brawlRulesDescFrame_upvr.Visible = false
            brawlRulesTitle_upvr.Visible = false
            brawlLabel_upvr.Visible = true
            brawlTitleFrame_upvr.Visible = false
            resetSeaAndSky_upvr()
            wait(5)
            for _, v_9 in pairs(winnersFrame_upvr:GetChildren()) do
                if v_9:IsA("Frame") then
                    v_9.Visible = false
                end
            end
        end
        -- KONSTANTERROR: [1127] 828. Error Block 111 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1173] 862. Error Block 89 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1173] 862. Error Block 89 end (CF ANALYSIS FAILED)
    end)
    brawlJoinLabel_upvr:WaitForChild("yesButton").Activated:Connect(function() -- Line 1376
        --[[ Upvalues[7]:
            [1]: var217_upvw (read and write)
            [2]: brawlInProgress_upvr (copied, readonly)
            [3]: brawlStarted_upvr (copied, readonly)
            [4]: clickSound_upvr (copied, readonly)
            [5]: brawlEvent_upvr (copied, readonly)
            [6]: brawlJoinLabel_upvr (copied, readonly)
            [7]: TweenService_upvr (copied, readonly)
        ]]
        if var217_upvw == false and brawlInProgress_upvr.Value == true and brawlStarted_upvr.Value == false then
            clickSound_upvr:Play()
            var217_upvw = true
            brawlEvent_upvr:FireServer("joinBrawl")
            brawlJoinLabel_upvr:TweenPosition(UDim2.new(0.5, 0, -2, 0), "In", "Back", 0.25, true)
            TweenService_upvr:Create(brawlJoinLabel_upvr, TweenInfo.new(0.25), {
                Visible = false;
            }):Play()
        end
    end)
    brawlJoinLabel_upvr:WaitForChild("noButton").Activated:Connect(function() -- Line 1393
        --[[ Upvalues[4]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: var217_upvw (read and write)
            [3]: brawlJoinLabel_upvr (copied, readonly)
            [4]: TweenService_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        var217_upvw = true
        brawlJoinLabel_upvr:TweenPosition(UDim2.new(0.5, 0, -2, 0), "In", "Back", 0.25, true)
        TweenService_upvr:Create(brawlJoinLabel_upvr, TweenInfo.new(0.25), {
            Visible = false;
        }):Play()
    end)
    coroutine.resume(coroutine.create(function() -- Line 1404
        --[[ Upvalues[8]:
            [1]: brawlLabel_upvr (copied, readonly)
            [2]: var219_upvw (read and write)
            [3]: resetSeaAndSky_upvr (copied, readonly)
            [4]: brawlTimer_upvr (copied, readonly)
            [5]: Character_upvr (copied, readonly)
            [6]: var220_upvw (read and write)
            [7]: var218_upvw (read and write)
            [8]: settingsMenu_upvr (copied, readonly)
        ]]
        while wait(0.5) do
            if #game.Players:GetChildren() < 2 then
                brawlLabel_upvr.Text = "2 Players are needed to Brawl..."
                brawlLabel_upvr:WaitForChild("shadow").Text = brawlLabel_upvr.Text
                var219_upvw = false
                resetSeaAndSky_upvr()
            elseif 0 < brawlTimer_upvr.Value then
                brawlLabel_upvr.Text = "Brawl starting in "..tostring(brawlTimer_upvr.Value).."..."
                brawlLabel_upvr:WaitForChild("shadow").Text = brawlLabel_upvr.Text
                var219_upvw = false
                resetSeaAndSky_upvr()
            elseif brawlTimer_upvr.Value <= 0 and Character_upvr:FindFirstChild("lastMapCFrame") == nil then
                if var219_upvw == true then
                    var220_upvw += 0.5
                    if 1 <= var220_upvw then
                        var220_upvw = 0
                        var218_upvw -= 1
                    end
                end
                brawlLabel_upvr.Text = "Brawl in progress..."
                brawlLabel_upvr:WaitForChild("shadow").Text = brawlLabel_upvr.Text
            end
            if Character_upvr:FindFirstChild("lastMapCFrame") ~= nil then
                settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("sizeSetting"):WaitForChild("lockedFrame").Visible = true
                settingsMenu_upvr:WaitForChild("maxSizeButton"):WaitForChild("lockedFrame").Visible = true
            else
                settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("sizeSetting"):WaitForChild("lockedFrame").Visible = false
                settingsMenu_upvr:WaitForChild("maxSizeButton"):WaitForChild("lockedFrame").Visible = false
            end
        end
    end))
end)()
local var249_upvw
local descLabel_upvr = shopMenu_upvr:WaitForChild("descLabel")
local musicOn_upvw = LocalPlayer_upvr:FindFirstChild("musicOn")
;(function() -- Line 1449, Named "connectMainButtons"
    --[[ Upvalues[44]:
        [1]: Humanoid_upvr (readonly)
        [2]: gameMusicDeathTween_upvr (readonly)
        [3]: clickSound_upvr (readonly)
        [4]: resetMenus_upvr (readonly)
        [5]: rebirthMenu_upvr (readonly)
        [6]: Parent_3_upvr (readonly)
        [7]: sideButtons_upvr_3 (readonly)
        [8]: rightSideButtons_upvr (readonly)
        [9]: currencyFrame_upvr (readonly)
        [10]: var249_upvw (read and write)
        [11]: descLabel_upvr (readonly)
        [12]: shopMenu_upvr (readonly)
        [13]: any_getPlayerPlatform_result1_upvr (readonly)
        [14]: GuiService_upvr (readonly)
        [15]: statsMenu_upvr (readonly)
        [16]: sidePetMenu_upvr (readonly)
        [17]: powerUpEquipFrame_upvr (readonly)
        [18]: sideBoostMenu_upvr (readonly)
        [19]: itemsMenu_upvr (readonly)
        [20]: powerUpFrames_upvr (readonly)
        [21]: var94_upvw (read and write)
        [22]: var95_upvw (read and write)
        [23]: petsFrames_upvr_2 (readonly)
        [24]: var96_upvw (read and write)
        [25]: var97_upvw (read and write)
        [26]: boostsFrames_upvr (readonly)
        [27]: var98_upvw (read and write)
        [28]: var99_upvw (read and write)
        [29]: musicOn_upvw (read and write)
        [30]: LocalPlayer_upvr (readonly)
        [31]: onButton_upvr (readonly)
        [32]: hoverSound_upvr (readonly)
        [33]: tradeMenu_upvr (readonly)
        [34]: tradingOn_3_upvr (readonly)
        [35]: tbl_upvr (readonly)
        [36]: TweenService_upvr (readonly)
        [37]: var78_upvw (read and write)
        [38]: var77_upvw (read and write)
        [39]: equippedPowerUp_upvr (readonly)
        [40]: var75_upvw (read and write)
        [41]: var76_upvw (read and write)
        [42]: fortuneMenu_upvr (readonly)
        [43]: MarketplaceService_upvr (readonly)
        [44]: inventoryPage_upvr (readonly)
    ]]
    Humanoid_upvr.Died:Connect(function() -- Line 1451
        --[[ Upvalues[1]:
            [1]: gameMusicDeathTween_upvr (copied, readonly)
        ]]
        gameMusicDeathTween_upvr(0)
    end)
    local function _(arg1) -- Line 1457, Named "sideButtonClick"
        --[[ Upvalues[2]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: resetMenus_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        resetMenus_upvr(arg1:WaitForChild("whichMenu").Value)
    end
    rebirthMenu_upvr:WaitForChild("ultimateRebirthMenuButton").Activated:Connect(function() -- Line 1465
        --[[ Upvalues[3]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: resetMenus_upvr (copied, readonly)
            [3]: Parent_3_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        resetMenus_upvr(Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):WaitForChild("ultimatesMenu"))
    end)
    for _, v_10_upvr in pairs(sideButtons_upvr_3:GetChildren()) do
        if v_10_upvr ~= nil and v_10_upvr:IsA("TextButton") then
            v_10_upvr.Activated:connect(function() -- Line 1473
                --[[ Upvalues[3]:
                    [1]: v_10_upvr (readonly)
                    [2]: clickSound_upvr (copied, readonly)
                    [3]: resetMenus_upvr (copied, readonly)
                ]]
                clickSound_upvr:Play()
                resetMenus_upvr(v_10_upvr:WaitForChild("whichMenu").Value)
            end)
        end
    end
    for _, v_11_upvr in pairs(rightSideButtons_upvr:GetChildren()) do
        if v_11_upvr ~= nil and v_11_upvr:IsA("TextButton") then
            v_11_upvr.Activated:connect(function() -- Line 1479
                --[[ Upvalues[3]:
                    [1]: v_11_upvr (readonly)
                    [2]: clickSound_upvr (copied, readonly)
                    [3]: resetMenus_upvr (copied, readonly)
                ]]
                clickSound_upvr:Play()
                resetMenus_upvr(v_11_upvr:WaitForChild("whichMenu").Value)
            end)
        end
    end
    for _, v_12_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame2"):GetChildren()) do
        if v_12_upvr ~= nil and v_12_upvr:IsA("ImageButton") then
            v_12_upvr.Activated:connect(function() -- Line 1485
                --[[ Upvalues[3]:
                    [1]: v_12_upvr (readonly)
                    [2]: clickSound_upvr (copied, readonly)
                    [3]: resetMenus_upvr (copied, readonly)
                ]]
                clickSound_upvr:Play()
                resetMenus_upvr(v_12_upvr:WaitForChild("whichMenu").Value)
            end)
        end
    end
    for _, v_13_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("miscButtonsFrame3"):GetChildren()) do
        if v_13_upvr ~= nil and v_13_upvr:IsA("ImageButton") then
            v_13_upvr.Activated:connect(function() -- Line 1491
                --[[ Upvalues[3]:
                    [1]: v_13_upvr (readonly)
                    [2]: clickSound_upvr (copied, readonly)
                    [3]: resetMenus_upvr (copied, readonly)
                ]]
                clickSound_upvr:Play()
                resetMenus_upvr(v_13_upvr:WaitForChild("whichMenu").Value)
            end)
        end
    end
    for _, v_14_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):WaitForChild("sideButtonsReferenceFrame"):WaitForChild("eventButtonsFrame"):GetChildren()) do
        if v_14_upvr ~= nil and v_14_upvr:IsA("ImageButton") then
            v_14_upvr.Activated:connect(function() -- Line 1497
                --[[ Upvalues[3]:
                    [1]: v_14_upvr (readonly)
                    [2]: clickSound_upvr (copied, readonly)
                    [3]: resetMenus_upvr (copied, readonly)
                ]]
                clickSound_upvr:Play()
                resetMenus_upvr(v_14_upvr:WaitForChild("whichMenu").Value)
            end)
        end
    end
    currencyFrame_upvr:WaitForChild("settingsButton").Activated:Connect(function() -- Line 1501
        --[[ Upvalues[3]:
            [1]: currencyFrame_upvr (copied, readonly)
            [2]: clickSound_upvr (copied, readonly)
            [3]: resetMenus_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        resetMenus_upvr(currencyFrame_upvr:WaitForChild("settingsButton"):WaitForChild("whichMenu").Value)
    end)
    Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("specialOfferButton").Activated:connect(function() -- Line 1503
        --[[ Upvalues[3]:
            [1]: Parent_3_upvr (copied, readonly)
            [2]: clickSound_upvr (copied, readonly)
            [3]: resetMenus_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        resetMenus_upvr(Parent_3_upvr.Parent:WaitForChild("rightSideGui"):WaitForChild("specialOfferButton"):WaitForChild("whichMenu").Value)
    end)
    local function _(arg1) -- Line 1505, Named "xButtonClick"
        --[[ Upvalues[2]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: resetMenus_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        resetMenus_upvr(arg1.Parent)
    end
    local function shopSideButtonClick_upvr(arg1) -- Line 1511, Named "shopSideButtonClick"
        --[[ Upvalues[4]:
            [1]: var249_upvw (copied, read and write)
            [2]: descLabel_upvr (copied, readonly)
            [3]: shopMenu_upvr (copied, readonly)
            [4]: clickSound_upvr (copied, readonly)
        ]]
        if arg1 ~= var249_upvw then
            var249_upvw = arg1
            descLabel_upvr.Text = ""
            for i_15, v_15 in pairs(shopMenu_upvr:WaitForChild("sideButtons"):GetChildren()) do
                if v_15 ~= nil and v_15 ~= var249_upvw then
                    if v_15:FindFirstChild("backSquare") ~= nil then
                        if v_15:FindFirstChild("buttonLabel") ~= nil then
                            v_15.buttonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                        end
                        if v_15:FindFirstChild("buttonColor") ~= nil then
                            v_15.backSquare.ImageColor3 = v_15.buttonColor.Value
                        end
                        if v_15.backSquare:FindFirstChild("squareShadow") ~= nil and v_15:FindFirstChild("underButtonColor") ~= nil then
                            v_15.backSquare.squareShadow.ImageColor3 = v_15.underButtonColor.Value
                        end
                    end
                    if v_15:FindFirstChild("originalX") ~= nil and v_15:FindFirstChild("originalY") ~= nil then
                        v_15:TweenSize(UDim2.new(v_15.originalX.Value, 0, v_15.originalY.Value, 0), "Out", "Quad", 0.25, true)
                    end
                end
            end
            clickSound_upvr:Play()
            if arg1:FindFirstChild("backSquare") ~= nil then
                if arg1:FindFirstChild("buttonLabel") ~= nil and arg1:FindFirstChild("hoverButtonColor") ~= nil then
                    arg1.buttonLabel.TextColor3 = arg1.hoverButtonColor.Value
                end
                if arg1:FindFirstChild("hoverButtonColor") ~= nil then
                    arg1.backSquare.ImageColor3 = arg1.hoverButtonColor.Value
                end
                if arg1.backSquare:FindFirstChild("squareShadow") ~= nil and arg1:FindFirstChild("underHoverButtonColor") ~= nil then
                    arg1.backSquare.squareShadow.ImageColor3 = arg1.underHoverButtonColor.Value
                end
            end
            if arg1:FindFirstChild("originalX") ~= nil and arg1:FindFirstChild("originalY") ~= nil then
                i_15 = arg1.originalX
                v_15 = arg1.originalY.Value
                i_15 = v_15 + 0.02
                v_15 = 0
                arg1.Size = UDim2.new(i_15.Value + 0.02, 0, i_15, v_15)
            end
            if arg1:FindFirstChild("whichMenu") ~= nil and arg1.whichMenu.Value ~= nil then
                i_15 = "menus"
                for _, v_16 in pairs(shopMenu_upvr:WaitForChild(i_15):GetChildren()) do
                    if v_16 ~= nil then
                        v_16.Visible = false
                    end
                end
                arg1.whichMenu.Value.Visible = true
            end
        end
    end
    statsMenu_upvr:WaitForChild("boostsButton").Activated:Connect(function() -- Line 1581, Named "statMenuBoostsButtonClick"
        --[[ Upvalues[7]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: var249_upvw (copied, read and write)
            [3]: shopMenu_upvr (copied, readonly)
            [4]: descLabel_upvr (copied, readonly)
            [5]: resetMenus_upvr (copied, readonly)
            [6]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [7]: GuiService_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        var249_upvw = shopMenu_upvr:WaitForChild("sideButtons"):WaitForChild("boostsButton")
        descLabel_upvr.Text = ""
        for i_17, v_17 in pairs(shopMenu_upvr:WaitForChild("sideButtons"):GetChildren()) do
            if v_17 ~= nil and v_17 ~= var249_upvw then
                if v_17:FindFirstChild("backSquare") ~= nil then
                    if v_17:FindFirstChild("buttonLabel") ~= nil then
                        v_17.buttonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                    end
                    if v_17:FindFirstChild("buttonColor") ~= nil then
                        v_17.backSquare.ImageColor3 = v_17.buttonColor.Value
                    end
                    if v_17.backSquare:FindFirstChild("squareShadow") ~= nil and v_17:FindFirstChild("underButtonColor") ~= nil then
                        v_17.backSquare.squareShadow.ImageColor3 = v_17.underButtonColor.Value
                    end
                end
                if v_17:FindFirstChild("originalX") ~= nil and v_17:FindFirstChild("originalY") ~= nil then
                    v_17:TweenSize(UDim2.new(v_17.originalX.Value, 0, v_17.originalY.Value, 0), "Out", "Quad", 0.25, true)
                end
            end
        end
        if var249_upvw:FindFirstChild("backSquare") ~= nil then
            if var249_upvw:FindFirstChild("buttonLabel") ~= nil and var249_upvw:FindFirstChild("hoverButtonColor") ~= nil then
                i_17 = var249_upvw
                var249_upvw.buttonLabel.TextColor3 = i_17.hoverButtonColor.Value
            end
            if var249_upvw:FindFirstChild("hoverButtonColor") ~= nil then
                i_17 = var249_upvw
                var249_upvw.backSquare.ImageColor3 = i_17.hoverButtonColor.Value
            end
            if var249_upvw.backSquare:FindFirstChild("squareShadow") ~= nil and var249_upvw:FindFirstChild("underHoverButtonColor") ~= nil then
                i_17 = var249_upvw
                var249_upvw.backSquare.squareShadow.ImageColor3 = i_17.underHoverButtonColor.Value
            end
        end
        if var249_upvw:FindFirstChild("originalX") ~= nil and var249_upvw:FindFirstChild("originalY") ~= nil then
            v_17 = var249_upvw.originalX
            i_17 = v_17.Value
            i_17 = 0
            v_17 = var249_upvw.originalY.Value + 0.02
            var249_upvw.Size = UDim2.new(i_17 + 0.02, i_17, v_17, 0)
        end
        if var249_upvw:FindFirstChild("whichMenu") ~= nil and var249_upvw.whichMenu.Value ~= nil then
            i_17 = "menus"
            for _, v_18 in pairs(shopMenu_upvr:WaitForChild(i_17):GetChildren()) do
                if v_18 ~= nil then
                    v_18.Visible = false
                end
            end
            var249_upvw.whichMenu.Value.Visible = true
        end
        resetMenus_upvr(shopMenu_upvr)
        if any_getPlayerPlatform_result1_upvr == "console" then
            GuiService_upvr.SelectedObject = var249_upvw
        end
    end)
    local var334_upvw
    local function powerUpsSideButtonClick_upvr(arg1) -- Line 1658, Named "powerUpsSideButtonClick"
        --[[ Upvalues[16]:
            [1]: var334_upvw (read and write)
            [2]: descLabel_upvr (copied, readonly)
            [3]: sidePetMenu_upvr (copied, readonly)
            [4]: powerUpEquipFrame_upvr (copied, readonly)
            [5]: sideBoostMenu_upvr (copied, readonly)
            [6]: itemsMenu_upvr (copied, readonly)
            [7]: clickSound_upvr (copied, readonly)
            [8]: powerUpFrames_upvr (copied, readonly)
            [9]: var94_upvw (copied, read and write)
            [10]: var95_upvw (copied, read and write)
            [11]: petsFrames_upvr_2 (copied, readonly)
            [12]: var96_upvw (copied, read and write)
            [13]: var97_upvw (copied, read and write)
            [14]: boostsFrames_upvr (copied, readonly)
            [15]: var98_upvw (copied, read and write)
            [16]: var99_upvw (copied, read and write)
        ]]
        if arg1 ~= var334_upvw then
            var334_upvw = arg1
            descLabel_upvr.Text = ""
            sidePetMenu_upvr.Visible = false
            powerUpEquipFrame_upvr.Visible = false
            sideBoostMenu_upvr.Visible = false
            for i_19, v_19 in pairs(itemsMenu_upvr:WaitForChild("sideButtons"):GetChildren()) do
                if v_19 ~= nil and v_19 ~= var334_upvw then
                    if v_19:FindFirstChild("backSquare") ~= nil then
                        if v_19:FindFirstChild("buttonLabel") ~= nil then
                            v_19.buttonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                        end
                        if v_19:FindFirstChild("buttonColor") ~= nil then
                            v_19.backSquare.ImageColor3 = v_19.buttonColor.Value
                        end
                        if v_19.backSquare:FindFirstChild("squareShadow") ~= nil and v_19:FindFirstChild("underButtonColor") ~= nil then
                            v_19.backSquare.squareShadow.ImageColor3 = v_19.underButtonColor.Value
                        end
                    end
                    if v_19:FindFirstChild("originalX") ~= nil and v_19:FindFirstChild("originalY") ~= nil then
                        v_19:TweenSize(UDim2.new(v_19.originalX.Value, 0, v_19.originalY.Value, 0), "Out", "Quad", 0.25, true)
                    end
                    if v_19:FindFirstChild("whichMenu") and v_19.whichMenu.Value ~= nil then
                        v_19.whichMenu.Value.Visible = false
                    end
                end
            end
            clickSound_upvr:Play()
            if arg1:FindFirstChild("backSquare") ~= nil then
                if arg1:FindFirstChild("buttonLabel") ~= nil and arg1:FindFirstChild("hoverButtonColor") ~= nil then
                    arg1.buttonLabel.TextColor3 = arg1.hoverButtonColor.Value
                end
                if arg1:FindFirstChild("hoverButtonColor") ~= nil then
                    arg1.backSquare.ImageColor3 = arg1.hoverButtonColor.Value
                end
                if arg1.backSquare:FindFirstChild("squareShadow") ~= nil and arg1:FindFirstChild("underHoverButtonColor") ~= nil then
                    arg1.backSquare.squareShadow.ImageColor3 = arg1.underHoverButtonColor.Value
                end
            end
            if arg1:FindFirstChild("originalX") ~= nil and arg1:FindFirstChild("originalY") ~= nil then
                i_19 = arg1.originalX
                v_19 = arg1.originalY.Value
                i_19 = v_19 + 0.02
                v_19 = 0
                arg1.Size = UDim2.new(i_19.Value + 0.02, 0, i_19, v_19)
            end
            if arg1:FindFirstChild("whichMenu") ~= nil and arg1.whichMenu.Value ~= nil then
                if arg1.whichMenu.Value == powerUpFrames_upvr then
                    itemsMenu_upvr:WaitForChild("prevButton").Visible = true
                    itemsMenu_upvr:WaitForChild("nextButton").Visible = true
                    i_19 = tostring(var94_upvw)
                    v_19 = '/'
                    itemsMenu_upvr:WaitForChild("pageLabel").Text = "Page "..i_19..v_19..tostring(var95_upvw)
                    i_19 = itemsMenu_upvr
                    itemsMenu_upvr.pageLabel:WaitForChild("shadow").Text = i_19.pageLabel.Text
                    itemsMenu_upvr:WaitForChild("pageLabel").Visible = true
                    for _, v_20 in pairs(powerUpFrames_upvr:GetChildren()) do
                        if v_20 ~= nil and v_20:IsA("Frame") then
                            if v_20.Name ~= "page"..tostring(var94_upvw) then
                                v_20.Visible = false
                            else
                                v_20.Visible = true
                            end
                        end
                    end
                    itemsMenu_upvr:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), "Out", "Quad", 0.25, true)
                    itemsMenu_upvr:WaitForChild("noPetsLabel").Visible = false
                    itemsMenu_upvr:WaitForChild("noBoostsLabel").Visible = false
                    if #powerUpFrames_upvr:GetChildren() <= 1 then
                        itemsMenu_upvr:WaitForChild("noPowerUpsLabel").Visible = true
                    else
                        itemsMenu_upvr:WaitForChild("noPowerUpsLabel").Visible = false
                    end
                elseif arg1.whichMenu.Value == petsFrames_upvr_2 then
                    itemsMenu_upvr:WaitForChild("prevButton").Visible = true
                    itemsMenu_upvr:WaitForChild("nextButton").Visible = true
                    itemsMenu_upvr:WaitForChild("pageLabel").Text = "Page "..tostring(var96_upvw)..'/'..tostring(var97_upvw)
                    itemsMenu_upvr.pageLabel:WaitForChild("shadow").Text = itemsMenu_upvr.pageLabel.Text
                    itemsMenu_upvr:WaitForChild("pageLabel").Visible = true
                    for _, v_81 in pairs(petsFrames_upvr_2:GetChildren()) do
                        if v_81 ~= nil and v_81:IsA("Frame") then
                            if v_81.Name ~= "page"..tostring(var96_upvw) then
                                v_81.Visible = false
                            else
                                v_81.Visible = true
                            end
                        end
                    end
                    itemsMenu_upvr:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), "Out", "Quad", 0.25, true)
                    itemsMenu_upvr:WaitForChild("noPowerUpsLabel").Visible = false
                    itemsMenu_upvr:WaitForChild("noBoostsLabel").Visible = false
                    if #petsFrames_upvr_2:GetChildren() <= 1 then
                        itemsMenu_upvr:WaitForChild("noPetsLabel").Visible = true
                    else
                        itemsMenu_upvr:WaitForChild("noPetsLabel").Visible = false
                    end
                elseif arg1.whichMenu.Value == boostsFrames_upvr then
                    itemsMenu_upvr:WaitForChild("prevButton").Visible = true
                    itemsMenu_upvr:WaitForChild("nextButton").Visible = true
                    itemsMenu_upvr:WaitForChild("pageLabel").Text = "Page "..tostring(var98_upvw)..'/'..tostring(var99_upvw)
                    itemsMenu_upvr.pageLabel:WaitForChild("shadow").Text = itemsMenu_upvr.pageLabel.Text
                    itemsMenu_upvr:WaitForChild("pageLabel").Visible = true
                    for _, v_82 in pairs(boostsFrames_upvr:GetChildren()) do
                        if v_82 ~= nil and v_82:IsA("Frame") then
                            if v_82.Name ~= "page"..tostring(var98_upvw) then
                                v_82.Visible = false
                            else
                                v_82.Visible = true
                            end
                        end
                    end
                    itemsMenu_upvr:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), "Out", "Quad", 0.25, true)
                    itemsMenu_upvr:WaitForChild("noPowerUpsLabel").Visible = false
                    itemsMenu_upvr:WaitForChild("noPetsLabel").Visible = false
                    if #boostsFrames_upvr:GetChildren() <= 1 then
                        itemsMenu_upvr:WaitForChild("noBoostsLabel").Visible = true
                    else
                        itemsMenu_upvr:WaitForChild("noBoostsLabel").Visible = false
                    end
                end
                arg1.whichMenu.Value.Visible = true
            end
        end
    end
    if musicOn_upvw == nil then
        musicOn_upvw = Instance.new("BoolValue")
        musicOn_upvw.Name = "musicOn"
        musicOn_upvw.Value = true
        musicOn_upvw.Parent = LocalPlayer_upvr
    elseif LocalPlayer_upvr:WaitForChild("musicOn").Value == true then
        onButton_upvr:WaitForChild("backSquare").ImageColor3 = onButton_upvr:WaitForChild("buttonColor").Value
        onButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = onButton_upvr:WaitForChild("underButtonColor").Value
        onButton_upvr:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
        onButton_upvr.buttonLabel.Text = "ON"
    else
        onButton_upvr:WaitForChild("backSquare").ImageColor3 = onButton_upvr:WaitForChild("offButtonColor").Value
        onButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = onButton_upvr:WaitForChild("underOffButtonColor").Value
        onButton_upvr:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
        onButton_upvr.buttonLabel.Text = "OFF"
    end
    local function mainButtonHover_upvr(arg1) -- Line 1851, Named "mainButtonHover"
        --[[ Upvalues[20]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: hoverSound_upvr (copied, readonly)
            [3]: onButton_upvr (copied, readonly)
            [4]: musicOn_upvw (copied, read and write)
            [5]: tradeMenu_upvr (copied, readonly)
            [6]: tradingOn_3_upvr (copied, readonly)
            [7]: var249_upvw (copied, read and write)
            [8]: descLabel_upvr (copied, readonly)
            [9]: tbl_upvr (copied, readonly)
            [10]: TweenService_upvr (copied, readonly)
            [11]: var334_upvw (read and write)
            [12]: var78_upvw (copied, read and write)
            [13]: var77_upvw (copied, read and write)
            [14]: equippedPowerUp_upvr (copied, readonly)
            [15]: sidePetMenu_upvr (copied, readonly)
            [16]: var75_upvw (copied, read and write)
            [17]: sideBoostMenu_upvr (copied, readonly)
            [18]: var76_upvw (copied, read and write)
            [19]: fortuneMenu_upvr (copied, readonly)
            [20]: Parent_3_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [20] 14. Error Block 4 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [20] 14. Error Block 4 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [35] 23. Error Block 6 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [35] 23. Error Block 6 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [40] 27. Error Block 7 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [40] 27. Error Block 7 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [144] 94. Error Block 21 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [144] 94. Error Block 21 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [150] 98. Error Block 22 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [150] 98. Error Block 22 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [284] 185. Error Block 38 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [284] 185. Error Block 38 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [290] 189. Error Block 39 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [290] 189. Error Block 39 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [409] 264. Error Block 54 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [409] 264. Error Block 54 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [415] 268. Error Block 55 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [415] 268. Error Block 55 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [506] 326. Error Block 65 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [506] 326. Error Block 65 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [512] 330. Error Block 66 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [512] 330. Error Block 66 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [559] 360. Error Block 70 start (CF ANALYSIS FAILED)
        clickSound_upvr:Stop()
        hoverSound_upvr:Play()
        -- KONSTANTERROR: [559] 360. Error Block 70 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [631] 404. Error Block 77 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [631] 404. Error Block 77 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [637] 408. Error Block 78 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [637] 408. Error Block 78 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [791] 503. Error Block 95 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [791] 503. Error Block 95 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [797] 507. Error Block 96 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [797] 507. Error Block 96 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [916] 582. Error Block 111 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [916] 582. Error Block 111 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [922] 586. Error Block 112 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [922] 586. Error Block 112 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1025] 655. Error Block 125 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1025] 655. Error Block 125 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1031] 659. Error Block 126 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1031] 659. Error Block 126 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1142] 732. Error Block 139 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1142] 732. Error Block 139 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1148] 736. Error Block 140 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1148] 736. Error Block 140 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1297] 833. Error Block 158 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1297] 833. Error Block 158 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1303] 837. Error Block 159 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1303] 837. Error Block 159 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1430] 921. Error Block 175 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1430] 921. Error Block 175 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1436] 925. Error Block 176 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1436] 925. Error Block 176 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1563] 1009. Error Block 192 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1563] 1009. Error Block 192 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1569] 1013. Error Block 193 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1569] 1013. Error Block 193 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1681] 1087. Error Block 208 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1681] 1087. Error Block 208 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1687] 1091. Error Block 209 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1687] 1091. Error Block 209 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1786] 1152. Error Block 223 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1786] 1152. Error Block 223 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1792] 1156. Error Block 224 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1792] 1156. Error Block 224 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1819] 1175. Error Block 287 start (CF ANALYSIS FAILED)
        clickSound_upvr:Stop()
        hoverSound_upvr:Play()
        if arg1:FindFirstChild("backSquare") ~= nil then
            if arg1:FindFirstChild("buttonLabel") ~= nil then
                arg1.buttonLabel.TextColor3 = arg1.backSquare.ImageColor3
            end
            if arg1:FindFirstChild("hoverButtonColor") ~= nil then
                arg1.backSquare.ImageColor3 = arg1.hoverButtonColor.Value
            end
            if arg1.backSquare:FindFirstChild("squareShadow") ~= nil then
                arg1.backSquare.squareShadow:TweenPosition(UDim2.new(0, 0, 0.5, 0), "Out", "Quad", 0.25, true)
                -- KONSTANTWARNING: GOTO [1981] #1279
            end
        elseif arg1:IsA("ImageButton") then
            if arg1:FindFirstChild("buttonLabel") ~= nil then
                arg1.buttonLabel.TextColor3 = arg1.ImageColor3
            end
            if arg1:FindFirstChild("hoverButtonColor") ~= nil then
                arg1.ImageColor3 = arg1.hoverButtonColor.Value
            end
            if arg1:IsA("ImageButton") and arg1:IsDescendantOf(Parent_3_upvr.Parent:WaitForChild("rightSideGui")) == true and arg1:FindFirstChild("hoverButtonColor") ~= nil then
                if arg1:FindFirstChild("buttonLabel") ~= nil then
                    arg1.buttonLabel.TextColor3 = arg1.hoverButtonColor.Value
                elseif arg1:FindFirstChild("timerLabel") ~= nil then
                    arg1.timerLabel.TextColor3 = arg1.hoverButtonColor.Value
                end
                if arg1:FindFirstChild("hoverButtonColor") ~= nil then
                    arg1.ImageColor3 = arg1.hoverButtonColor.Value
                end
            end
        end
        if arg1:FindFirstChild("originalX") ~= nil and arg1:FindFirstChild("originalY") ~= nil then
            arg1:TweenSize(UDim2.new(arg1.originalX.Value + 0.02, 0, arg1.originalY.Value + 0.02, 0), "Out", "Quad", 0.25, true)
        end
        -- KONSTANTERROR: [1819] 1175. Error Block 287 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [2015] 1303. Error Block 252 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [2015] 1303. Error Block 252 end (CF ANALYSIS FAILED)
    end
    local function mainButtonExit_upvr(arg1) -- Line 2345, Named "mainButtonExit"
        --[[ Upvalues[14]:
            [1]: onButton_upvr (copied, readonly)
            [2]: musicOn_upvw (copied, read and write)
            [3]: tradeMenu_upvr (copied, readonly)
            [4]: tradingOn_3_upvr (copied, readonly)
            [5]: var249_upvw (copied, read and write)
            [6]: var334_upvw (read and write)
            [7]: var78_upvw (copied, read and write)
            [8]: var77_upvw (copied, read and write)
            [9]: equippedPowerUp_upvr (copied, readonly)
            [10]: sidePetMenu_upvr (copied, readonly)
            [11]: var75_upvw (copied, read and write)
            [12]: sideBoostMenu_upvr (copied, readonly)
            [13]: var76_upvw (copied, read and write)
            [14]: fortuneMenu_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [12] 8. Error Block 4 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [12] 8. Error Block 4 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [27] 17. Error Block 6 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [27] 17. Error Block 6 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [32] 21. Error Block 7 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [32] 21. Error Block 7 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [163] 103. Error Block 28 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [163] 103. Error Block 28 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [169] 107. Error Block 29 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [169] 107. Error Block 29 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [300] 192. Error Block 46 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [300] 192. Error Block 46 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [306] 196. Error Block 47 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [306] 196. Error Block 47 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [411] 262. Error Block 61 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [411] 262. Error Block 61 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [417] 266. Error Block 62 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [417] 266. Error Block 62 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [498] 316. Error Block 72 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [498] 316. Error Block 72 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [504] 320. Error Block 73 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [504] 320. Error Block 73 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [549] 348. Error Block 77 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [549] 348. Error Block 77 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [569] 360. Error Block 80 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [569] 360. Error Block 80 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [577] 365. Error Block 81 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [577] 365. Error Block 81 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [608] 382. Error Block 85 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [608] 382. Error Block 85 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [628] 394. Error Block 88 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [628] 394. Error Block 88 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [636] 399. Error Block 89 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [636] 399. Error Block 89 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [731] 456. Error Block 103 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [731] 456. Error Block 103 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [737] 460. Error Block 104 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [737] 460. Error Block 104 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [842] 526. Error Block 118 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [842] 526. Error Block 118 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [848] 530. Error Block 119 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [848] 530. Error Block 119 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [983] 620. Error Block 137 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [983] 620. Error Block 137 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [989] 624. Error Block 138 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [989] 624. Error Block 138 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1108] 703. Error Block 154 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1108] 703. Error Block 154 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1114] 707. Error Block 155 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1114] 707. Error Block 155 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1233] 786. Error Block 171 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1233] 786. Error Block 171 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1239] 790. Error Block 172 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1239] 790. Error Block 172 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1345] 862. Error Block 187 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1345] 862. Error Block 187 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1351] 866. Error Block 188 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1351] 866. Error Block 188 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1416] 909. Error Block 195 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1416] 909. Error Block 195 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1422] 913. Error Block 196 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1422] 913. Error Block 196 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1449] 932. Error Block 244 start (CF ANALYSIS FAILED)
        if arg1:FindFirstChild("backSquare") ~= nil then
            if arg1:FindFirstChild("buttonLabel") ~= nil then
                arg1.buttonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            end
            if arg1:FindFirstChild("buttonColor") ~= nil then
                arg1.backSquare.ImageColor3 = arg1.buttonColor.Value
            end
            if arg1.backSquare:FindFirstChild("squareShadow") ~= nil then
                arg1.backSquare.squareShadow:TweenPosition(UDim2.new(0, 0, 0.53, 0), "Out", "Quad", 0.25, true)
                -- KONSTANTWARNING: GOTO [1562] #1009
            end
        elseif arg1:IsA("ImageButton") then
            if arg1:FindFirstChild("buttonLabel") ~= nil then
                arg1.buttonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            elseif arg1:FindFirstChild("timerLabel") ~= nil then
                arg1.timerLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            end
            if arg1:FindFirstChild("buttonColor") ~= nil then
                arg1.ImageColor3 = arg1.buttonColor.Value
            end
        end
        if arg1:FindFirstChild("originalX") ~= nil and arg1:FindFirstChild("originalY") ~= nil then
            arg1:TweenSize(UDim2.new(arg1.originalX.Value, 0, arg1.originalY.Value, 0), "Out", "Quad", 0.25, true)
        end
        -- KONSTANTERROR: [1449] 932. Error Block 244 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1594] 1031. Error Block 217 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [1594] 1031. Error Block 217 end (CF ANALYSIS FAILED)
    end
    for _, v_21_upvr in pairs(Parent_3_upvr:GetDescendants()) do
        if v_21_upvr:IsA("TextButton") or v_21_upvr:IsA("ImageButton") then
            local NumberValue_5 = Instance.new("NumberValue")
            NumberValue_5.Value = v_21_upvr.Size.X.Scale
            NumberValue_5.Name = "originalX"
            NumberValue_5.Parent = v_21_upvr
            local NumberValue_10 = Instance.new("NumberValue")
            NumberValue_10.Value = v_21_upvr.Size.Y.Scale
            NumberValue_10.Name = "originalY"
            NumberValue_10.Parent = v_21_upvr
            v_21_upvr.MouseEnter:Connect(function() -- Line 2735
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_21_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_21_upvr)
            end)
            v_21_upvr.SelectionGained:Connect(function() -- Line 2736
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_21_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_21_upvr)
            end)
            v_21_upvr.MouseLeave:Connect(function() -- Line 2737
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_21_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_21_upvr)
            end)
            v_21_upvr.SelectionLost:Connect(function() -- Line 2738
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_21_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_21_upvr)
            end)
            if v_21_upvr.Name == "xButton" then
                v_21_upvr.Activated:Connect(function() -- Line 2741
                    --[[ Upvalues[3]:
                        [1]: v_21_upvr (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: resetMenus_upvr (copied, readonly)
                    ]]
                    clickSound_upvr:Play()
                    resetMenus_upvr(v_21_upvr.Parent)
                end)
            elseif v_21_upvr.Parent.Name == "sideButtons" and v_21_upvr.Parent.Parent.Name == "shopMenu" then
                v_21_upvr.Activated:Connect(function() -- Line 2743
                    --[[ Upvalues[2]:
                        [1]: shopSideButtonClick_upvr (readonly)
                        [2]: v_21_upvr (readonly)
                    ]]
                    shopSideButtonClick_upvr(v_21_upvr)
                end)
            elseif v_21_upvr.Parent.Name == "sideButtons" and v_21_upvr.Parent.Parent.Name == "itemsMenu" then
                v_21_upvr.Activated:Connect(function() -- Line 2745
                    --[[ Upvalues[2]:
                        [1]: powerUpsSideButtonClick_upvr (readonly)
                        [2]: v_21_upvr (readonly)
                    ]]
                    powerUpsSideButtonClick_upvr(v_21_upvr)
                end)
            end
        end
    end
    for _, v_22_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("premiumGui"):GetDescendants()) do
        if v_22_upvr:IsA("TextButton") or v_22_upvr:IsA("ImageButton") then
            local NumberValue_8 = Instance.new("NumberValue")
            NumberValue_8.Value = v_22_upvr.Size.X.Scale
            NumberValue_8.Name = "originalX"
            NumberValue_8.Parent = v_22_upvr
            local NumberValue_25 = Instance.new("NumberValue")
            NumberValue_25.Value = v_22_upvr.Size.Y.Scale
            NumberValue_25.Name = "originalY"
            NumberValue_25.Parent = v_22_upvr
            v_22_upvr.MouseEnter:Connect(function() -- Line 2764
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_22_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_22_upvr)
            end)
            v_22_upvr.SelectionGained:Connect(function() -- Line 2765
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_22_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_22_upvr)
            end)
            v_22_upvr.MouseLeave:Connect(function() -- Line 2766
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_22_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_22_upvr)
            end)
            v_22_upvr.SelectionLost:Connect(function() -- Line 2767
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_22_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_22_upvr)
            end)
            if v_22_upvr.Name == "xButton" then
                v_22_upvr.Activated:Connect(function() -- Line 2770
                    --[[ Upvalues[3]:
                        [1]: v_22_upvr (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: resetMenus_upvr (copied, readonly)
                    ]]
                    clickSound_upvr:Play()
                    resetMenus_upvr(v_22_upvr.Parent)
                end)
            end
        end
    end
    for _, v_23_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("packsGui"):GetDescendants()) do
        if v_23_upvr:IsA("TextButton") or v_23_upvr:IsA("ImageButton") then
            local NumberValue_21 = Instance.new("NumberValue")
            NumberValue_21.Value = v_23_upvr.Size.X.Scale
            NumberValue_21.Name = "originalX"
            NumberValue_21.Parent = v_23_upvr
            local NumberValue_16 = Instance.new("NumberValue")
            NumberValue_16.Value = v_23_upvr.Size.Y.Scale
            NumberValue_16.Name = "originalY"
            NumberValue_16.Parent = v_23_upvr
            v_23_upvr.MouseEnter:Connect(function() -- Line 2789
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_23_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_23_upvr)
            end)
            v_23_upvr.SelectionGained:Connect(function() -- Line 2790
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_23_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_23_upvr)
            end)
            v_23_upvr.MouseLeave:Connect(function() -- Line 2791
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_23_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_23_upvr)
            end)
            v_23_upvr.SelectionLost:Connect(function() -- Line 2792
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_23_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_23_upvr)
            end)
            if v_23_upvr.Name == "xButton" then
                v_23_upvr.Activated:Connect(function() -- Line 2795
                    --[[ Upvalues[3]:
                        [1]: v_23_upvr (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: resetMenus_upvr (copied, readonly)
                    ]]
                    clickSound_upvr:Play()
                    resetMenus_upvr(v_23_upvr.Parent)
                end)
            end
        end
    end
    for _, v_24_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("questsGui"):GetDescendants()) do
        if v_24_upvr:IsA("TextButton") or v_24_upvr:IsA("ImageButton") then
            local NumberValue_18 = Instance.new("NumberValue")
            NumberValue_18.Value = v_24_upvr.Size.X.Scale
            NumberValue_18.Name = "originalX"
            NumberValue_18.Parent = v_24_upvr
            local NumberValue_9 = Instance.new("NumberValue")
            NumberValue_9.Value = v_24_upvr.Size.Y.Scale
            NumberValue_9.Name = "originalY"
            NumberValue_9.Parent = v_24_upvr
            v_24_upvr.MouseEnter:Connect(function() -- Line 2814
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_24_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_24_upvr)
            end)
            v_24_upvr.SelectionGained:Connect(function() -- Line 2815
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_24_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_24_upvr)
            end)
            v_24_upvr.MouseLeave:Connect(function() -- Line 2816
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_24_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_24_upvr)
            end)
            v_24_upvr.SelectionLost:Connect(function() -- Line 2817
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_24_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_24_upvr)
            end)
            if v_24_upvr.Name == "xButton" then
                v_24_upvr.Activated:Connect(function() -- Line 2820
                    --[[ Upvalues[3]:
                        [1]: v_24_upvr (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: resetMenus_upvr (copied, readonly)
                    ]]
                    clickSound_upvr:Play()
                    resetMenus_upvr(v_24_upvr.Parent)
                end)
            end
        end
    end
    for _, v_25_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("countdownEventsGui"):GetDescendants()) do
        if v_25_upvr:IsA("TextButton") or v_25_upvr:IsA("ImageButton") then
            local NumberValue_4 = Instance.new("NumberValue")
            NumberValue_4.Value = v_25_upvr.Size.X.Scale
            NumberValue_4.Name = "originalX"
            NumberValue_4.Parent = v_25_upvr
            local NumberValue_22 = Instance.new("NumberValue")
            NumberValue_22.Value = v_25_upvr.Size.Y.Scale
            NumberValue_22.Name = "originalY"
            NumberValue_22.Parent = v_25_upvr
            v_25_upvr.MouseEnter:Connect(function() -- Line 2839
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_25_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_25_upvr)
            end)
            v_25_upvr.SelectionGained:Connect(function() -- Line 2840
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_25_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_25_upvr)
            end)
            v_25_upvr.MouseLeave:Connect(function() -- Line 2841
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_25_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_25_upvr)
            end)
            v_25_upvr.SelectionLost:Connect(function() -- Line 2842
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_25_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_25_upvr)
            end)
            if v_25_upvr.Name == "xButton" then
                v_25_upvr.Activated:Connect(function() -- Line 2845
                    --[[ Upvalues[3]:
                        [1]: v_25_upvr (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: resetMenus_upvr (copied, readonly)
                    ]]
                    clickSound_upvr:Play()
                    resetMenus_upvr(v_25_upvr.Parent)
                end)
            end
        end
    end
    for _, v_26_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("currencyFrameGui"):GetDescendants()) do
        if v_26_upvr:IsA("TextButton") or v_26_upvr:IsA("ImageButton") then
            local NumberValue = Instance.new("NumberValue")
            NumberValue.Value = v_26_upvr.Size.X.Scale
            NumberValue.Name = "originalX"
            NumberValue.Parent = v_26_upvr
            local NumberValue_2 = Instance.new("NumberValue")
            NumberValue_2.Value = v_26_upvr.Size.Y.Scale
            NumberValue_2.Name = "originalY"
            NumberValue_2.Parent = v_26_upvr
            v_26_upvr.MouseEnter:Connect(function() -- Line 2864
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_26_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_26_upvr)
            end)
            v_26_upvr.SelectionGained:Connect(function() -- Line 2865
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_26_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_26_upvr)
            end)
            v_26_upvr.MouseLeave:Connect(function() -- Line 2866
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_26_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_26_upvr)
            end)
            v_26_upvr.SelectionLost:Connect(function() -- Line 2867
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_26_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_26_upvr)
            end)
            if v_26_upvr.Name == "xButton" then
                v_26_upvr.Activated:Connect(function() -- Line 2870
                    --[[ Upvalues[3]:
                        [1]: v_26_upvr (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: resetMenus_upvr (copied, readonly)
                    ]]
                    clickSound_upvr:Play()
                    resetMenus_upvr(v_26_upvr.Parent)
                end)
            end
        end
    end
    for _, v_27_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("rightSideGui"):GetDescendants()) do
        if v_27_upvr:IsA("TextButton") or v_27_upvr:IsA("ImageButton") then
            local NumberValue_7 = Instance.new("NumberValue")
            NumberValue_7.Value = v_27_upvr.Size.X.Scale
            NumberValue_7.Name = "originalX"
            NumberValue_7.Parent = v_27_upvr
            local NumberValue_20 = Instance.new("NumberValue")
            NumberValue_20.Value = v_27_upvr.Size.Y.Scale
            NumberValue_20.Name = "originalY"
            NumberValue_20.Parent = v_27_upvr
            v_27_upvr.MouseEnter:Connect(function() -- Line 2889
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_27_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_27_upvr)
            end)
            v_27_upvr.SelectionGained:Connect(function() -- Line 2890
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_27_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_27_upvr)
            end)
            v_27_upvr.MouseLeave:Connect(function() -- Line 2891
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_27_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_27_upvr)
            end)
            v_27_upvr.SelectionLost:Connect(function() -- Line 2892
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_27_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_27_upvr)
            end)
            if v_27_upvr.Name == "xButton" then
                v_27_upvr.Activated:Connect(function() -- Line 2895
                    --[[ Upvalues[3]:
                        [1]: v_27_upvr (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: resetMenus_upvr (copied, readonly)
                    ]]
                    clickSound_upvr:Play()
                    resetMenus_upvr(v_27_upvr.Parent)
                end)
            end
        end
    end
    for _, v_28_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("freeGiftsGui"):GetDescendants()) do
        if v_28_upvr:IsA("TextButton") or v_28_upvr:IsA("ImageButton") then
            local NumberValue_15 = Instance.new("NumberValue")
            NumberValue_15.Value = v_28_upvr.Size.X.Scale
            NumberValue_15.Name = "originalX"
            NumberValue_15.Parent = v_28_upvr
            local NumberValue_19 = Instance.new("NumberValue")
            NumberValue_19.Value = v_28_upvr.Size.Y.Scale
            NumberValue_19.Name = "originalY"
            NumberValue_19.Parent = v_28_upvr
            v_28_upvr.MouseEnter:Connect(function() -- Line 2914
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_28_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_28_upvr)
            end)
            v_28_upvr.SelectionGained:Connect(function() -- Line 2915
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_28_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_28_upvr)
            end)
            v_28_upvr.MouseLeave:Connect(function() -- Line 2916
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_28_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_28_upvr)
            end)
            v_28_upvr.SelectionLost:Connect(function() -- Line 2917
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_28_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_28_upvr)
            end)
            if v_28_upvr.Name == "xButton" then
                v_28_upvr.Activated:Connect(function() -- Line 2920
                    --[[ Upvalues[3]:
                        [1]: v_28_upvr (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: resetMenus_upvr (copied, readonly)
                    ]]
                    clickSound_upvr:Play()
                    resetMenus_upvr(v_28_upvr.Parent)
                end)
            end
        end
    end
    for _, v_29_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("ultimatesGui"):GetDescendants()) do
        if v_29_upvr:IsA("TextButton") or v_29_upvr:IsA("ImageButton") then
            local NumberValue_12 = Instance.new("NumberValue")
            NumberValue_12.Value = v_29_upvr.Size.X.Scale
            NumberValue_12.Name = "originalX"
            NumberValue_12.Parent = v_29_upvr
            local NumberValue_6 = Instance.new("NumberValue")
            NumberValue_6.Value = v_29_upvr.Size.Y.Scale
            NumberValue_6.Name = "originalY"
            NumberValue_6.Parent = v_29_upvr
            v_29_upvr.MouseEnter:Connect(function() -- Line 2939
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_29_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_29_upvr)
            end)
            v_29_upvr.SelectionGained:Connect(function() -- Line 2940
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_29_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_29_upvr)
            end)
            v_29_upvr.MouseLeave:Connect(function() -- Line 2941
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_29_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_29_upvr)
            end)
            v_29_upvr.SelectionLost:Connect(function() -- Line 2942
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_29_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_29_upvr)
            end)
            if v_29_upvr.Name == "xButton" then
                v_29_upvr.Activated:Connect(function() -- Line 2945
                    --[[ Upvalues[3]:
                        [1]: v_29_upvr (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: resetMenus_upvr (copied, readonly)
                    ]]
                    clickSound_upvr:Play()
                    resetMenus_upvr(v_29_upvr.Parent)
                end)
            end
        end
    end
    for _, v_30_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("specialOfferGui"):GetDescendants()) do
        if v_30_upvr:IsA("TextButton") or v_30_upvr:IsA("ImageButton") then
            local NumberValue_26 = Instance.new("NumberValue")
            NumberValue_26.Value = v_30_upvr.Size.X.Scale
            NumberValue_26.Name = "originalX"
            NumberValue_26.Parent = v_30_upvr
            local NumberValue_14 = Instance.new("NumberValue")
            NumberValue_14.Value = v_30_upvr.Size.Y.Scale
            NumberValue_14.Name = "originalY"
            NumberValue_14.Parent = v_30_upvr
            v_30_upvr.MouseEnter:Connect(function() -- Line 2964
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_30_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_30_upvr)
            end)
            v_30_upvr.SelectionGained:Connect(function() -- Line 2965
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_30_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_30_upvr)
            end)
            v_30_upvr.MouseLeave:Connect(function() -- Line 2966
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_30_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_30_upvr)
            end)
            v_30_upvr.SelectionLost:Connect(function() -- Line 2967
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_30_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_30_upvr)
            end)
            if v_30_upvr.Name == "xButton" then
                v_30_upvr.Activated:Connect(function() -- Line 2970
                    --[[ Upvalues[3]:
                        [1]: v_30_upvr (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: resetMenus_upvr (copied, readonly)
                    ]]
                    clickSound_upvr:Play()
                    resetMenus_upvr(v_30_upvr.Parent)
                end)
            end
        end
    end
    for _, v_31_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("fortuneWheelMenuGui"):GetDescendants()) do
        if v_31_upvr:IsA("TextButton") or v_31_upvr:IsA("ImageButton") then
            local NumberValue_13 = Instance.new("NumberValue")
            NumberValue_13.Value = v_31_upvr.Size.X.Scale
            NumberValue_13.Name = "originalX"
            NumberValue_13.Parent = v_31_upvr
            local NumberValue_24 = Instance.new("NumberValue")
            NumberValue_24.Value = v_31_upvr.Size.Y.Scale
            NumberValue_24.Name = "originalY"
            NumberValue_24.Parent = v_31_upvr
            v_31_upvr.MouseEnter:Connect(function() -- Line 2989
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_31_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_31_upvr)
            end)
            v_31_upvr.SelectionGained:Connect(function() -- Line 2990
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_31_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_31_upvr)
            end)
            v_31_upvr.MouseLeave:Connect(function() -- Line 2991
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_31_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_31_upvr)
            end)
            v_31_upvr.SelectionLost:Connect(function() -- Line 2992
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_31_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_31_upvr)
            end)
            if v_31_upvr.Name == "xButton" then
                v_31_upvr.Activated:Connect(function() -- Line 2995
                    --[[ Upvalues[3]:
                        [1]: v_31_upvr (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: resetMenus_upvr (copied, readonly)
                    ]]
                    clickSound_upvr:Play()
                    resetMenus_upvr(v_31_upvr.Parent)
                end)
            end
        end
    end
    for _, v_32_upvr in pairs(Parent_3_upvr.Parent:WaitForChild("fortuneOtherMenusGui"):GetDescendants()) do
        if v_32_upvr:IsA("TextButton") or v_32_upvr:IsA("ImageButton") then
            local NumberValue_3 = Instance.new("NumberValue")
            NumberValue_3.Value = v_32_upvr.Size.X.Scale
            NumberValue_3.Name = "originalX"
            NumberValue_3.Parent = v_32_upvr
            local NumberValue_17 = Instance.new("NumberValue")
            NumberValue_17.Value = v_32_upvr.Size.Y.Scale
            NumberValue_17.Name = "originalY"
            NumberValue_17.Parent = v_32_upvr
            v_32_upvr.MouseEnter:Connect(function() -- Line 3014
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_32_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_32_upvr)
            end)
            v_32_upvr.SelectionGained:Connect(function() -- Line 3015
                --[[ Upvalues[2]:
                    [1]: mainButtonHover_upvr (readonly)
                    [2]: v_32_upvr (readonly)
                ]]
                mainButtonHover_upvr(v_32_upvr)
            end)
            v_32_upvr.MouseLeave:Connect(function() -- Line 3016
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_32_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_32_upvr)
            end)
            v_32_upvr.SelectionLost:Connect(function() -- Line 3017
                --[[ Upvalues[2]:
                    [1]: mainButtonExit_upvr (readonly)
                    [2]: v_32_upvr (readonly)
                ]]
                mainButtonExit_upvr(v_32_upvr)
            end)
            if v_32_upvr.Name == "xButton" then
                v_32_upvr.Activated:Connect(function() -- Line 3020
                    --[[ Upvalues[3]:
                        [1]: v_32_upvr (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: resetMenus_upvr (copied, readonly)
                    ]]
                    clickSound_upvr:Play()
                    resetMenus_upvr(v_32_upvr.Parent)
                end)
            end
        end
    end
    var249_upvw = shopMenu_upvr:WaitForChild("sideButtons"):WaitForChild("passButton")
    var249_upvw.buttonLabel.TextColor3 = var249_upvw:WaitForChild("hoverButtonColor").Value
    var249_upvw:WaitForChild("backSquare").ImageColor3 = var249_upvw:WaitForChild("hoverButtonColor").Value
    var249_upvw:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = var249_upvw:WaitForChild("underHoverButtonColor").Value
    var249_upvw.Size = UDim2.new(var249_upvw:WaitForChild("originalX").Value + 0.02, 0, var249_upvw:WaitForChild("originalY").Value + 0.02, 0)
    var334_upvw = itemsMenu_upvr:WaitForChild("sideButtons"):WaitForChild("petsButton")
    local var477 = var334_upvw
    var477.buttonLabel.TextColor3 = var477:WaitForChild("hoverButtonColor").Value
    var477:WaitForChild("backSquare").ImageColor3 = var477:WaitForChild("hoverButtonColor").Value
    var477:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = var477:WaitForChild("underHoverButtonColor").Value
    var477.Size = UDim2.new(var477:WaitForChild("originalX").Value + 0.02, 0, var477:WaitForChild("originalY").Value + 0.02, 0)
    for _, v_33 in pairs(shopMenu_upvr:WaitForChild("menus"):GetChildren()) do
        if v_33 ~= nil and (v_33:IsA("Frame") or v_33:IsA("ScrollingFrame")) then
            for _, v_34_upvr in pairs(v_33:GetChildren()) do
                if v_34_upvr ~= nil and v_34_upvr:IsA("TextButton") and v_34_upvr:FindFirstChild("id") ~= nil then
                    if v_34_upvr.Parent.Name == "boostsMenu" or v_34_upvr.Parent.Name == "gemsMenu" or v_34_upvr.Parent.Name == "petsMenu" then
                        v_34_upvr.Activated:Connect(function() -- Line 3048
                            --[[ Upvalues[4]:
                                [1]: clickSound_upvr (copied, readonly)
                                [2]: MarketplaceService_upvr (copied, readonly)
                                [3]: LocalPlayer_upvr (copied, readonly)
                                [4]: v_34_upvr (readonly)
                            ]]
                            clickSound_upvr:Play()
                            MarketplaceService_upvr:PromptProductPurchase(LocalPlayer_upvr, v_34_upvr.id.Value)
                        end)
                    elseif v_34_upvr.Parent.Name == "passesMenu" then
                        v_34_upvr.Activated:Connect(function() -- Line 3056
                            --[[ Upvalues[4]:
                                [1]: clickSound_upvr (copied, readonly)
                                [2]: MarketplaceService_upvr (copied, readonly)
                                [3]: LocalPlayer_upvr (copied, readonly)
                                [4]: v_34_upvr (readonly)
                            ]]
                            clickSound_upvr:Play()
                            MarketplaceService_upvr:PromptGamePassPurchase(LocalPlayer_upvr, v_34_upvr.id.Value)
                        end)
                    end
                end
            end
        end
    end
    local pageLabel_upvr = itemsMenu_upvr:WaitForChild("pageLabel")
    local function _() -- Line 3074, Named "findPowerUpPage"
        --[[ Upvalues[5]:
            [1]: var95_upvw (copied, read and write)
            [2]: inventoryPage_upvr (copied, readonly)
            [3]: powerUpFrames_upvr (copied, readonly)
            [4]: pageLabel_upvr (readonly)
            [5]: var94_upvw (copied, read and write)
        ]]
        if var95_upvw <= 0 then
            var95_upvw += 1
            local clone_20 = inventoryPage_upvr:Clone()
            clone_20.Name = "page"..tostring(var95_upvw)
            clone_20.Visible = true
            clone_20.Parent = powerUpFrames_upvr
            pageLabel_upvr.Text = "Page "..tostring(var94_upvw)..'/'..tostring(var95_upvw)
            pageLabel_upvr:WaitForChild("shadow").Text = pageLabel_upvr.Text
            return clone_20
        end
        local SOME_13 = powerUpFrames_upvr:FindFirstChild("page"..tostring(var95_upvw))
        if SOME_13 ~= nil then
            if #SOME_13:GetChildren() - 1 < 12 then
                return SOME_13
            end
            var95_upvw += 1
            local clone_41 = inventoryPage_upvr:Clone()
            clone_41.Name = "page"..tostring(var95_upvw)
            clone_41.Parent = powerUpFrames_upvr
            pageLabel_upvr.Text = "Page "..tostring(var94_upvw)..'/'..tostring(var95_upvw)
            pageLabel_upvr:WaitForChild("shadow").Text = pageLabel_upvr.Text
            return clone_41
        end
    end
end)()
local rebirthSound_upvr = script:WaitForChild("rebirthSound")
local HumanoidRootPart_upvr = Character_upvr:WaitForChild("HumanoidRootPart")
local CurrentCamera_upvr = workspace.CurrentCamera
local var493_upvw
local var494_upvw
local RunService_upvr = game:GetService("RunService")
local any_LoadAnimation_result1_upvr = Humanoid_upvr:LoadAnimation(ReplicatedStorage_upvr:WaitForChild("gameAnims"):WaitForChild("Misc"):WaitForChild("rebirthing"))
local var497_upvw
local rebirthRemote_upvr = rEvents_upvr:WaitForChild("rebirthRemote")
local customSpeed_upvr = LocalPlayer_upvr:WaitForChild("customSpeed")
local customSize_upvr = LocalPlayer_upvr:WaitForChild("customSize")
local changeSpeedSizeRemote_upvr = rEvents_upvr:WaitForChild("changeSpeedSizeRemote")
local calculatePowerUpSellPrice_upvr = module_upvr_2.calculatePowerUpSellPrice
local sellPowerUpEvent_upvr = rEvents_upvr:WaitForChild("sellPowerUpEvent")
local evolvePowerUpEvent_upvr = rEvents_upvr:WaitForChild("evolvePowerUpEvent")
local purchaseEvent_upvr = rEvents_upvr:WaitForChild("purchaseEvent")
local muscleEvent_upvr = LocalPlayer_upvr:WaitForChild("muscleEvent")
;(function() -- Line 3125, Named "connectOtherMenus"
    --[[ Upvalues[64]:
        [1]: Parent_3_upvr (readonly)
        [2]: rebirthMultiplier_upvr (readonly)
        [3]: module_upvr (readonly)
        [4]: shortenNumber_upvr (readonly)
        [5]: calculateRequiredRebirthStrength_upvr (readonly)
        [6]: LocalPlayer_upvr (readonly)
        [7]: rebirthSound_upvr (readonly)
        [8]: TweenService_upvr (readonly)
        [9]: Debris_upvr (readonly)
        [10]: HumanoidRootPart_upvr (readonly)
        [11]: CurrentCamera_upvr (readonly)
        [12]: var493_upvw (read and write)
        [13]: var494_upvw (read and write)
        [14]: RunService_upvr (readonly)
        [15]: any_LoadAnimation_result1_upvr (readonly)
        [16]: var497_upvw (read and write)
        [17]: Humanoid_upvr (readonly)
        [18]: rebirthMenu_upvr (readonly)
        [19]: Character_upvr (readonly)
        [20]: Rebirths_upvr (readonly)
        [21]: Strength_4_upvr (readonly)
        [22]: rebirthRemote_upvr (readonly)
        [23]: resetMenus_upvr (readonly)
        [24]: deniedSound_upvr (readonly)
        [25]: clickSound_upvr (readonly)
        [26]: onButton_upvr (readonly)
        [27]: settingsMenu_upvr (readonly)
        [28]: usingCustomSpeed_upvr (readonly)
        [29]: tostring_result1_upvw (read and write)
        [30]: customSpeed_upvr (readonly)
        [31]: usingCustomSize_upvr (readonly)
        [32]: tostring_result1_upvw_2 (read and write)
        [33]: customSize_upvr (readonly)
        [34]: changeSpeedSizeRemote_upvr (readonly)
        [35]: helpMenu_upvr (readonly)
        [36]: var77_upvw (read and write)
        [37]: calculatePowerUpSellPrice_upvr (readonly)
        [38]: any_getPlayerPlatform_result1_upvr (readonly)
        [39]: GuiService_upvr (readonly)
        [40]: itemsMenu_upvr (readonly)
        [41]: gemsSound_upvr (readonly)
        [42]: sellPowerUpEvent_upvr (readonly)
        [43]: getNumberOfSamePowerUp_upvr (readonly)
        [44]: powerUpsFolder_upvr (readonly)
        [45]: explosionSound_upvr (readonly)
        [46]: evolvePowerUpEvent_upvr (readonly)
        [47]: shopMenu_upvr (readonly)
        [48]: ownedGamepasses_upvr (readonly)
        [49]: purchaseEvent_upvr (readonly)
        [50]: packsMenu_upvr (readonly)
        [51]: updateStatMenus_upvr (readonly)
        [52]: powerUpLevelUpSound_upvr (readonly)
        [53]: powerUpsNotificationsFrame_upvr (readonly)
        [54]: calculateRemainingPowerUpCapacity_upvr (readonly)
        [55]: module_upvr_2 (readonly)
        [56]: tbl_2_upvr (readonly)
        [57]: travelAreaMenu_upvr (readonly)
        [58]: brawlJoinLabel_upvr (readonly)
        [59]: tradePanel_upvr (readonly)
        [60]: sideButtons_upvr_3 (readonly)
        [61]: muscleEvent_upvr (readonly)
        [62]: levelUpSound_upvr (readonly)
        [63]: areaWarningLabel_upvr (readonly)
        [64]: var82_upvw (read and write)
    ]]
    -- KONSTANTERROR: [0] 1. Error Block 32 start (CF ANALYSIS FAILED)
    local function rebirthSequence_upvr(arg1) -- Line 3127, Named "rebirthSequence"
        --[[ Upvalues[9]:
            [1]: Parent_3_upvr (copied, readonly)
            [2]: rebirthMultiplier_upvr (copied, readonly)
            [3]: module_upvr (copied, readonly)
            [4]: shortenNumber_upvr (copied, readonly)
            [5]: calculateRequiredRebirthStrength_upvr (copied, readonly)
            [6]: LocalPlayer_upvr (copied, readonly)
            [7]: rebirthSound_upvr (copied, readonly)
            [8]: TweenService_upvr (copied, readonly)
            [9]: Debris_upvr (copied, readonly)
        ]]
        local rebirthImage = Parent_3_upvr:WaitForChild("rebirthImage")
        local newMultiplierLabel = rebirthImage:WaitForChild("newMultiplierLabel")
        local nextRebirthLabel = rebirthImage:WaitForChild("nextRebirthLabel")
        for _, v_35 in pairs(rebirthImage:GetDescendants()) do
            if v_35 ~= nil and v_35:IsA("ObjectValue") and v_35.Name == "tweenValue" and v_35.Value ~= nil then
                v_35.Value:Cancel()
            end
        end
        newMultiplierLabel.Text = "New Multiplier: "..tostring(rebirthMultiplier_upvr.Value)..'%'
        if module_upvr:IsActive() == true then
            nextRebirthLabel.Text = ""
        else
            nextRebirthLabel.Text = "Next Rebirth: "..shortenNumber_upvr(calculateRequiredRebirthStrength_upvr(arg1, LocalPlayer_upvr)).." Strength"
        end
        rebirthSound_upvr:Play()
        rebirthImage.Size = UDim2.new(0, 0, 0.1, 0)
        newMultiplierLabel.Visible = false
        nextRebirthLabel.Visible = false
        newMultiplierLabel.TextTransparency = 1
        newMultiplierLabel.TextStrokeTransparency = 1
        nextRebirthLabel.TextTransparency = 1
        nextRebirthLabel.TextStrokeTransparency = 1
        rebirthImage.ImageTransparency = 0
        rebirthImage.Visible = true
        rebirthImage:TweenSize(UDim2.new(0.3, 0, 0.15, 0), "Out", "Quad", 0.5, true)
        wait(0.4)
        local clone_31 = rebirthImage:Clone()
        for _, v_36 in pairs(clone_31:GetChildren()) do
            if v_36 ~= nil and v_36:IsA("UIAspectRatioConstraint") == false then
                v_36:Destroy()
            end
        end
        clone_31.Size = UDim2.new(0.3, 0, 0.15, 0)
        clone_31.ImageTransparency = 0.5
        clone_31.Parent = Parent_3_upvr
        TweenService_upvr:Create(clone_31, TweenInfo.new(0.5), {
            ImageTransparency = 1;
            Size = UDim2.new(0.56, 0, 0.3, 0);
        }):Play()
        Debris_upvr:AddItem(clone_31, 0.5)
        wait(0.5)
        newMultiplierLabel.Visible = true
        newMultiplierLabel:WaitForChild("tweenValue1").Value = TweenService_upvr:Create(newMultiplierLabel, TweenInfo.new(0.25), {
            TextStrokeTransparency = 0.9;
        })
        newMultiplierLabel.tweenValue1.Value:Play()
        newMultiplierLabel:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(newMultiplierLabel, TweenInfo.new(0.5), {
            TextTransparency = 0;
        })
        newMultiplierLabel.tweenValue2.Value:Play()
        wait(0.25)
        nextRebirthLabel.Visible = true
        nextRebirthLabel:WaitForChild("tweenValue1").Value = TweenService_upvr:Create(nextRebirthLabel, TweenInfo.new(0.25), {
            TextStrokeTransparency = 0.9;
        })
        nextRebirthLabel.tweenValue1.Value:Play()
        nextRebirthLabel:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(nextRebirthLabel, TweenInfo.new(0.5), {
            TextTransparency = 0;
        })
        nextRebirthLabel.tweenValue2.Value:Play()
        wait(5)
        rebirthImage:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(rebirthImage, TweenInfo.new(1), {
            ImageTransparency = 1;
        })
        rebirthImage.tweenValue2.Value:Play()
        wait(0.5)
        newMultiplierLabel:WaitForChild("tweenValue1").Value = TweenService_upvr:Create(newMultiplierLabel, TweenInfo.new(0.5), {
            TextStrokeTransparency = 1;
        })
        newMultiplierLabel.tweenValue1.Value:Play()
        newMultiplierLabel:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(newMultiplierLabel, TweenInfo.new(0.25), {
            TextTransparency = 1;
        })
        newMultiplierLabel.tweenValue2.Value:Play()
        wait(0.5)
        nextRebirthLabel:WaitForChild("tweenValue1").Value = TweenService_upvr:Create(nextRebirthLabel, TweenInfo.new(0.5), {
            TextStrokeTransparency = 1;
        })
        nextRebirthLabel.tweenValue1.Value:Play()
        nextRebirthLabel:WaitForChild("tweenValue2").Value = TweenService_upvr:Create(nextRebirthLabel, TweenInfo.new(0.25), {
            TextTransparency = 1;
        })
        nextRebirthLabel.tweenValue2.Value:Play()
    end
    local function rebirthCameraSequence_upvr() -- Line 3228, Named "rebirthCameraSequence"
        --[[ Upvalues[11]:
            [1]: HumanoidRootPart_upvr (copied, readonly)
            [2]: CurrentCamera_upvr (copied, readonly)
            [3]: Debris_upvr (copied, readonly)
            [4]: var493_upvw (copied, read and write)
            [5]: TweenService_upvr (copied, readonly)
            [6]: var494_upvw (copied, read and write)
            [7]: RunService_upvr (copied, readonly)
            [8]: any_LoadAnimation_result1_upvr (copied, readonly)
            [9]: Parent_3_upvr (copied, readonly)
            [10]: var497_upvw (copied, read and write)
            [11]: Humanoid_upvr (copied, readonly)
        ]]
        local var531_upvr = HumanoidRootPart_upvr
        CurrentCamera_upvr.CameraType = Enum.CameraType.Scriptable
        CurrentCamera_upvr.Focus = var531_upvr.CFrame
        local NumberValue_23_upvr = Instance.new("NumberValue")
        local var533_upvw = false
        Debris_upvr:AddItem(NumberValue_23_upvr, 7)
        local vector3_upvw = Vector3.new(0, 5, 35 + HumanoidRootPart_upvr.Size.X)
        local function updateCamera_upvr() -- Line 3248, Named "updateCamera"
            --[[ Upvalues[5]:
                [1]: vector3_upvw (read and write)
                [2]: HumanoidRootPart_upvr (copied, readonly)
                [3]: var531_upvr (readonly)
                [4]: NumberValue_23_upvr (readonly)
                [5]: CurrentCamera_upvr (copied, readonly)
            ]]
            vector3_upvw = Vector3.new(0, 5, 35 + HumanoidRootPart_upvr.Size.X)
            CurrentCamera_upvr.CFrame = CFrame.new(var531_upvr.Position) * CFrame.Angles(0, math.rad(NumberValue_23_upvr.Value), 0):ToWorldSpace(CFrame.new(vector3_upvw))
            CurrentCamera_upvr.CFrame = CFrame.new(CurrentCamera_upvr.CFrame.Position, var531_upvr.Position)
        end
        if var493_upvw ~= nil then
            var493_upvw:Cancel()
        end
        var493_upvw = TweenService_upvr:Create(NumberValue_23_upvr, TweenInfo.new(1.5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 4), {
            Value = 360;
        })
        var493_upvw.Completed:Connect(function() -- Line 3272
            --[[ Upvalues[1]:
                [1]: var533_upvw (read and write)
            ]]
            var533_upvw = true
        end)
        var493_upvw:Play()
        if var494_upvw ~= nil then
            var494_upvw:Disconnect()
        end
        var494_upvw = RunService_upvr.RenderStepped:Connect(function() -- Line 3283
            --[[ Upvalues[2]:
                [1]: var533_upvw (read and write)
                [2]: updateCamera_upvr (readonly)
            ]]
            if var533_upvw == false then
                updateCamera_upvr()
            end
        end)
        any_LoadAnimation_result1_upvr:Play()
        local screenGradient_upvr = Parent_3_upvr:WaitForChild("screenGradient")
        if var497_upvw ~= nil then
            var497_upvw:Cancel()
        end
        screenGradient_upvr.ImageTransparency = 0
        screenGradient_upvr.Visible = true
        var497_upvw = TweenService_upvr:Create(screenGradient_upvr, TweenInfo.new(6), {
            ImageTransparency = 0.5;
        })
        var497_upvw:Play()
        coroutine.resume(coroutine.create(function() -- Line 3304
            --[[ Upvalues[7]:
                [1]: var494_upvw (copied, read and write)
                [2]: var493_upvw (copied, read and write)
                [3]: CurrentCamera_upvr (copied, readonly)
                [4]: Humanoid_upvr (copied, readonly)
                [5]: any_LoadAnimation_result1_upvr (copied, readonly)
                [6]: var497_upvw (copied, read and write)
                [7]: screenGradient_upvr (readonly)
            ]]
            wait(6)
            if var494_upvw ~= nil then
                var494_upvw:Disconnect()
            end
            if var493_upvw ~= nil then
                var493_upvw:Cancel()
            end
            CurrentCamera_upvr.CameraSubject = Humanoid_upvr
            CurrentCamera_upvr.CameraType = Enum.CameraType.Custom
            any_LoadAnimation_result1_upvr:Stop(0.25)
            if var497_upvw ~= nil then
                var497_upvw:Cancel()
            end
            screenGradient_upvr.ImageTransparency = 1
            screenGradient_upvr.Visible = false
        end))
    end
    local var542_upvw = true
    rebirthMenu_upvr:WaitForChild("confirmButton").Activated:Connect(function() -- Line 3339
        --[[ Upvalues[12]:
            [1]: Humanoid_upvr (copied, readonly)
            [2]: var542_upvw (read and write)
            [3]: Character_upvr (copied, readonly)
            [4]: calculateRequiredRebirthStrength_upvr (copied, readonly)
            [5]: Rebirths_upvr (copied, readonly)
            [6]: LocalPlayer_upvr (copied, readonly)
            [7]: Strength_4_upvr (copied, readonly)
            [8]: rebirthRemote_upvr (copied, readonly)
            [9]: resetMenus_upvr (copied, readonly)
            [10]: rebirthCameraSequence_upvr (readonly)
            [11]: rebirthSequence_upvr (readonly)
            [12]: deniedSound_upvr (copied, readonly)
        ]]
        if 0 < Humanoid_upvr.Health and var542_upvw == true and Character_upvr:FindFirstChild("isRebirthing") == nil and Character_upvr:FindFirstChild("lastMapCFrame") == nil then
            var542_upvw = false
            local var19_result1 = calculateRequiredRebirthStrength_upvr(Rebirths_upvr.Value, LocalPlayer_upvr)
            if var19_result1 ~= nil and var19_result1 <= Strength_4_upvr.Value then
                local any_InvokeServer_result1_7, any_InvokeServer_result2_7 = rebirthRemote_upvr:InvokeServer("rebirthRequest")
                if any_InvokeServer_result1_7 ~= nil and any_InvokeServer_result1_7 == true then
                    resetMenus_upvr()
                    rebirthCameraSequence_upvr()
                    rebirthSequence_upvr(any_InvokeServer_result2_7)
                else
                    deniedSound_upvr:Play()
                end
            else
                deniedSound_upvr:Play()
            end
            wait(0.2)
            var542_upvw = true
        end
    end)
    onButton_upvr.Activated:Connect(function() -- Line 3376, Named "musicOnButtonClick"
        --[[ Upvalues[3]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: LocalPlayer_upvr (copied, readonly)
            [3]: onButton_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        if LocalPlayer_upvr:WaitForChild("musicOn").Value == true then
            LocalPlayer_upvr.musicOn.Value = false
            onButton_upvr:WaitForChild("backSquare").ImageColor3 = onButton_upvr:WaitForChild("offButtonColor").Value
            onButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = onButton_upvr:WaitForChild("underOffButtonColor").Value
            onButton_upvr:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
            onButton_upvr.buttonLabel.Text = "OFF"
            for _, v_37 in pairs(workspace:WaitForChild("musicFolder"):GetDescendants()) do
                if v_37 ~= nil and v_37:IsA("Sound") then
                    if v_37:FindFirstChild("normalVolume") == nil then
                        local NumberValue_11 = Instance.new("NumberValue")
                        NumberValue_11.Name = "normalVolume"
                        NumberValue_11.Value = v_37.Volume
                        NumberValue_11.Parent = v_37
                    end
                    v_37.Volume = 0
                end
            end
        else
            LocalPlayer_upvr.musicOn.Value = true
            onButton_upvr:WaitForChild("backSquare").ImageColor3 = onButton_upvr:WaitForChild("buttonColor").Value
            onButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = onButton_upvr:WaitForChild("underButtonColor").Value
            onButton_upvr:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
            onButton_upvr.buttonLabel.Text = "ON"
            for _, v_83 in pairs(workspace:WaitForChild("musicFolder"):GetDescendants()) do
                if v_83 ~= nil and v_83:IsA("Sound") and v_83:FindFirstChild("normalVolume") ~= nil then
                    v_83.Volume = v_83.normalVolume.Value
                end
            end
        end
    end)
    local amountBox_upvr = settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("speedSetting"):WaitForChild("amountBox")
    local amountBox_upvr_2 = settingsMenu_upvr:WaitForChild("settingsFrame"):WaitForChild("sizeSetting"):WaitForChild("amountBox")
    if usingCustomSpeed_upvr.Value == true then
        tostring_result1_upvw = tostring(customSpeed_upvr.Value)
    end
    if usingCustomSize_upvr.Value == true then
        tostring_result1_upvw_2 = tostring(customSize_upvr.Value)
    end
    local var559_upvw
    amountBox_upvr.FocusLost:Connect(function(arg1) -- Line 3440
        --[[ Upvalues[8]:
            [1]: amountBox_upvr (readonly)
            [2]: changeSpeedSizeRemote_upvr (copied, readonly)
            [3]: clickSound_upvr (copied, readonly)
            [4]: tostring_result1_upvw (copied, read and write)
            [5]: var559_upvw (read and write)
            [6]: settingsMenu_upvr (copied, readonly)
            [7]: TweenService_upvr (copied, readonly)
            [8]: deniedSound_upvr (copied, readonly)
        ]]
        if arg1 == true then
            local tonumber_result1 = tonumber(amountBox_upvr.Text)
            if tonumber_result1 ~= nil then
                local any_InvokeServer_result1_2, any_InvokeServer_result2_6, any_InvokeServer_result3_4 = changeSpeedSizeRemote_upvr:InvokeServer("changeSpeed", tonumber_result1)
                if any_InvokeServer_result1_2 == true and any_InvokeServer_result2_6 ~= nil then
                    clickSound_upvr:Play()
                    amountBox_upvr.Text = tostring(any_InvokeServer_result2_6)
                    tostring_result1_upvw = tostring(any_InvokeServer_result2_6)
                    if var559_upvw ~= nil then
                        var559_upvw:Cancel()
                    end
                    settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3_4
                    settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
                    settingsMenu_upvr.warningLabel.Visible = true
                    var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                        Visible = false;
                    })
                    var559_upvw:Play()
                else
                    if any_InvokeServer_result3_4 == "Max speed set" and any_InvokeServer_result2_6 ~= nil then
                        clickSound_upvr:Play()
                        amountBox_upvr.Text = tostring(any_InvokeServer_result2_6)
                        tostring_result1_upvw = tostring(any_InvokeServer_result2_6)
                        if var559_upvw ~= nil then
                            var559_upvw:Cancel()
                        end
                        settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3_4
                        settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
                        settingsMenu_upvr.warningLabel.Visible = true
                        var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                            Visible = false;
                        })
                        var559_upvw:Play()
                        return
                    end
                    if any_InvokeServer_result3_4 == "Too low! Lowest speed set" and any_InvokeServer_result2_6 ~= nil then
                        deniedSound_upvr:Play()
                        amountBox_upvr.Text = tostring(any_InvokeServer_result2_6)
                        tostring_result1_upvw = tostring(any_InvokeServer_result2_6)
                        if var559_upvw ~= nil then
                            var559_upvw:Cancel()
                        end
                        settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3_4
                        settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(170, 0, 0)
                        settingsMenu_upvr.warningLabel.Visible = true
                        var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                            Visible = false;
                        })
                        var559_upvw:Play()
                        return
                    end
                    deniedSound_upvr:Play()
                    amountBox_upvr.Text = tostring_result1_upvw
                    if var559_upvw ~= nil then
                        var559_upvw:Cancel()
                    end
                    settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3_4
                    settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(170, 0, 0)
                    settingsMenu_upvr.warningLabel.Visible = true
                    var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                        Visible = false;
                    })
                    var559_upvw:Play()
                end
            end
            amountBox_upvr.Text = tostring_result1_upvw
            deniedSound_upvr:Play()
        else
            amountBox_upvr.Text = tostring_result1_upvw
        end
    end)
    amountBox_upvr_2.FocusLost:Connect(function(arg1) -- Line 3542
        --[[ Upvalues[8]:
            [1]: amountBox_upvr_2 (readonly)
            [2]: changeSpeedSizeRemote_upvr (copied, readonly)
            [3]: clickSound_upvr (copied, readonly)
            [4]: tostring_result1_upvw_2 (copied, read and write)
            [5]: var559_upvw (read and write)
            [6]: settingsMenu_upvr (copied, readonly)
            [7]: TweenService_upvr (copied, readonly)
            [8]: deniedSound_upvr (copied, readonly)
        ]]
        if arg1 == true then
            local tonumber_result1_2 = tonumber(amountBox_upvr_2.Text)
            if tonumber_result1_2 ~= nil then
                local any_InvokeServer_result1_6, any_InvokeServer_result2_5, any_InvokeServer_result3_6 = changeSpeedSizeRemote_upvr:InvokeServer("changeSize", tonumber_result1_2)
                if any_InvokeServer_result1_6 == true and any_InvokeServer_result2_5 ~= nil then
                    clickSound_upvr:Play()
                    amountBox_upvr_2.Text = tostring(any_InvokeServer_result2_5)
                    tostring_result1_upvw_2 = tostring(any_InvokeServer_result2_5)
                    if var559_upvw ~= nil then
                        var559_upvw:Cancel()
                    end
                    settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3_6
                    settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
                    settingsMenu_upvr.warningLabel.Visible = true
                    var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                        Visible = false;
                    })
                    var559_upvw:Play()
                else
                    if any_InvokeServer_result3_6 == "Max size set" and any_InvokeServer_result2_5 ~= nil then
                        clickSound_upvr:Play()
                        amountBox_upvr_2.Text = tostring(any_InvokeServer_result2_5)
                        tostring_result1_upvw_2 = tostring(any_InvokeServer_result2_5)
                        if var559_upvw ~= nil then
                            var559_upvw:Cancel()
                        end
                        settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3_6
                        settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
                        settingsMenu_upvr.warningLabel.Visible = true
                        var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                            Visible = false;
                        })
                        var559_upvw:Play()
                        return
                    end
                    if any_InvokeServer_result3_6 == "Too low! Lowest size set" and any_InvokeServer_result2_5 ~= nil then
                        deniedSound_upvr:Play()
                        amountBox_upvr_2.Text = tostring(any_InvokeServer_result2_5)
                        tostring_result1_upvw_2 = tostring(any_InvokeServer_result2_5)
                        if var559_upvw ~= nil then
                            var559_upvw:Cancel()
                        end
                        settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3_6
                        settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(170, 0, 0)
                        settingsMenu_upvr.warningLabel.Visible = true
                        var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                            Visible = false;
                        })
                        var559_upvw:Play()
                        return
                    end
                    deniedSound_upvr:Play()
                    amountBox_upvr_2.Text = tostring_result1_upvw_2
                    if var559_upvw ~= nil then
                        var559_upvw:Cancel()
                    end
                    settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3_6
                    settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(170, 0, 0)
                    settingsMenu_upvr.warningLabel.Visible = true
                    var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                        Visible = false;
                    })
                    var559_upvw:Play()
                end
            end
            amountBox_upvr_2.Text = tostring_result1_upvw_2
            deniedSound_upvr:Play()
        else
            amountBox_upvr_2.Text = tostring_result1_upvw_2
        end
    end)
    settingsMenu_upvr:WaitForChild("maxSpeedButton").Activated:Connect(function() -- Line 3644
        --[[ Upvalues[8]:
            [1]: changeSpeedSizeRemote_upvr (copied, readonly)
            [2]: clickSound_upvr (copied, readonly)
            [3]: amountBox_upvr (readonly)
            [4]: tostring_result1_upvw (copied, read and write)
            [5]: var559_upvw (read and write)
            [6]: settingsMenu_upvr (copied, readonly)
            [7]: TweenService_upvr (copied, readonly)
            [8]: deniedSound_upvr (copied, readonly)
        ]]
        local any_InvokeServer_result1_5, any_InvokeServer_result2, any_InvokeServer_result3 = changeSpeedSizeRemote_upvr:InvokeServer("changeSpeed", math.huge)
        if any_InvokeServer_result1_5 == true and any_InvokeServer_result2 ~= nil then
            clickSound_upvr:Play()
            amountBox_upvr.Text = tostring(any_InvokeServer_result2)
            tostring_result1_upvw = tostring(any_InvokeServer_result2)
            if var559_upvw ~= nil then
                var559_upvw:Cancel()
            end
            settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3
            settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
            settingsMenu_upvr.warningLabel.Visible = true
            var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                Visible = false;
            })
            var559_upvw:Play()
        else
            if any_InvokeServer_result3 == "Max speed set" and any_InvokeServer_result2 ~= nil then
                clickSound_upvr:Play()
                amountBox_upvr.Text = tostring(any_InvokeServer_result2)
                tostring_result1_upvw = tostring(any_InvokeServer_result2)
                if var559_upvw ~= nil then
                    var559_upvw:Cancel()
                end
                settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3
                settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
                settingsMenu_upvr.warningLabel.Visible = true
                var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                    Visible = false;
                })
                var559_upvw:Play()
                return
            end
            if any_InvokeServer_result3 == "Too low! Lowest speed set" and any_InvokeServer_result2 ~= nil then
                deniedSound_upvr:Play()
                amountBox_upvr.Text = tostring(any_InvokeServer_result2)
                tostring_result1_upvw = tostring(any_InvokeServer_result2)
                if var559_upvw ~= nil then
                    var559_upvw:Cancel()
                end
                settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3
                settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(170, 0, 0)
                settingsMenu_upvr.warningLabel.Visible = true
                var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                    Visible = false;
                })
                var559_upvw:Play()
                return
            end
            deniedSound_upvr:Play()
            amountBox_upvr.Text = tostring_result1_upvw
            if var559_upvw ~= nil then
                var559_upvw:Cancel()
            end
            settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3
            settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(170, 0, 0)
            settingsMenu_upvr.warningLabel.Visible = true
            var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                Visible = false;
            })
            var559_upvw:Play()
        end
    end)
    settingsMenu_upvr:WaitForChild("maxSizeButton").Activated:Connect(function() -- Line 3733
        --[[ Upvalues[8]:
            [1]: changeSpeedSizeRemote_upvr (copied, readonly)
            [2]: clickSound_upvr (copied, readonly)
            [3]: amountBox_upvr_2 (readonly)
            [4]: tostring_result1_upvw_2 (copied, read and write)
            [5]: var559_upvw (read and write)
            [6]: settingsMenu_upvr (copied, readonly)
            [7]: TweenService_upvr (copied, readonly)
            [8]: deniedSound_upvr (copied, readonly)
        ]]
        local any_InvokeServer_result1_4, any_InvokeServer_result2_4, any_InvokeServer_result3_5 = changeSpeedSizeRemote_upvr:InvokeServer("changeSize", math.huge)
        if any_InvokeServer_result1_4 == true and any_InvokeServer_result2_4 ~= nil then
            clickSound_upvr:Play()
            amountBox_upvr_2.Text = tostring(any_InvokeServer_result2_4)
            tostring_result1_upvw_2 = tostring(any_InvokeServer_result2_4)
            if var559_upvw ~= nil then
                var559_upvw:Cancel()
            end
            settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3_5
            settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
            settingsMenu_upvr.warningLabel.Visible = true
            var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                Visible = false;
            })
            var559_upvw:Play()
        else
            if any_InvokeServer_result3_5 == "Max size set" and any_InvokeServer_result2_4 ~= nil then
                clickSound_upvr:Play()
                amountBox_upvr_2.Text = tostring(any_InvokeServer_result2_4)
                tostring_result1_upvw_2 = tostring(any_InvokeServer_result2_4)
                if var559_upvw ~= nil then
                    var559_upvw:Cancel()
                end
                settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3_5
                settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
                settingsMenu_upvr.warningLabel.Visible = true
                var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                    Visible = false;
                })
                var559_upvw:Play()
                return
            end
            if any_InvokeServer_result3_5 == "Too low! Lowest size set" and any_InvokeServer_result2_4 ~= nil then
                deniedSound_upvr:Play()
                amountBox_upvr_2.Text = tostring(any_InvokeServer_result2_4)
                tostring_result1_upvw_2 = tostring(any_InvokeServer_result2_4)
                if var559_upvw ~= nil then
                    var559_upvw:Cancel()
                end
                settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3_5
                settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(170, 0, 0)
                settingsMenu_upvr.warningLabel.Visible = true
                var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                    Visible = false;
                })
                var559_upvw:Play()
                return
            end
            deniedSound_upvr:Play()
            amountBox_upvr_2.Text = tostring_result1_upvw_2
            if var559_upvw ~= nil then
                var559_upvw:Cancel()
            end
            settingsMenu_upvr:WaitForChild("warningLabel").Text = any_InvokeServer_result3_5
            settingsMenu_upvr.warningLabel.TextColor3 = Color3.fromRGB(170, 0, 0)
            settingsMenu_upvr.warningLabel.Visible = true
            var559_upvw = TweenService_upvr:Create(settingsMenu_upvr.warningLabel, TweenInfo.new(3), {
                Visible = false;
            })
            var559_upvw:Play()
        end
    end)
    local helpFrames_upvr = helpMenu_upvr:WaitForChild("helpFrames")
    local var595_upvr = #helpFrames_upvr:GetChildren() - 1
    local var596_upvw = 1
    local titleLabel_upvr = helpMenu_upvr:WaitForChild("titleFrame"):WaitForChild("titleLabel")
    titleLabel_upvr.Text = helpFrames_upvr:WaitForChild("page1"):WaitForChild("titleValue").Value
    titleLabel_upvr:WaitForChild("shadow").Text = titleLabel_upvr.Text
    helpMenu_upvr:WaitForChild("pageLabel").Text = "Page "..tostring(var596_upvw)..'/'..tostring(var595_upvr)
    helpMenu_upvr.pageLabel:WaitForChild("shadow").Text = helpMenu_upvr.pageLabel.Text
    local function helpMenuNextPrevButtonClick_upvr(arg1) -- Line 3835, Named "helpMenuNextPrevButtonClick"
        --[[ Upvalues[6]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: helpMenu_upvr (copied, readonly)
            [3]: var596_upvw (read and write)
            [4]: var595_upvr (readonly)
            [5]: helpFrames_upvr (readonly)
            [6]: titleLabel_upvr (readonly)
        ]]
        clickSound_upvr:Play()
        if arg1 == helpMenu_upvr:WaitForChild("nextButton") then
            if var595_upvr <= var596_upvw then
                var596_upvw = 1
            else
                var596_upvw += 1
            end
        elseif var596_upvw <= 1 then
            var596_upvw = var595_upvr
        else
            var596_upvw -= 1
        end
        local SOME_8 = helpFrames_upvr:FindFirstChild("page"..tostring(var596_upvw))
        if SOME_8 ~= nil then
            for _, v_38 in pairs(helpFrames_upvr:GetChildren()) do
                if v_38 ~= nil and v_38:IsA("Frame") then
                    v_38.Visible = false
                end
            end
            titleLabel_upvr.Text = SOME_8:WaitForChild("titleValue").Value
            titleLabel_upvr:WaitForChild("shadow").Text = SOME_8.titleValue.Value
            SOME_8.Visible = true
            helpMenu_upvr:WaitForChild("pageLabel").Text = "Page "..tostring(var596_upvw)..'/'..tostring(var595_upvr)
            helpMenu_upvr.pageLabel:WaitForChild("shadow").Text = helpMenu_upvr.pageLabel.Text
        end
    end
    helpMenu_upvr:WaitForChild("nextButton").Activated:Connect(function() -- Line 3874
        --[[ Upvalues[2]:
            [1]: helpMenuNextPrevButtonClick_upvr (readonly)
            [2]: helpMenu_upvr (copied, readonly)
        ]]
        helpMenuNextPrevButtonClick_upvr(helpMenu_upvr:WaitForChild("nextButton"))
    end)
    helpMenu_upvr:WaitForChild("prevButton").Activated:Connect(function() -- Line 3875
        --[[ Upvalues[2]:
            [1]: helpMenuNextPrevButtonClick_upvr (readonly)
            [2]: helpMenu_upvr (copied, readonly)
        ]]
        helpMenuNextPrevButtonClick_upvr(helpMenu_upvr:WaitForChild("prevButton"))
    end)
    local sellPowerUpMenu_upvr = Parent_3_upvr:WaitForChild("sellPowerUpMenu")
    itemsMenu_upvr:WaitForChild("powerUpEquipFrame"):WaitForChild("sellButton").Activated:Connect(function() -- Line 3879, Named "sellButtonClick"
        --[[ Upvalues[8]:
            [1]: var77_upvw (copied, read and write)
            [2]: sellPowerUpMenu_upvr (readonly)
            [3]: calculatePowerUpSellPrice_upvr (copied, readonly)
            [4]: clickSound_upvr (copied, readonly)
            [5]: shortenNumber_upvr (copied, readonly)
            [6]: Parent_3_upvr (copied, readonly)
            [7]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [8]: GuiService_upvr (copied, readonly)
        ]]
        if var77_upvw ~= nil and var77_upvw:FindFirstChild("powerUpReference") ~= nil and var77_upvw.powerUpReference.Value ~= nil then
            sellPowerUpMenu_upvr:WaitForChild("sellDescLabel").Text = "Want to sell "..var77_upvw.powerUpReference.Value.Name..'?'
            sellPowerUpMenu_upvr.sellDescLabel:WaitForChild("shadow").Text = sellPowerUpMenu_upvr.sellDescLabel.Text
            local calculatePowerUpSellPrice_upvr_result1 = calculatePowerUpSellPrice_upvr(var77_upvw.powerUpReference.Value)
            if calculatePowerUpSellPrice_upvr_result1 ~= nil then
                clickSound_upvr:Play()
                sellPowerUpMenu_upvr:WaitForChild("costLabel"):WaitForChild("amountLabel").Text = shortenNumber_upvr(calculatePowerUpSellPrice_upvr_result1)
                sellPowerUpMenu_upvr.costLabel.amountLabel:WaitForChild("shadow").Text = sellPowerUpMenu_upvr.costLabel.amountLabel.Text
                Parent_3_upvr:WaitForChild("sellCoverFrame").Visible = true
                sellPowerUpMenu_upvr.Visible = true
                if any_getPlayerPlatform_result1_upvr == "console" then
                    GuiService_upvr.SelectedObject = sellPowerUpMenu_upvr:WaitForChild("noButton")
                end
            end
        end
    end)
    sellPowerUpMenu_upvr:WaitForChild("noButton").Activated:Connect(function() -- Line 3909, Named "sellNoButtonClick"
        --[[ Upvalues[3]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: sellPowerUpMenu_upvr (readonly)
            [3]: Parent_3_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        sellPowerUpMenu_upvr.Visible = false
        Parent_3_upvr:WaitForChild("sellCoverFrame").Visible = false
    end)
    sellPowerUpMenu_upvr:WaitForChild("yesButton").Activated:Connect(function() -- Line 3918, Named "sellYesButtonClick"
        --[[ Upvalues[6]:
            [1]: var77_upvw (copied, read and write)
            [2]: gemsSound_upvr (copied, readonly)
            [3]: sellPowerUpMenu_upvr (readonly)
            [4]: Parent_3_upvr (copied, readonly)
            [5]: itemsMenu_upvr (copied, readonly)
            [6]: sellPowerUpEvent_upvr (copied, readonly)
        ]]
        if var77_upvw == nil or var77_upvw:FindFirstChild("powerUpReference") == nil or var77_upvw.powerUpReference.Value == nil then
        else
            gemsSound_upvr:Play()
            sellPowerUpMenu_upvr.Visible = false
            Parent_3_upvr:WaitForChild("sellCoverFrame").Visible = false
            itemsMenu_upvr:WaitForChild("powerUpEquipFrame").Visible = false
            itemsMenu_upvr:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), "Out", "Quad", 0.25, true)
            sellPowerUpEvent_upvr:FireServer("sellPowerUp", var77_upvw.powerUpReference.Value)
        end
    end)
    itemsMenu_upvr:WaitForChild("powerUpEquipFrame"):WaitForChild("evolveButton").Activated:Connect(function() -- Line 3939, Named "evolvePowerUpButtonClick"
        --[[ Upvalues[7]:
            [1]: var77_upvw (copied, read and write)
            [2]: getNumberOfSamePowerUp_upvr (copied, readonly)
            [3]: powerUpsFolder_upvr (copied, readonly)
            [4]: explosionSound_upvr (copied, readonly)
            [5]: itemsMenu_upvr (copied, readonly)
            [6]: evolvePowerUpEvent_upvr (copied, readonly)
            [7]: deniedSound_upvr (copied, readonly)
        ]]
        if var77_upvw ~= nil and var77_upvw:FindFirstChild("powerUpReference") ~= nil and var77_upvw.powerUpReference.Value ~= nil then
            if var77_upvw.powerUpReference.Value:FindFirstChild("evolved") == nil then
                if 5 <= getNumberOfSamePowerUp_upvr(powerUpsFolder_upvr, var77_upvw.powerUpReference.Value.Name) then
                    explosionSound_upvr:Play()
                    itemsMenu_upvr:WaitForChild("powerUpEquipFrame").Visible = false
                    itemsMenu_upvr:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), "Out", "Quad", 0.25, true)
                    evolvePowerUpEvent_upvr:FireServer("evolvePowerUp", var77_upvw.powerUpReference.Value)
                    return
                end
                deniedSound_upvr:Play()
            end
        end
    end)
    local pairs_result1_76, pairs_result2_19, pairs_result3_24 = pairs(shopMenu_upvr:WaitForChild("menus"):WaitForChild("passesMenu"):GetChildren())
    -- KONSTANTERROR: [0] 1. Error Block 32 end (CF ANALYSIS FAILED)
    -- KONSTANTERROR: [456] 359. Error Block 18 start (CF ANALYSIS FAILED)
    -- KONSTANTERROR: [456] 359. Error Block 18 end (CF ANALYSIS FAILED)
    -- KONSTANTERROR: [383] 310. Error Block 6 start (CF ANALYSIS FAILED)
    -- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [456.23]
    -- KONSTANTERROR: [383] 310. Error Block 6 end (CF ANALYSIS FAILED)
end)()
local equipPowerUpEvent_upvr = LocalPlayer_upvr:WaitForChild("equipPowerUpEvent")
local calculateNextPowerUpLevelExp_upvr = module_upvr_2.calculateNextPowerUpLevelExp
;(function() -- Line 4212, Named "connectPowerUpFunctions"
    --[[ Upvalues[22]:
        [1]: powerUpEquipFrame_upvr (readonly)
        [2]: var77_upvw (read and write)
        [3]: clickSound_upvr (readonly)
        [4]: equippedPowerUp_upvr (readonly)
        [5]: equipPowerUpEvent_upvr (readonly)
        [6]: powerUpFrames_upvr (readonly)
        [7]: connectNewPowerUpLevelUpChange_upvr (readonly)
        [8]: itemsMenu_upvr (readonly)
        [9]: var95_upvw (read and write)
        [10]: var94_upvw (read and write)
        [11]: powerUpButton_upvr (readonly)
        [12]: rarityColorsFolder_upvr (readonly)
        [13]: TweenService_upvr (readonly)
        [14]: hoverSound_upvr (readonly)
        [15]: tbl_upvr (readonly)
        [16]: module_upvr_2 (readonly)
        [17]: calculateNextPowerUpLevelExp_upvr (readonly)
        [18]: getNumberOfSamePowerUp_upvr (readonly)
        [19]: powerUpsFolder_upvr (readonly)
        [20]: perkImage_upvr (readonly)
        [21]: shortenNumber_upvr (readonly)
        [22]: calculateRemainingPowerUpCapacity_upvr (readonly)
    ]]
    local equipButton_upvr_4 = powerUpEquipFrame_upvr:WaitForChild("equipButton")
    local var619_upvw = true
    equipButton_upvr_4.Activated:Connect(function() -- Line 4218, Named "equipPowerUpButtonClick"
        --[[ Upvalues[8]:
            [1]: var619_upvw (read and write)
            [2]: var77_upvw (copied, read and write)
            [3]: clickSound_upvr (copied, readonly)
            [4]: equippedPowerUp_upvr (copied, readonly)
            [5]: equipPowerUpEvent_upvr (copied, readonly)
            [6]: equipButton_upvr_4 (readonly)
            [7]: powerUpFrames_upvr (copied, readonly)
            [8]: connectNewPowerUpLevelUpChange_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [3] 3. Error Block 2 start (CF ANALYSIS FAILED)
        do
            return
        end
        -- KONSTANTERROR: [3] 3. Error Block 2 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [4] 4. Error Block 3 start (CF ANALYSIS FAILED)
        var619_upvw = false
        -- KONSTANTERROR: [4] 4. Error Block 3 end (CF ANALYSIS FAILED)
    end)
    local function getEmptyPowerUpPage_upvr() -- Line 4290, Named "getEmptyPowerUpPage"
        --[[ Upvalues[4]:
            [1]: itemsMenu_upvr (copied, readonly)
            [2]: powerUpFrames_upvr (copied, readonly)
            [3]: var95_upvw (copied, read and write)
            [4]: var94_upvw (copied, read and write)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        itemsMenu_upvr:WaitForChild("noPowerUpsLabel").Visible = false
        local pairs_result1_59, pairs_result2_13, pairs_result3_29 = pairs(powerUpFrames_upvr:GetChildren())
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [31] 25. Error Block 5 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [31] 25. Error Block 5 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [17] 14. Error Block 2 start (CF ANALYSIS FAILED)
        -- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [31.6]
        -- KONSTANTERROR: [17] 14. Error Block 2 end (CF ANALYSIS FAILED)
    end
    local perksFrame_upvr = powerUpEquipFrame_upvr:WaitForChild("perksFrame")
    local function createPowerUpButton_upvr(arg1) -- Line 4338, Named "createPowerUpButton"
        --[[ Upvalues[18]:
            [1]: powerUpButton_upvr (copied, readonly)
            [2]: rarityColorsFolder_upvr (copied, readonly)
            [3]: equippedPowerUp_upvr (copied, readonly)
            [4]: getEmptyPowerUpPage_upvr (readonly)
            [5]: TweenService_upvr (copied, readonly)
            [6]: hoverSound_upvr (copied, readonly)
            [7]: tbl_upvr (copied, readonly)
            [8]: clickSound_upvr (copied, readonly)
            [9]: var77_upvw (copied, read and write)
            [10]: powerUpEquipFrame_upvr (copied, readonly)
            [11]: itemsMenu_upvr (copied, readonly)
            [12]: module_upvr_2 (copied, readonly)
            [13]: calculateNextPowerUpLevelExp_upvr (copied, readonly)
            [14]: perksFrame_upvr (readonly)
            [15]: getNumberOfSamePowerUp_upvr (copied, readonly)
            [16]: powerUpsFolder_upvr (copied, readonly)
            [17]: perkImage_upvr (copied, readonly)
            [18]: shortenNumber_upvr (copied, readonly)
        ]]
        if arg1 ~= nil then
            local clone_32_upvr = powerUpButton_upvr:Clone()
            clone_32_upvr:WaitForChild("nameLabel").Text = arg1.Name
            clone_32_upvr.nameLabel:WaitForChild("shadow").Text = clone_32_upvr.nameLabel.Text
            clone_32_upvr:WaitForChild("levelLabel").Text = "Level "..tostring(arg1:WaitForChild("level").Value)
            clone_32_upvr.levelLabel:WaitForChild("shadow").Text = clone_32_upvr.levelLabel.shadow.Text
            clone_32_upvr:WaitForChild("powerUpImage").Image = arg1.Texture
            if arg1.Texture == "" then
                clone_32_upvr:WaitForChild("powerUpImage").BackgroundColor3 = arg1.Color.Keypoints[1].Value
                clone_32_upvr.powerUpImage.BackgroundTransparency = 0.2
                clone_32_upvr.powerUpImage.Size = UDim2.new(0.8, 0, 0.8, 0)
            end
            clone_32_upvr.powerUpImage.ImageColor3 = arg1.Color.Keypoints[1].Value
            local ObjectValue_upvr_4 = Instance.new("ObjectValue")
            ObjectValue_upvr_4.Name = "powerUpReference"
            ObjectValue_upvr_4.Value = arg1
            ObjectValue_upvr_4.Parent = clone_32_upvr
            local ObjectValue = Instance.new("ObjectValue")
            ObjectValue.Name = "tweenValue"
            ObjectValue.Parent = clone_32_upvr
            if ObjectValue_upvr_4.Value:FindFirstChild("evolved") ~= nil then
                clone_32_upvr:WaitForChild("evolvedLabel").Visible = true
            end
            local SOME_27_upvr = rarityColorsFolder_upvr:FindFirstChild(arg1.Parent.Name)
            if SOME_27_upvr ~= nil and SOME_27_upvr:FindFirstChild("underColor") ~= nil then
                clone_32_upvr:WaitForChild("backSquare").ImageColor3 = SOME_27_upvr.Value
                clone_32_upvr.backSquare:WaitForChild("squareShadow").ImageColor3 = SOME_27_upvr.underColor.Value
            end
            if equippedPowerUp_upvr.Value ~= nil and equippedPowerUp_upvr.Value == ObjectValue_upvr_4.Value then
                script:WaitForChild("tickImage"):Clone().Parent = clone_32_upvr
            end
            clone_32_upvr.Parent = getEmptyPowerUpPage_upvr()
            if ObjectValue_upvr_4.Value:FindFirstChild("evolved") ~= nil then
                local clone_37 = script:WaitForChild("evolvedGlow"):Clone()
                clone_37.Parent = clone_32_upvr:WaitForChild("evolvedFrame")
                TweenService_upvr:Create(clone_37, TweenInfo.new(1.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, -1, false, 0), {
                    Position = UDim2.new(2, 0, 2, 0);
                }):Play()
                clone_32_upvr:WaitForChild("evolvedLabel").Visible = true
            end
            local function powerUpButtonHover() -- Line 4400
                --[[ Upvalues[5]:
                    [1]: hoverSound_upvr (copied, readonly)
                    [2]: SOME_27_upvr (readonly)
                    [3]: clone_32_upvr (readonly)
                    [4]: tbl_upvr (copied, readonly)
                    [5]: TweenService_upvr (copied, readonly)
                ]]
                hoverSound_upvr:Play()
                if SOME_27_upvr ~= nil then
                    clone_32_upvr:WaitForChild("nameLabel").TextColor3 = SOME_27_upvr.Value
                end
                if clone_32_upvr.tweenValue.Value ~= nil then
                    clone_32_upvr.tweenValue.Value:Cancel()
                end
                clone_32_upvr.powerUpImage.Rotation = 0
                clone_32_upvr.tweenValue.Value = TweenService_upvr:Create(clone_32_upvr.powerUpImage, TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
                    Rotation = tbl_upvr[math.random(1, #tbl_upvr)];
                })
                clone_32_upvr.tweenValue.Value:Play()
            end
            clone_32_upvr.MouseEnter:Connect(powerUpButtonHover)
            clone_32_upvr.SelectionGained:Connect(powerUpButtonHover)
            local function powerUpButtonExit() -- Line 4422
                --[[ Upvalues[1]:
                    [1]: clone_32_upvr (readonly)
                ]]
                clone_32_upvr:WaitForChild("nameLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
            end
            clone_32_upvr.MouseLeave:Connect(powerUpButtonExit)
            clone_32_upvr.SelectionLost:Connect(powerUpButtonExit)
            clone_32_upvr.Activated:Connect(function() -- Line 4431, Named "powerUpButtonClick"
                --[[ Upvalues[16]:
                    [1]: clickSound_upvr (copied, readonly)
                    [2]: var77_upvw (copied, read and write)
                    [3]: clone_32_upvr (readonly)
                    [4]: equippedPowerUp_upvr (copied, readonly)
                    [5]: ObjectValue_upvr_4 (readonly)
                    [6]: powerUpEquipFrame_upvr (copied, readonly)
                    [7]: itemsMenu_upvr (copied, readonly)
                    [8]: arg1 (readonly)
                    [9]: module_upvr_2 (copied, readonly)
                    [10]: calculateNextPowerUpLevelExp_upvr (copied, readonly)
                    [11]: perksFrame_upvr (copied, readonly)
                    [12]: getNumberOfSamePowerUp_upvr (copied, readonly)
                    [13]: powerUpsFolder_upvr (copied, readonly)
                    [14]: TweenService_upvr (copied, readonly)
                    [15]: perkImage_upvr (copied, readonly)
                    [16]: shortenNumber_upvr (copied, readonly)
                ]]
                -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
                clickSound_upvr:Play()
                var77_upvw = clone_32_upvr
                -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [11] 9. Error Block 2 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [11] 9. Error Block 2 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [88] 60. Error Block 61 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [88] 60. Error Block 61 end (CF ANALYSIS FAILED)
            end)
            if ObjectValue_upvr_4.Value:FindFirstChild("exp") ~= nil then
                ObjectValue_upvr_4.Value.exp.Changed:Connect(function() -- Line 4609
                    --[[ Upvalues[4]:
                        [1]: var77_upvw (copied, read and write)
                        [2]: ObjectValue_upvr_4 (readonly)
                        [3]: calculateNextPowerUpLevelExp_upvr (copied, readonly)
                        [4]: powerUpEquipFrame_upvr (copied, readonly)
                    ]]
                    if var77_upvw ~= nil and var77_upvw:WaitForChild("powerUpReference").Value == ObjectValue_upvr_4.Value then
                        local var613_result1 = calculateNextPowerUpLevelExp_upvr(ObjectValue_upvr_4.Value.level.Value, ObjectValue_upvr_4.Value.Parent.Name)
                        powerUpEquipFrame_upvr:WaitForChild("expBar"):WaitForChild("expLabel").Text = tostring(ObjectValue_upvr_4.Value.exp.Value)..'/'..tostring(var613_result1).." Exp"
                        powerUpEquipFrame_upvr:WaitForChild("expBar"):WaitForChild("expLabel"):WaitForChild("shadow").Text = powerUpEquipFrame_upvr:WaitForChild("expBar"):WaitForChild("expLabel").Text
                        powerUpEquipFrame_upvr:WaitForChild("expBar"):WaitForChild("bar").Size = UDim2.new(ObjectValue_upvr_4.Value.exp.Value / var613_result1, 0, 1, 0)
                    end
                end)
            end
        end
    end
    for _, v_39 in pairs(powerUpsFolder_upvr:GetChildren()) do
        if v_39 ~= nil and v_39:IsA("Folder") then
            for _, v_40 in pairs(v_39:GetChildren()) do
                if v_40 ~= nil and v_40:IsA("ParticleEmitter") and v_40:IsA("ParticleEmitter") and v_40.Parent ~= nil and v_40.Parent:IsA("ParticleEmitter") == false then
                    createPowerUpButton_upvr(v_40)
                    calculateRemainingPowerUpCapacity_upvr()
                end
            end
        end
    end
    powerUpsFolder_upvr.DescendantAdded:Connect(function(arg1) -- Line 4633, Named "powerUpDescendantAdded"
        --[[ Upvalues[2]:
            [1]: createPowerUpButton_upvr (readonly)
            [2]: calculateRemainingPowerUpCapacity_upvr (copied, readonly)
        ]]
        if arg1:IsA("ParticleEmitter") and arg1.Parent ~= nil and arg1.Parent:IsA("ParticleEmitter") == false then
            createPowerUpButton_upvr(arg1)
            calculateRemainingPowerUpCapacity_upvr()
        end
    end)
    powerUpsFolder_upvr.DescendantRemoving:Connect(function(arg1) -- Line 4656, Named "powerUpDescendantRemoved"
        --[[ Upvalues[5]:
            [1]: powerUpFrames_upvr (copied, readonly)
            [2]: var94_upvw (copied, read and write)
            [3]: var95_upvw (copied, read and write)
            [4]: itemsMenu_upvr (copied, readonly)
            [5]: calculateRemainingPowerUpCapacity_upvr (copied, readonly)
        ]]
        if arg1:IsA("ParticleEmitter") then
            for _, v_41 in pairs(powerUpFrames_upvr:GetChildren()) do
                if v_41 ~= nil then
                    if v_41:IsA("Frame") then
                        for _, v_42 in pairs(v_41:GetChildren()) do
                            local function INLINED() -- Internal function, doesn't exist in bytecode
                                v_42:Destroy()
                                return #v_41:GetChildren() <= 1
                            end
                            if v_42 ~= nil and v_42:IsA("TextButton") and v_42:FindFirstChild("powerUpReference") ~= nil and (v_42.powerUpReference.Value == nil or v_42.powerUpReference.Value == arg1) or INLINED() then
                                if var94_upvw == var95_upvw then
                                    var94_upvw -= 1
                                end
                                var95_upvw -= 1
                                v_41:Destroy()
                                itemsMenu_upvr:WaitForChild("pageLabel").Text = "Page "..tostring(var94_upvw)..'/'..tostring(var95_upvw)
                                itemsMenu_upvr:WaitForChild("pageLabel"):WaitForChild("shadow").Text = itemsMenu_upvr:WaitForChild("pageLabel").Text
                                local SOME_28 = powerUpFrames_upvr:FindFirstChild("page"..tostring(var95_upvw))
                                if SOME_28 ~= nil and var94_upvw == var95_upvw then
                                    SOME_28.Visible = true
                                end
                                if #powerUpFrames_upvr:GetChildren() <= 1 and powerUpFrames_upvr.Visible == true then
                                    itemsMenu_upvr:WaitForChild("noPowerUpsLabel").Visible = true
                                end
                            end
                        end
                    end
                end
            end
            calculateRemainingPowerUpCapacity_upvr()
        end
    end)
end)()
local var650_upvw
local checkIfPlayerHasEnoughStatsForPet_upvr = module_upvr_2.checkIfPlayerHasEnoughStatsForPet
local findEmptyPetSlot_upvr = module_upvr_2.findEmptyPetSlot
local equipPetEvent_upvr = rEvents_upvr:WaitForChild("equipPetEvent")
local equipButton_upvr_3 = sidePetMenu_upvr:WaitForChild("equipButton")
local var655_upvw
local checkIfPetIsEquipped_upvr = module_upvr_2.checkIfPetIsEquipped
local totalMaxPetLevel_upvr = module_upvr_2.totalMaxPetLevel
local calculateNextPetLevelExp_upvr = module_upvr_2.calculateNextPetLevelExp
local getNumberOfPets_upvr = module_upvr_2.getNumberOfPets
local sellButton_upvr = sidePetMenu_upvr:WaitForChild("sellButton")
local petRenameBox_upvr = sidePetMenu_upvr:WaitForChild("petRenameBox")
local var662_upvw = ""
local var663_upvw = true
local StarterGui_upvr = game:GetService("StarterGui")
local confirmSellPetMenu_upvr = Parent_3_upvr:WaitForChild("confirmSellPetMenu")
local calculatePetValue_upvr = module_upvr_2.calculatePetValue
local petSellCoverFrame_upvr = Parent_3_upvr:WaitForChild("petSellCoverFrame")
;(function() -- Line 4720, Named "connectPetFunctions"
    --[[ Upvalues[57]:
        [1]: sidePetMenu_upvr (readonly)
        [2]: var650_upvw (read and write)
        [3]: checkIfPlayerHasEnoughStatsForPet_upvr (readonly)
        [4]: LocalPlayer_upvr (readonly)
        [5]: clickSound_upvr (readonly)
        [6]: var75_upvw (read and write)
        [7]: findEmptyPetSlot_upvr (readonly)
        [8]: ownedGamepasses_upvr (readonly)
        [9]: equipPetEvent_upvr (readonly)
        [10]: equipButton_upvr_3 (readonly)
        [11]: var655_upvw (read and write)
        [12]: deniedSound_upvr (readonly)
        [13]: MarketplaceService_upvr (readonly)
        [14]: ReplicatedStorage_upvr (readonly)
        [15]: itemsMenu_upvr (readonly)
        [16]: petsFrames_upvr_2 (readonly)
        [17]: var97_upvw (read and write)
        [18]: var96_upvw (read and write)
        [19]: rarityColorsFolder_upvr (readonly)
        [20]: checkIfPetIsEquipped_upvr (readonly)
        [21]: TweenService_upvr (readonly)
        [22]: hoverSound_upvr (readonly)
        [23]: totalMaxPetLevel_upvr (readonly)
        [24]: calculateNextPetLevelExp_upvr (readonly)
        [25]: getNumberOfPets_upvr (readonly)
        [26]: petsFolder_upvr (readonly)
        [27]: perkImage_upvr (readonly)
        [28]: shortenNumber_upvr (readonly)
        [29]: sellButton_upvr (readonly)
        [30]: powerUpLevelUpSound_upvr (readonly)
        [31]: powerUpNotificationLabel_upvr (readonly)
        [32]: powerUpsNotificationsFrame_upvr (readonly)
        [33]: calculateRemainingPowerUpCapacity_upvr (readonly)
        [34]: Debris_upvr (readonly)
        [35]: sideBoostMenu_upvr (readonly)
        [36]: any_getPlayerPlatform_result1_upvr (readonly)
        [37]: petRenameBox_upvr (readonly)
        [38]: var662_upvw (read and write)
        [39]: var663_upvw (read and write)
        [40]: rEvents_upvr (readonly)
        [41]: StarterGui_upvr (readonly)
        [42]: confirmSellPetMenu_upvr (readonly)
        [43]: calculatePetValue_upvr (readonly)
        [44]: petSellCoverFrame_upvr (readonly)
        [45]: GuiService_upvr (readonly)
        [46]: gemsSound_upvr (readonly)
        [47]: explosionSound_upvr (readonly)
        [48]: movesMenu_upvr (readonly)
        [49]: Humanoid_upvr (readonly)
        [50]: Character_upvr (readonly)
        [51]: Backpack_upvr (readonly)
        [52]: powerUpFrames_upvr (readonly)
        [53]: var94_upvw (read and write)
        [54]: var95_upvw (read and write)
        [55]: boostsFrames_upvr (readonly)
        [56]: var98_upvw (read and write)
        [57]: var99_upvw (read and write)
    ]]
    local petTitle_upvr = sidePetMenu_upvr:WaitForChild("petTitle")
    local renameButton_upvr = sidePetMenu_upvr:WaitForChild("renameButton")
    local const_number_upvw_2 = 0
    local evolveButton_upvr = sidePetMenu_upvr:WaitForChild("evolveButton")
    local var680_upvw = true
    equipButton_upvr_3.Activated:Connect(function() -- Line 4740, Named "equipPetButtonClick"
        --[[ Upvalues[14]:
            [1]: var680_upvw (read and write)
            [2]: var650_upvw (copied, read and write)
            [3]: checkIfPlayerHasEnoughStatsForPet_upvr (copied, readonly)
            [4]: LocalPlayer_upvr (copied, readonly)
            [5]: clickSound_upvr (copied, readonly)
            [6]: var75_upvw (copied, read and write)
            [7]: findEmptyPetSlot_upvr (copied, readonly)
            [8]: ownedGamepasses_upvr (copied, readonly)
            [9]: equipPetEvent_upvr (copied, readonly)
            [10]: equipButton_upvr_3 (copied, readonly)
            [11]: var655_upvw (copied, read and write)
            [12]: deniedSound_upvr (copied, readonly)
            [13]: MarketplaceService_upvr (copied, readonly)
            [14]: ReplicatedStorage_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 32 start (CF ANALYSIS FAILED)
        if var680_upvw == false then
        else
            if var650_upvw ~= nil and checkIfPlayerHasEnoughStatsForPet_upvr(LocalPlayer_upvr, var650_upvw) == false then return end
            var680_upvw = false
            clickSound_upvr:Play()
            if var650_upvw ~= nil and var75_upvw == false then
                if findEmptyPetSlot_upvr(ownedGamepasses_upvr, LocalPlayer_upvr:WaitForChild("equippedPets")) ~= nil then
                    equipPetEvent_upvr:FireServer("equipPet", var650_upvw)
                    var75_upvw = true
                    equipButton_upvr_3:WaitForChild("backSquare").ImageColor3 = equipButton_upvr_3:WaitForChild("unequipButtonColor").Value
                    equipButton_upvr_3:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = equipButton_upvr_3:WaitForChild("underUnequipButtonColor").Value
                    equipButton_upvr_3:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                    equipButton_upvr_3:WaitForChild("buttonLabel").Text = "UNEQUIP"
                    equipButton_upvr_3.buttonLabel:WaitForChild("shadow").Text = equipButton_upvr_3.buttonLabel.Text
                    if var655_upvw ~= nil and var655_upvw:FindFirstChild("tickImage") == nil then
                        script:WaitForChild("tickImage"):Clone().Parent = var655_upvw
                        -- KONSTANTWARNING: GOTO [269] #199
                    end
                else
                    clickSound_upvr:Stop()
                    deniedSound_upvr:Play()
                    if LocalPlayer_upvr:WaitForChild("ownedGamepasses"):FindFirstChild("+2 Pet Slots") == nil then
                        MarketplaceService_upvr:PromptGamePassPurchase(LocalPlayer_upvr, ReplicatedStorage_upvr:WaitForChild("gamepassIds"):WaitForChild("+2 Pet Slots").Value)
                        -- KONSTANTWARNING: GOTO [269] #199
                    end
                end
            elseif var650_upvw ~= nil and var75_upvw == true then
                equipPetEvent_upvr:FireServer("unequipPet", var650_upvw)
                var75_upvw = false
                equipButton_upvr_3:WaitForChild("backSquare").ImageColor3 = equipButton_upvr_3:WaitForChild("buttonColor").Value
                equipButton_upvr_3:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = equipButton_upvr_3:WaitForChild("underButtonColor").Value
                equipButton_upvr_3:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                equipButton_upvr_3:WaitForChild("buttonLabel").Text = "EQUIP"
                equipButton_upvr_3.buttonLabel:WaitForChild("shadow").Text = equipButton_upvr_3.buttonLabel.Text
                if var655_upvw ~= nil and var655_upvw:FindFirstChild("tickImage") ~= nil then
                    var655_upvw:WaitForChild("tickImage"):Destroy()
                end
            end
            -- KONSTANTERROR: [0] 1. Error Block 32 end (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [269] 199. Error Block 21 start (CF ANALYSIS FAILED)
            wait(0.5)
            var680_upvw = true
            -- KONSTANTERROR: [269] 199. Error Block 21 end (CF ANALYSIS FAILED)
        end
    end)
    local function getEmptyPetPage_upvr() -- Line 4807, Named "getEmptyPetPage"
        --[[ Upvalues[4]:
            [1]: itemsMenu_upvr (copied, readonly)
            [2]: petsFrames_upvr_2 (copied, readonly)
            [3]: var97_upvw (copied, read and write)
            [4]: var96_upvw (copied, read and write)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        itemsMenu_upvr:WaitForChild("noPetsLabel").Visible = false
        local pairs_result1_2, pairs_result2_29, pairs_result3_8 = pairs(petsFrames_upvr_2:GetChildren())
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [31] 25. Error Block 5 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [31] 25. Error Block 5 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [17] 14. Error Block 2 start (CF ANALYSIS FAILED)
        -- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [31.6]
        -- KONSTANTERROR: [17] 14. Error Block 2 end (CF ANALYSIS FAILED)
    end
    local petButton_upvr = script:WaitForChild("petButton")
    local petImage_upvr = sidePetMenu_upvr:WaitForChild("petImage")
    local levelLabel_upvr = sidePetMenu_upvr:WaitForChild("levelLabel")
    local expLabel_upvr = sidePetMenu_upvr:WaitForChild("expBar"):WaitForChild("expLabel")
    local bar_upvr = sidePetMenu_upvr:WaitForChild("expBar"):WaitForChild("bar")
    local function createPetButton_upvr(arg1) -- Line 4853, Named "createPetButton"
        --[[ Upvalues[35]:
            [1]: petButton_upvr (readonly)
            [2]: rarityColorsFolder_upvr (copied, readonly)
            [3]: checkIfPetIsEquipped_upvr (copied, readonly)
            [4]: LocalPlayer_upvr (copied, readonly)
            [5]: getEmptyPetPage_upvr (readonly)
            [6]: TweenService_upvr (copied, readonly)
            [7]: hoverSound_upvr (copied, readonly)
            [8]: clickSound_upvr (copied, readonly)
            [9]: petImage_upvr (readonly)
            [10]: petTitle_upvr (readonly)
            [11]: levelLabel_upvr (readonly)
            [12]: totalMaxPetLevel_upvr (copied, readonly)
            [13]: expLabel_upvr (readonly)
            [14]: bar_upvr (readonly)
            [15]: calculateNextPetLevelExp_upvr (copied, readonly)
            [16]: var650_upvw (copied, read and write)
            [17]: var655_upvw (copied, read and write)
            [18]: var75_upvw (copied, read and write)
            [19]: equipButton_upvr_3 (copied, readonly)
            [20]: itemsMenu_upvr (copied, readonly)
            [21]: getNumberOfPets_upvr (copied, readonly)
            [22]: petsFolder_upvr (copied, readonly)
            [23]: const_number_upvw_2 (read and write)
            [24]: evolveButton_upvr (readonly)
            [25]: sidePetMenu_upvr (copied, readonly)
            [26]: perkImage_upvr (copied, readonly)
            [27]: shortenNumber_upvr (copied, readonly)
            [28]: checkIfPlayerHasEnoughStatsForPet_upvr (copied, readonly)
            [29]: sellButton_upvr (copied, readonly)
            [30]: powerUpLevelUpSound_upvr (copied, readonly)
            [31]: powerUpNotificationLabel_upvr (copied, readonly)
            [32]: powerUpsNotificationsFrame_upvr (copied, readonly)
            [33]: calculateRemainingPowerUpCapacity_upvr (copied, readonly)
            [34]: ReplicatedStorage_upvr (copied, readonly)
            [35]: Debris_upvr (copied, readonly)
        ]]
        if arg1 ~= nil then
            local clone_13_upvr = petButton_upvr:Clone()
            clone_13_upvr:WaitForChild("nameLabel").Text = arg1.Name
            clone_13_upvr.nameLabel:WaitForChild("shadow").Text = clone_13_upvr.nameLabel.Text
            clone_13_upvr:WaitForChild("levelLabel").Text = "Level "..tostring(arg1:WaitForChild("level").Value)
            clone_13_upvr.levelLabel:WaitForChild("shadow").Text = clone_13_upvr.levelLabel.shadow.Text
            clone_13_upvr:WaitForChild("petImage").Image = arg1.Value
            local SOME_21_upvr = rarityColorsFolder_upvr:WaitForChild(arg1.Parent.Name)
            clone_13_upvr:WaitForChild("backSquare").ImageColor3 = SOME_21_upvr.Value
            clone_13_upvr.backSquare:WaitForChild("squareShadow").ImageColor3 = SOME_21_upvr:WaitForChild("underColor").Value
            local ObjectValue_2_upvr = Instance.new("ObjectValue")
            ObjectValue_2_upvr.Name = "tweenValue"
            ObjectValue_2_upvr.Parent = clone_13_upvr
            local ObjectValue_upvr_6 = Instance.new("ObjectValue")
            ObjectValue_upvr_6.Name = "petReference"
            ObjectValue_upvr_6.Value = arg1
            ObjectValue_upvr_6.Parent = clone_13_upvr
            if checkIfPetIsEquipped_upvr(LocalPlayer_upvr:WaitForChild("equippedPets"), arg1) == true then
                script:WaitForChild("tickImage"):Clone().Parent = clone_13_upvr
            end
            clone_13_upvr.Parent = getEmptyPetPage_upvr()
            if ObjectValue_upvr_6.Value:FindFirstChild("evolved") ~= nil then
                local clone_27 = script:WaitForChild("evolvedGlow"):Clone()
                clone_27.Parent = clone_13_upvr:WaitForChild("evolvedFrame")
                TweenService_upvr:Create(clone_27, TweenInfo.new(1.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, -1, false, 0), {
                    Position = UDim2.new(2, 0, 2, 0);
                }):Play()
                clone_13_upvr:WaitForChild("evolvedLabel").Visible = true
            end
            local function petButtonHover() -- Line 4899
                --[[ Upvalues[4]:
                    [1]: hoverSound_upvr (copied, readonly)
                    [2]: clone_13_upvr (readonly)
                    [3]: ObjectValue_2_upvr (readonly)
                    [4]: TweenService_upvr (copied, readonly)
                ]]
                hoverSound_upvr:Play()
                clone_13_upvr:WaitForChild("nameLabel").TextColor3 = clone_13_upvr:WaitForChild("backSquare").ImageColor3
                clone_13_upvr:WaitForChild("levelLabel").TextColor3 = clone_13_upvr:WaitForChild("backSquare").ImageColor3
                if ObjectValue_2_upvr.Value ~= nil then
                    ObjectValue_2_upvr.Value:Cancel()
                end
                clone_13_upvr:WaitForChild("petImage").Rotation = 0
                local randint_4 = math.random(1, 2)
                if randint_4 == 1 then
                    randint_4 = -15
                else
                    randint_4 = 15
                end
                ObjectValue_2_upvr.Value = TweenService_upvr:Create(clone_13_upvr:WaitForChild("petImage"), TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
                    Rotation = randint_4;
                })
                ObjectValue_2_upvr.Value:Play()
            end
            local function petButtonExit() -- Line 4924
                --[[ Upvalues[1]:
                    [1]: clone_13_upvr (readonly)
                ]]
                clone_13_upvr:WaitForChild("nameLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                clone_13_upvr:WaitForChild("levelLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
            end
            clone_13_upvr.MouseEnter:Connect(petButtonHover)
            clone_13_upvr.SelectionGained:Connect(petButtonHover)
            clone_13_upvr.MouseLeave:Connect(petButtonExit)
            clone_13_upvr.SelectionLost:Connect(petButtonExit)
            local function petButtonClick() -- Line 4935
                --[[ Upvalues[28]:
                    [1]: ObjectValue_upvr_6 (readonly)
                    [2]: clickSound_upvr (copied, readonly)
                    [3]: petImage_upvr (copied, readonly)
                    [4]: petTitle_upvr (copied, readonly)
                    [5]: rarityColorsFolder_upvr (copied, readonly)
                    [6]: levelLabel_upvr (copied, readonly)
                    [7]: totalMaxPetLevel_upvr (copied, readonly)
                    [8]: expLabel_upvr (copied, readonly)
                    [9]: bar_upvr (copied, readonly)
                    [10]: calculateNextPetLevelExp_upvr (copied, readonly)
                    [11]: var650_upvw (copied, read and write)
                    [12]: var655_upvw (copied, read and write)
                    [13]: clone_13_upvr (readonly)
                    [14]: var75_upvw (copied, read and write)
                    [15]: checkIfPetIsEquipped_upvr (copied, readonly)
                    [16]: LocalPlayer_upvr (copied, readonly)
                    [17]: equipButton_upvr_3 (copied, readonly)
                    [18]: itemsMenu_upvr (copied, readonly)
                    [19]: getNumberOfPets_upvr (copied, readonly)
                    [20]: petsFolder_upvr (copied, readonly)
                    [21]: const_number_upvw_2 (copied, read and write)
                    [22]: evolveButton_upvr (copied, readonly)
                    [23]: sidePetMenu_upvr (copied, readonly)
                    [24]: TweenService_upvr (copied, readonly)
                    [25]: perkImage_upvr (copied, readonly)
                    [26]: shortenNumber_upvr (copied, readonly)
                    [27]: checkIfPlayerHasEnoughStatsForPet_upvr (copied, readonly)
                    [28]: sellButton_upvr (copied, readonly)
                ]]
                -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [3] 3. Error Block 2 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [3] 3. Error Block 2 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [8] 6. Error Block 3 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [8] 6. Error Block 3 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [1055] 745. Error Block 77 start (CF ANALYSIS FAILED)
                if ObjectValue_upvr_6.Value:FindFirstChild("evolved") == nil then
                    sidePetMenu_upvr:WaitForChild("evolveButton").Visible = true
                end
                sidePetMenu_upvr:WaitForChild("sellButton").Position = UDim2.new(0.82, 0, 1.29, 0)
                sidePetMenu_upvr:WaitForChild("equipButton"):WaitForChild("buttonLabel").Visible = true
                sidePetMenu_upvr.equipButton:WaitForChild("lockedImage").Visible = false
                if ObjectValue_upvr_6.Value:FindFirstChild("unsellable") ~= nil then
                    sellButton_upvr.Visible = false
                else
                    sellButton_upvr.Visible = true
                end
                sidePetMenu_upvr.Visible = true
                -- KONSTANTERROR: [1055] 745. Error Block 77 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [1130] 800. Error Block 67 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [1130] 800. Error Block 67 end (CF ANALYSIS FAILED)
            end
            clone_13_upvr.Activated:Connect(petButtonClick)
            if ObjectValue_upvr_6.Value:FindFirstChild("level") ~= nil then
                ObjectValue_upvr_6.Value.level.Changed:Connect(function() -- Line 5146
                    --[[ Upvalues[14]:
                        [1]: clone_13_upvr (readonly)
                        [2]: ObjectValue_upvr_6 (readonly)
                        [3]: var650_upvw (copied, read and write)
                        [4]: levelLabel_upvr (copied, readonly)
                        [5]: totalMaxPetLevel_upvr (copied, readonly)
                        [6]: expLabel_upvr (copied, readonly)
                        [7]: bar_upvr (copied, readonly)
                        [8]: calculateNextPetLevelExp_upvr (copied, readonly)
                        [9]: powerUpLevelUpSound_upvr (copied, readonly)
                        [10]: powerUpNotificationLabel_upvr (copied, readonly)
                        [11]: SOME_21_upvr (readonly)
                        [12]: powerUpsNotificationsFrame_upvr (copied, readonly)
                        [13]: TweenService_upvr (copied, readonly)
                        [14]: calculateRemainingPowerUpCapacity_upvr (copied, readonly)
                    ]]
                    clone_13_upvr:WaitForChild("levelLabel").Text = "Level "..tostring(ObjectValue_upvr_6.Value.level.Value)
                    clone_13_upvr.levelLabel:WaitForChild("shadow").Text = clone_13_upvr.levelLabel.shadow.Text
                    if var650_upvw == ObjectValue_upvr_6.Value then
                        levelLabel_upvr.Text = "Level "..tostring(ObjectValue_upvr_6.Value.level.Value)
                        levelLabel_upvr:WaitForChild("shadow").Text = levelLabel_upvr.Text
                        if totalMaxPetLevel_upvr <= ObjectValue_upvr_6.Value.level.Value then
                            expLabel_upvr.Text = "MAX LEVEL"
                            expLabel_upvr:WaitForChild("shadow").Text = expLabel_upvr.Text
                            bar_upvr.Size = UDim2.new(1, 0, 1, 0)
                        else
                            local calculateNextPetLevelExp_upvr_result1 = calculateNextPetLevelExp_upvr(ObjectValue_upvr_6.Value.level.Value, ObjectValue_upvr_6.Value.Parent.Name)
                            expLabel_upvr.Text = tostring(ObjectValue_upvr_6.Value.exp.Value)..'/'..tostring(calculateNextPetLevelExp_upvr_result1).." Exp"
                            expLabel_upvr:WaitForChild("shadow").Text = expLabel_upvr.Text
                            bar_upvr.Size = UDim2.new(ObjectValue_upvr_6.Value.exp.Value / calculateNextPetLevelExp_upvr_result1, 0, 1, 0)
                        end
                    end
                    powerUpLevelUpSound_upvr:Play()
                    local clone_10 = powerUpNotificationLabel_upvr:Clone()
                    clone_10.Text = ObjectValue_upvr_6.Value.Name.." has reached level "..tostring(ObjectValue_upvr_6.Value.level.Value)..'!'
                    clone_10:WaitForChild("shadow").Text = clone_10.Text
                    if SOME_21_upvr ~= nil and SOME_21_upvr.Name ~= "Basic" then
                        clone_10.TextColor3 = SOME_21_upvr.Value
                    end
                    clone_10.Parent = powerUpsNotificationsFrame_upvr
                    TweenService_upvr:Create(clone_10, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
                        Size = UDim2.new(1.4, 0, 0.35, 0);
                    }):Play()
                    game:GetService("Debris"):AddItem(clone_10, 5)
                    calculateRemainingPowerUpCapacity_upvr()
                end)
            end
            if ObjectValue_upvr_6.Value:FindFirstChild("exp") ~= nil then
                local function petExpLabelTween_upvr(arg1_2) -- Line 5200, Named "petExpLabelTween"
                    --[[ Upvalues[5]:
                        [1]: LocalPlayer_upvr (copied, readonly)
                        [2]: ObjectValue_upvr_6 (readonly)
                        [3]: ReplicatedStorage_upvr (copied, readonly)
                        [4]: Debris_upvr (copied, readonly)
                        [5]: TweenService_upvr (copied, readonly)
                    ]]
                    -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [2] 2. Error Block 2 start (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [2] 2. Error Block 2 end (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [154] 104. Error Block 16 start (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [154] 104. Error Block 16 end (CF ANALYSIS FAILED)
                end
                local Value_2_upvw = ObjectValue_upvr_6.Value.exp.Value
                ObjectValue_upvr_6.Value.exp.Changed:Connect(function() -- Line 5244
                    --[[ Upvalues[7]:
                        [1]: var650_upvw (copied, read and write)
                        [2]: ObjectValue_upvr_6 (readonly)
                        [3]: calculateNextPetLevelExp_upvr (copied, readonly)
                        [4]: expLabel_upvr (copied, readonly)
                        [5]: bar_upvr (copied, readonly)
                        [6]: petExpLabelTween_upvr (readonly)
                        [7]: Value_2_upvw (read and write)
                    ]]
                    if var650_upvw == ObjectValue_upvr_6.Value then
                        local var658_result1 = calculateNextPetLevelExp_upvr(ObjectValue_upvr_6.Value.level.Value, ObjectValue_upvr_6.Value.Parent.Name)
                        expLabel_upvr.Text = tostring(ObjectValue_upvr_6.Value.exp.Value)..'/'..tostring(var658_result1).." Exp"
                        expLabel_upvr:WaitForChild("shadow").Text = expLabel_upvr.Text
                        bar_upvr.Size = UDim2.new(ObjectValue_upvr_6.Value.exp.Value / var658_result1, 0, 1, 0)
                    end
                    petExpLabelTween_upvr(ObjectValue_upvr_6.Value.exp.Value - Value_2_upvw)
                    Value_2_upvw = ObjectValue_upvr_6.Value.exp.Value
                end)
            end
        end
    end
    local _, pairs_result2_9, pairs_result3_11 = pairs(petsFolder_upvr:GetDescendants())
    local var707_upvw
    for i_43, v_43 in var707_upvw, pairs_result2_9, pairs_result3_11 do
        if v_43 ~= nil and v_43:IsA("StringValue") and v_43.Parent ~= nil and v_43.Parent.Parent ~= nil and v_43.Parent.Parent == petsFolder_upvr then
            createPetButton_upvr(v_43)
            calculateRemainingPowerUpCapacity_upvr()
        end
    end
    var707_upvw = petsFolder_upvr.DescendantAdded:Connect
    var707_upvw(function(arg1) -- Line 5268, Named "petAddedToInventory"
        --[[ Upvalues[3]:
            [1]: petsFolder_upvr (copied, readonly)
            [2]: createPetButton_upvr (readonly)
            [3]: calculateRemainingPowerUpCapacity_upvr (copied, readonly)
        ]]
        if arg1 ~= nil and arg1:IsA("StringValue") and arg1.Parent ~= nil and arg1.Parent.Parent ~= nil and arg1.Parent.Parent == petsFolder_upvr then
            createPetButton_upvr(arg1)
            calculateRemainingPowerUpCapacity_upvr()
        end
    end)
    var707_upvw = petsFolder_upvr.DescendantRemoving
    var707_upvw = var707_upvw:Connect
    var707_upvw(function(arg1) -- Line 5282
        --[[ Upvalues[7]:
            [1]: petsFolder_upvr (copied, readonly)
            [2]: petsFrames_upvr_2 (copied, readonly)
            [3]: var96_upvw (copied, read and write)
            [4]: var97_upvw (copied, read and write)
            [5]: itemsMenu_upvr (copied, readonly)
            [6]: sideBoostMenu_upvr (copied, readonly)
            [7]: calculateRemainingPowerUpCapacity_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [2] 2. Error Block 2 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [2] 2. Error Block 2 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [7] 6. Error Block 3 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [7] 6. Error Block 3 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [11] 8. Error Block 4 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [11] 8. Error Block 4 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [17] 11. Error Block 5 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [17] 11. Error Block 5 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [225] 157. Error Block 28 start (CF ANALYSIS FAILED)
        calculateRemainingPowerUpCapacity_upvr()
        -- KONSTANTERROR: [225] 157. Error Block 28 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [227] 159. Error Block 29 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [227] 159. Error Block 29 end (CF ANALYSIS FAILED)
    end)
    var707_upvw = false
    local pcall_result1, pcall_result2 = pcall(function() -- Line 5348
        --[[ Upvalues[2]:
            [1]: var707_upvw (read and write)
            [2]: LocalPlayer_upvr (copied, readonly)
        ]]
        var707_upvw = game:GetService("Chat"):CanUserChatAsync(LocalPlayer_upvr.UserId)
    end)
    if pcall_result1 == false then
        i_43 = print
        v_43 = pcall_result2
        i_43(v_43)
    end
    if any_getPlayerPlatform_result1_upvr == "console" then
        var707_upvw = false
    end
    if var707_upvw == true then
        petRenameBox_upvr.Changed:Connect(function() -- Line 5362
            --[[ Upvalues[2]:
                [1]: petRenameBox_upvr (copied, readonly)
                [2]: var662_upvw (copied, read and write)
            ]]
            if 15 < string.len(petRenameBox_upvr.Text) then
                petRenameBox_upvr.Text = var662_upvw
            end
            var662_upvw = petRenameBox_upvr.Text
        end)
        petRenameBox_upvr.FocusLost:connect(function() -- Line 5396
            --[[ Upvalues[9]:
                [1]: var663_upvw (copied, read and write)
                [2]: var650_upvw (copied, read and write)
                [3]: petRenameBox_upvr (copied, readonly)
                [4]: deniedSound_upvr (copied, readonly)
                [5]: petTitle_upvr (readonly)
                [6]: renameButton_upvr (readonly)
                [7]: rEvents_upvr (copied, readonly)
                [8]: clickSound_upvr (copied, readonly)
                [9]: petsFrames_upvr_2 (copied, readonly)
            ]]
            -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [3] 3. Error Block 2 start (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [3] 3. Error Block 2 end (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [211] 147. Error Block 19 start (CF ANALYSIS FAILED)
            petRenameBox_upvr:ReleaseFocus()
            petRenameBox_upvr.Text = ""
            petRenameBox_upvr.Visible = false
            petTitle_upvr.Visible = true
            renameButton_upvr:WaitForChild("buttonLabel").Text = "RENAME"
            renameButton_upvr.buttonLabel:WaitForChild("shadow").Text = renameButton_upvr.buttonLabel.Text
            wait(0.5)
            var663_upvw = true
            do
                return
            end
            -- KONSTANTERROR: [211] 147. Error Block 19 end (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [256] 180. Error Block 20 start (CF ANALYSIS FAILED)
            deniedSound_upvr:Play()
            petRenameBox_upvr:ReleaseFocus()
            petRenameBox_upvr.Text = ""
            petRenameBox_upvr.Visible = false
            petTitle_upvr.Visible = true
            wait(0.5)
            var663_upvw = true
            -- KONSTANTERROR: [256] 180. Error Block 20 end (CF ANALYSIS FAILED)
        end)
        renameButton_upvr.Activated:Connect(function() -- Line 5373, Named "renameButtonClick"
            --[[ Upvalues[5]:
                [1]: var663_upvw (copied, read and write)
                [2]: clickSound_upvr (copied, readonly)
                [3]: petTitle_upvr (readonly)
                [4]: petRenameBox_upvr (copied, readonly)
                [5]: renameButton_upvr (readonly)
            ]]
            if var663_upvw == true then
                clickSound_upvr:Play()
                var663_upvw = false
                petTitle_upvr.Visible = false
                petRenameBox_upvr.Text = ""
                petRenameBox_upvr.TextColor3 = petTitle_upvr.TextColor3
                petRenameBox_upvr.Visible = true
                petRenameBox_upvr:CaptureFocus()
                renameButton_upvr:WaitForChild("buttonLabel").Text = "CONFIRM"
                renameButton_upvr.buttonLabel:WaitForChild("shadow").Text = renameButton_upvr.buttonLabel.Text
            end
        end)
    else
        renameButton_upvr.Visible = false
    end
    rEvents_upvr:WaitForChild("serverChatEvent").OnClientEvent:Connect(function(arg1, arg2) -- Line 5509
        --[[ Upvalues[2]:
            [1]: var707_upvw (read and write)
            [2]: StarterGui_upvr (copied, readonly)
        ]]
        if var707_upvw == false then
        else
            if arg1 == "playerRebirthed" and arg2 ~= nil then
                local tbl_22 = {}
                tbl_22.Text = arg2
                tbl_22.Color = Color3.fromRGB(255, 170, 0)
                tbl_22.Font = Enum.Font.GothamBlack
                tbl_22.FontSize = Enum.FontSize.Size24
                StarterGui_upvr:SetCore("ChatMakeSystemMessage", tbl_22)
                return
            end
            if arg1 == "joinGroupReminder" and arg2 ~= nil then
                local tbl_20 = {}
                tbl_20.Text = arg2
                tbl_20.Color = Color3.fromRGB(170, 85, 255)
                tbl_20.Font = Enum.Font.GothamBlack
                tbl_20.FontSize = Enum.FontSize.Size24
                StarterGui_upvr:SetCore("ChatMakeSystemMessage", tbl_20)
            end
        end
    end)
    sellButton_upvr.Activated:Connect(function() -- Line 5524, Named "firstSellPetButtonClick"
        --[[ Upvalues[8]:
            [1]: var650_upvw (copied, read and write)
            [2]: clickSound_upvr (copied, readonly)
            [3]: confirmSellPetMenu_upvr (copied, readonly)
            [4]: shortenNumber_upvr (copied, readonly)
            [5]: calculatePetValue_upvr (copied, readonly)
            [6]: petSellCoverFrame_upvr (copied, readonly)
            [7]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [8]: GuiService_upvr (copied, readonly)
        ]]
        if var650_upvw ~= nil and var650_upvw.Parent ~= nil and var650_upvw:FindFirstChild("level") ~= nil and var650_upvw:FindFirstChild("unsellable") == nil then
            clickSound_upvr:Play()
            confirmSellPetMenu_upvr:WaitForChild("sellDescLabel").Text = "Want to sell "..tostring(var650_upvw.Name)..'?'
            confirmSellPetMenu_upvr.sellDescLabel:WaitForChild("shadow").Text = confirmSellPetMenu_upvr.sellDescLabel.Text
            local var717 = false
            if var650_upvw:FindFirstChild("evolved") ~= nil then
                var717 = true
            end
            confirmSellPetMenu_upvr:WaitForChild("costLabel"):WaitForChild("amountLabel").Text = shortenNumber_upvr(calculatePetValue_upvr(var650_upvw.Parent.Name, var650_upvw.level.Value, var717))
            confirmSellPetMenu_upvr.costLabel.amountLabel:WaitForChild("shadow").Text = confirmSellPetMenu_upvr.costLabel.amountLabel.Text
            petSellCoverFrame_upvr.Visible = true
            confirmSellPetMenu_upvr.Visible = true
            if any_getPlayerPlatform_result1_upvr == "console" then
                GuiService_upvr.SelectedObject = confirmSellPetMenu_upvr:WaitForChild("noButton")
            end
        end
    end)
    confirmSellPetMenu_upvr:WaitForChild("yesButton").Activated:Connect(function() -- Line 5553, Named "sellPetYesButtonClick"
        --[[ Upvalues[10]:
            [1]: var650_upvw (copied, read and write)
            [2]: gemsSound_upvr (copied, readonly)
            [3]: sidePetMenu_upvr (copied, readonly)
            [4]: petSellCoverFrame_upvr (copied, readonly)
            [5]: confirmSellPetMenu_upvr (copied, readonly)
            [6]: rEvents_upvr (copied, readonly)
            [7]: petsFrames_upvr_2 (copied, readonly)
            [8]: var96_upvw (copied, read and write)
            [9]: var97_upvw (copied, read and write)
            [10]: itemsMenu_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [3] 3. Error Block 2 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [3] 3. Error Block 2 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [8] 6. Error Block 3 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [8] 6. Error Block 3 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [240] 169. Error Block 28 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [240] 169. Error Block 28 end (CF ANALYSIS FAILED)
    end)
    confirmSellPetMenu_upvr:WaitForChild("noButton").Activated:Connect(function() -- Line 5618, Named "confirmSellButtonNoClick"
        --[[ Upvalues[3]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: petSellCoverFrame_upvr (copied, readonly)
            [3]: confirmSellPetMenu_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        petSellCoverFrame_upvr.Visible = false
        confirmSellPetMenu_upvr.Visible = false
    end)
    evolveButton_upvr.Activated:Connect(function() -- Line 5628, Named "evolveButtonClick"
        --[[ Upvalues[7]:
            [1]: const_number_upvw_2 (read and write)
            [2]: deniedSound_upvr (copied, readonly)
            [3]: explosionSound_upvr (copied, readonly)
            [4]: sidePetMenu_upvr (copied, readonly)
            [5]: itemsMenu_upvr (copied, readonly)
            [6]: rEvents_upvr (copied, readonly)
            [7]: var650_upvw (copied, read and write)
        ]]
        if const_number_upvw_2 < 5 then
            deniedSound_upvr:Play()
        else
            explosionSound_upvr:Play()
            sidePetMenu_upvr.Visible = false
            itemsMenu_upvr:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), "Out", "Back", 0.25, true)
            rEvents_upvr:WaitForChild("petEvolveEvent"):FireServer("evolvePet", var650_upvw.Name)
        end
    end)
    itemsMenu_upvr:WaitForChild("bottomItemsMenu"):WaitForChild("capacityLabel"):WaitForChild("moreButton").Activated:Connect(function() -- Line 5649, Named "moreButton3Click"
        --[[ Upvalues[4]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: LocalPlayer_upvr (copied, readonly)
            [3]: ReplicatedStorage_upvr (copied, readonly)
            [4]: MarketplaceService_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        if LocalPlayer_upvr:WaitForChild("ownedGamepasses"):FindFirstChild("+20 Capacity") == nil then
            if ReplicatedStorage_upvr:WaitForChild("gamepassIds"):FindFirstChild("+20 Capacity") ~= nil then
                MarketplaceService_upvr:PromptGamePassPurchase(LocalPlayer_upvr, ReplicatedStorage_upvr:WaitForChild("gamepassIds"):WaitForChild("+20 Capacity").Value)
                return
            end
        end
        if ReplicatedStorage_upvr:WaitForChild("gamepassIds"):FindFirstChild("+60 Capacity") ~= nil then
            MarketplaceService_upvr:PromptGamePassPurchase(LocalPlayer_upvr, ReplicatedStorage_upvr:WaitForChild("gamepassIds"):WaitForChild("+60 Capacity").Value)
        end
    end)
    local var718_upvw = true
    itemsMenu_upvr:WaitForChild("bottomItemsMenu"):WaitForChild("unequipAllButton").Activated:Connect(function() -- Line 5667, Named "unequipAllButtonClick"
        --[[ Upvalues[5]:
            [1]: var718_upvw (read and write)
            [2]: clickSound_upvr (copied, readonly)
            [3]: LocalPlayer_upvr (copied, readonly)
            [4]: equipPetEvent_upvr (copied, readonly)
            [5]: petsFrames_upvr_2 (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [107] 72. Error Block 19 start (CF ANALYSIS FAILED)
        wait(0.5)
        var718_upvw = true
        -- KONSTANTERROR: [107] 72. Error Block 19 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [113] 77. Error Block 20 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [113] 77. Error Block 20 end (CF ANALYSIS FAILED)
    end)
    local listFrame_upvr_3 = movesMenu_upvr:WaitForChild("listBackImage"):WaitForChild("listFrame")
    local moveFrame_upvr = script:WaitForChild("moveFrame")
    local function createNewMoveFrame_upvr(arg1) -- Line 5710, Named "createNewMoveFrame"
        --[[ Upvalues[6]:
            [1]: moveFrame_upvr (readonly)
            [2]: listFrame_upvr_3 (readonly)
            [3]: hoverSound_upvr (copied, readonly)
            [4]: LocalPlayer_upvr (copied, readonly)
            [5]: clickSound_upvr (copied, readonly)
            [6]: Humanoid_upvr (copied, readonly)
        ]]
        if arg1.Name == "Protein Bar" or arg1.Name == "Energy Bar" or arg1.Name == "Protein Shake" or arg1.Name == "Energy Shake" then
        else
            local clone_6 = moveFrame_upvr:Clone()
            clone_6.Name = arg1.Name
            clone_6:WaitForChild("nameLabel").Text = arg1.Name
            local StringValue = Instance.new("StringValue")
            StringValue.Name = "toolName"
            StringValue.Value = arg1.Name
            StringValue.Parent = clone_6
            clone_6.Parent = listFrame_upvr_3
            local equipButton_upvr = clone_6:WaitForChild("nameLabel"):WaitForChild("equipButton")
            local function equipButtonHover() -- Line 5727
                --[[ Upvalues[4]:
                    [1]: hoverSound_upvr (copied, readonly)
                    [2]: arg1 (readonly)
                    [3]: LocalPlayer_upvr (copied, readonly)
                    [4]: equipButton_upvr (readonly)
                ]]
                hoverSound_upvr:Play()
                if arg1.Parent == LocalPlayer_upvr:WaitForChild("Backpack") then
                    equipButton_upvr:WaitForChild("backSquare").ImageColor3 = equipButton_upvr:WaitForChild("hoverButtonColor").Value
                    equipButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow"):TweenPosition(UDim2.new(0, 0, 0.5, 0), "Out", "Quad", 0.25, true)
                    equipButton_upvr:WaitForChild("buttonLabel").TextColor3 = equipButton_upvr:WaitForChild("backSquare").ImageColor3
                    equipButton_upvr:TweenSize(UDim2.new(0.85, 0, 1.05, 0), "Out", "Quad", 0.25, true)
                else
                    equipButton_upvr:WaitForChild("backSquare").ImageColor3 = equipButton_upvr:WaitForChild("unequipHoverButtonColor").Value
                    equipButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow"):TweenPosition(UDim2.new(0, 0, 0.5, 0), "Out", "Quad", 0.25, true)
                    equipButton_upvr:WaitForChild("buttonLabel").TextColor3 = equipButton_upvr:WaitForChild("backSquare").ImageColor3
                    equipButton_upvr:TweenSize(UDim2.new(0.85, 0, 1.05, 0), "Out", "Quad", 0.25, true)
                end
            end
            equipButton_upvr.MouseEnter:connect(equipButtonHover)
            equipButton_upvr.SelectionGained:Connect(equipButtonHover)
            local function equipButtonExit() -- Line 5750
                --[[ Upvalues[3]:
                    [1]: arg1 (readonly)
                    [2]: LocalPlayer_upvr (copied, readonly)
                    [3]: equipButton_upvr (readonly)
                ]]
                if arg1.Parent == LocalPlayer_upvr:WaitForChild("Backpack") then
                    equipButton_upvr:WaitForChild("backSquare").ImageColor3 = equipButton_upvr:WaitForChild("buttonColor").Value
                    equipButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow"):TweenPosition(UDim2.new(0, 0, 0.53, 0), "Out", "Quad", 0.25, true)
                    equipButton_upvr:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                    equipButton_upvr:TweenSize(UDim2.new(0.8, 0, 1, 0), "Out", "Quad", 0.25, true)
                else
                    equipButton_upvr:WaitForChild("backSquare").ImageColor3 = equipButton_upvr:WaitForChild("unequipButtonColor").Value
                    equipButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow"):TweenPosition(UDim2.new(0, 0, 0.53, 0), "Out", "Quad", 0.25, true)
                    equipButton_upvr:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                    equipButton_upvr:TweenSize(UDim2.new(0.8, 0, 1, 0), "Out", "Quad", 0.25, true)
                end
            end
            equipButton_upvr.MouseLeave:connect(equipButtonExit)
            equipButton_upvr.SelectionLost:Connect(equipButtonExit)
            equipButton_upvr.Activated:Connect(function() -- Line 5773, Named "equipButtonClick"
                --[[ Upvalues[4]:
                    [1]: clickSound_upvr (copied, readonly)
                    [2]: arg1 (readonly)
                    [3]: LocalPlayer_upvr (copied, readonly)
                    [4]: Humanoid_upvr (copied, readonly)
                ]]
                clickSound_upvr:Play()
                if arg1.Parent == LocalPlayer_upvr:WaitForChild("Backpack") then
                    Humanoid_upvr:EquipTool(arg1)
                else
                    Humanoid_upvr:UnequipTools()
                end
            end)
            arg1.Equipped:Connect(function() -- Line 5786
                --[[ Upvalues[1]:
                    [1]: equipButton_upvr (readonly)
                ]]
                equipButton_upvr:WaitForChild("buttonLabel").Text = "Unequip"
                equipButton_upvr.buttonLabel:WaitForChild("shadow").Text = equipButton_upvr.buttonLabel.Text
                equipButton_upvr.buttonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                equipButton_upvr:WaitForChild("backSquare").ImageColor3 = equipButton_upvr:WaitForChild("unequipButtonColor").Value
                equipButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = equipButton_upvr:WaitForChild("underUnequipButtonColor").Value
            end)
            arg1.Unequipped:Connect(function() -- Line 5794
                --[[ Upvalues[1]:
                    [1]: equipButton_upvr (readonly)
                ]]
                equipButton_upvr:WaitForChild("buttonLabel").Text = "Equip"
                equipButton_upvr.buttonLabel:WaitForChild("shadow").Text = equipButton_upvr.buttonLabel.Text
                equipButton_upvr.buttonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                equipButton_upvr:WaitForChild("backSquare").ImageColor3 = equipButton_upvr:WaitForChild("buttonColor").Value
                equipButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = equipButton_upvr:WaitForChild("underButtonColor").Value
            end)
        end
    end
    local function updateMovesList_upvr() -- Line 5804, Named "updateMovesList"
        --[[ Upvalues[5]:
            [1]: LocalPlayer_upvr (copied, readonly)
            [2]: listFrame_upvr_3 (readonly)
            [3]: createNewMoveFrame_upvr (readonly)
            [4]: Character_upvr (copied, readonly)
            [5]: Backpack_upvr (copied, readonly)
        ]]
        for i_44, v_44 in pairs(LocalPlayer_upvr:WaitForChild("Backpack"):GetChildren()) do
            if v_44 ~= nil and v_44:IsA("Tool") and listFrame_upvr_3:FindFirstChild(v_44.Name) == nil then
                createNewMoveFrame_upvr(v_44)
            end
        end
        local class_Tool = Character_upvr:FindFirstChildWhichIsA("Tool")
        if class_Tool ~= nil then
            i_44 = class_Tool.Name
            if listFrame_upvr_3:FindFirstChild(i_44) == nil then
                createNewMoveFrame_upvr(class_Tool)
            end
        end
        for _, v_45 in pairs(listFrame_upvr_3:GetChildren()) do
            if v_45 ~= nil and v_45:IsA("Frame") and v_45:FindFirstChild("toolName") ~= nil then
                local SOME_5 = Backpack_upvr:FindFirstChild(v_45.toolName.Value)
                if SOME_5 == nil then
                    SOME_5 = Character_upvr:FindFirstChild(v_45.toolName.Value)
                end
                if SOME_5 == nil then
                    v_45:Destroy()
                end
            end
        end
    end
    coroutine.resume(coroutine.create(function() -- Line 5836
        --[[ Upvalues[1]:
            [1]: updateMovesList_upvr (readonly)
        ]]
        while wait(0.1) do
            updateMovesList_upvr()
        end
    end))
    for _, v_46 in pairs(LocalPlayer_upvr:WaitForChild("equippedPets"):GetChildren()) do
        if v_46 ~= nil and v_46:FindFirstChild("petReference") ~= nil and v_46.petReference.Value ~= nil then
            local Value = v_46.petReference.Value
            equipPetEvent_upvr:FireServer("unequipPet", Value)
            equipPetEvent_upvr:FireServer("equipPet", Value)
        end
    end
    local pageLabel_upvr_2 = itemsMenu_upvr:WaitForChild("pageLabel")
    itemsMenu_upvr:WaitForChild("nextButton").Activated:Connect(function() -- Line 5858, Named "nextPetPageClick"
        --[[ Upvalues[11]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: petsFrames_upvr_2 (copied, readonly)
            [3]: var96_upvw (copied, read and write)
            [4]: var97_upvw (copied, read and write)
            [5]: pageLabel_upvr_2 (readonly)
            [6]: powerUpFrames_upvr (copied, readonly)
            [7]: var94_upvw (copied, read and write)
            [8]: var95_upvw (copied, read and write)
            [9]: boostsFrames_upvr (copied, readonly)
            [10]: var98_upvw (copied, read and write)
            [11]: var99_upvw (copied, read and write)
        ]]
        clickSound_upvr:Play()
        if petsFrames_upvr_2.Visible == true then
            if var96_upvw < var97_upvw then
                var96_upvw += 1
                for _, v_47 in pairs(petsFrames_upvr_2:GetChildren()) do
                    if v_47 ~= nil and v_47:IsA("Frame") then
                        if v_47.Name ~= "page"..tostring(var96_upvw) then
                            v_47.Visible = false
                        else
                            v_47.Visible = true
                        end
                    end
                end
                pageLabel_upvr_2.Text = "Page "..tostring(var96_upvw)..'/'..tostring(var97_upvw)
                pageLabel_upvr_2:WaitForChild("shadow").Text = pageLabel_upvr_2.Text
            else
                var96_upvw = 1
                for _, v_84 in pairs(petsFrames_upvr_2:GetChildren()) do
                    if v_84 ~= nil and v_84:IsA("Frame") then
                        if v_84.Name ~= "page"..tostring(var96_upvw) then
                            v_84.Visible = false
                        else
                            v_84.Visible = true
                        end
                    end
                end
                pageLabel_upvr_2.Text = "Page "..tostring(var96_upvw)..'/'..tostring(var97_upvw)
                pageLabel_upvr_2:WaitForChild("shadow").Text = pageLabel_upvr_2.Text
            end
        end
        if powerUpFrames_upvr.Visible == true then
            if var94_upvw < var95_upvw then
                var94_upvw += 1
                for _, v_48 in pairs(powerUpFrames_upvr:GetChildren()) do
                    if v_48 ~= nil and v_48:IsA("Frame") then
                        if v_48.Name ~= "page"..tostring(var94_upvw) then
                            v_48.Visible = false
                        else
                            v_48.Visible = true
                        end
                    end
                end
                pageLabel_upvr_2.Text = "Page "..tostring(var94_upvw)..'/'..tostring(var95_upvw)
                pageLabel_upvr_2:WaitForChild("shadow").Text = pageLabel_upvr_2.Text
            else
                var94_upvw = 1
                for _, v_85 in pairs(powerUpFrames_upvr:GetChildren()) do
                    if v_85 ~= nil and v_85:IsA("Frame") then
                        if v_85.Name ~= "page"..tostring(var94_upvw) then
                            v_85.Visible = false
                        else
                            v_85.Visible = true
                        end
                    end
                end
                pageLabel_upvr_2.Text = "Page "..tostring(var94_upvw)..'/'..tostring(var95_upvw)
                pageLabel_upvr_2:WaitForChild("shadow").Text = pageLabel_upvr_2.Text
            end
        end
        if boostsFrames_upvr.Visible == true then
            if var98_upvw < var99_upvw then
                var98_upvw += 1
                for _, v_49 in pairs(boostsFrames_upvr:GetChildren()) do
                    if v_49 ~= nil and v_49:IsA("Frame") then
                        if v_49.Name ~= "page"..tostring(var98_upvw) then
                            v_49.Visible = false
                        else
                            v_49.Visible = true
                        end
                    end
                end
                pageLabel_upvr_2.Text = "Page "..tostring(var98_upvw)..'/'..tostring(var99_upvw)
                pageLabel_upvr_2:WaitForChild("shadow").Text = pageLabel_upvr_2.Text
                return
            end
            var98_upvw = 1
            for _, v_50 in pairs(boostsFrames_upvr:GetChildren()) do
                if v_50 ~= nil and v_50:IsA("Frame") then
                    if v_50.Name ~= "page"..tostring(var98_upvw) then
                        v_50.Visible = false
                    else
                        v_50.Visible = true
                    end
                end
            end
            pageLabel_upvr_2.Text = "Page "..tostring(var98_upvw)..'/'..tostring(var99_upvw)
            pageLabel_upvr_2:WaitForChild("shadow").Text = pageLabel_upvr_2.Text
        end
    end)
    itemsMenu_upvr:WaitForChild("prevButton").Activated:Connect(function() -- Line 5978, Named "prevPetPageClick"
        --[[ Upvalues[11]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: petsFrames_upvr_2 (copied, readonly)
            [3]: var96_upvw (copied, read and write)
            [4]: pageLabel_upvr_2 (readonly)
            [5]: var97_upvw (copied, read and write)
            [6]: powerUpFrames_upvr (copied, readonly)
            [7]: var94_upvw (copied, read and write)
            [8]: var95_upvw (copied, read and write)
            [9]: boostsFrames_upvr (copied, readonly)
            [10]: var98_upvw (copied, read and write)
            [11]: var99_upvw (copied, read and write)
        ]]
        clickSound_upvr:Play()
        if petsFrames_upvr_2.Visible == true then
            if 1 < var96_upvw then
                var96_upvw -= 1
                for _, v_51 in pairs(petsFrames_upvr_2:GetChildren()) do
                    if v_51 ~= nil and v_51:IsA("Frame") then
                        if v_51.Name ~= "page"..tostring(var96_upvw) then
                            v_51.Visible = false
                        else
                            v_51.Visible = true
                        end
                    end
                end
                pageLabel_upvr_2.Text = "Page "..tostring(var96_upvw)..'/'..tostring(var97_upvw)
                pageLabel_upvr_2:WaitForChild("shadow").Text = pageLabel_upvr_2.Text
            else
                var96_upvw = var97_upvw
                for _, v_86 in pairs(petsFrames_upvr_2:GetChildren()) do
                    if v_86 ~= nil and v_86:IsA("Frame") then
                        if v_86.Name ~= "page"..tostring(var96_upvw) then
                            v_86.Visible = false
                        else
                            v_86.Visible = true
                        end
                    end
                end
                pageLabel_upvr_2.Text = "Page "..tostring(var96_upvw)..'/'..tostring(var97_upvw)
                pageLabel_upvr_2:WaitForChild("shadow").Text = pageLabel_upvr_2.Text
            end
        end
        if powerUpFrames_upvr.Visible == true then
            if 1 < var94_upvw then
                var94_upvw -= 1
                for _, v_52 in pairs(powerUpFrames_upvr:GetChildren()) do
                    if v_52 ~= nil and v_52:IsA("Frame") then
                        if v_52.Name ~= "page"..tostring(var94_upvw) then
                            v_52.Visible = false
                        else
                            v_52.Visible = true
                        end
                    end
                end
                pageLabel_upvr_2.Text = "Page "..tostring(var94_upvw)..'/'..tostring(var95_upvw)
                pageLabel_upvr_2:WaitForChild("shadow").Text = pageLabel_upvr_2.Text
            else
                var94_upvw = var95_upvw
                for _, v_87 in pairs(powerUpFrames_upvr:GetChildren()) do
                    if v_87 ~= nil and v_87:IsA("Frame") then
                        if v_87.Name ~= "page"..tostring(var94_upvw) then
                            v_87.Visible = false
                        else
                            v_87.Visible = true
                        end
                    end
                end
                pageLabel_upvr_2.Text = "Page "..tostring(var94_upvw)..'/'..tostring(var95_upvw)
                pageLabel_upvr_2:WaitForChild("shadow").Text = pageLabel_upvr_2.Text
            end
        end
        if boostsFrames_upvr.Visible == true then
            if 1 < var98_upvw then
                var98_upvw -= 1
                for _, v_53 in pairs(boostsFrames_upvr:GetChildren()) do
                    if v_53 ~= nil and v_53:IsA("Frame") then
                        if v_53.Name ~= "page"..tostring(var98_upvw) then
                            v_53.Visible = false
                        else
                            v_53.Visible = true
                        end
                    end
                end
                pageLabel_upvr_2.Text = "Page "..tostring(var98_upvw)..'/'..tostring(var99_upvw)
                pageLabel_upvr_2:WaitForChild("shadow").Text = pageLabel_upvr_2.Text
                return
            end
            var98_upvw = var99_upvw
            for _, v_54 in pairs(boostsFrames_upvr:GetChildren()) do
                if v_54 ~= nil and v_54:IsA("Frame") then
                    if v_54.Name ~= "page"..tostring(var98_upvw) then
                        v_54.Visible = false
                    else
                        v_54.Visible = true
                    end
                end
            end
            pageLabel_upvr_2.Text = "Page "..tostring(var98_upvw)..'/'..tostring(var99_upvw)
            pageLabel_upvr_2:WaitForChild("shadow").Text = pageLabel_upvr_2.Text
        end
    end)
end)()
local var824_upvw
local equipButton_upvr_2 = sideBoostMenu_upvr:WaitForChild("equipButton")
local var826_upvw
local consumablesFolder_upvr = LocalPlayer_upvr:WaitForChild("consumablesFolder")
;(function() -- Line 6102, Named "connectGiftFunctions"
    --[[ Upvalues[25]:
        [1]: rEvents_upvr (readonly)
        [2]: clickSound_upvr (readonly)
        [3]: var824_upvw (read and write)
        [4]: var76_upvw (read and write)
        [5]: Backpack_upvr (readonly)
        [6]: Humanoid_upvr (readonly)
        [7]: equipButton_upvr_2 (readonly)
        [8]: itemsMenu_upvr (readonly)
        [9]: boostsFrames_upvr (readonly)
        [10]: var99_upvw (read and write)
        [11]: var98_upvw (read and write)
        [12]: sideBoostMenu_upvr (readonly)
        [13]: ReplicatedStorage_upvr (readonly)
        [14]: hoverSound_upvr (readonly)
        [15]: TweenService_upvr (readonly)
        [16]: var826_upvw (read and write)
        [17]: Character_upvr (readonly)
        [18]: consumablesFolder_upvr (readonly)
        [19]: Parent_3_upvr (readonly)
        [20]: LocalPlayer_upvr (readonly)
        [21]: any_getPlayerPlatform_result1_upvr (readonly)
        [22]: GuiService_upvr (readonly)
        [23]: gemsSound_upvr (readonly)
        [24]: deniedSound_upvr (readonly)
        [25]: powerUpLevelUpSound_upvr (readonly)
    ]]
    local var830_upvw = true
    equipButton_upvr_2.Activated:Connect(function() -- Line 6111, Named "equipBoostButtonClick"
        --[[ Upvalues[7]:
            [1]: var830_upvw (read and write)
            [2]: clickSound_upvr (copied, readonly)
            [3]: var824_upvw (copied, read and write)
            [4]: var76_upvw (copied, read and write)
            [5]: Backpack_upvr (copied, readonly)
            [6]: Humanoid_upvr (copied, readonly)
            [7]: equipButton_upvr_2 (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 17 start (CF ANALYSIS FAILED)
        if var830_upvw == false then
        else
            var830_upvw = false
            clickSound_upvr:Play()
            if var824_upvw ~= nil and var76_upvw == false then
                local SOME_2 = Backpack_upvr:FindFirstChild(var824_upvw.Name)
                if SOME_2 ~= nil then
                    Humanoid_upvr:UnequipTools()
                    Humanoid_upvr:EquipTool(SOME_2)
                    var76_upvw = true
                    equipButton_upvr_2:WaitForChild("backSquare").ImageColor3 = equipButton_upvr_2:WaitForChild("unequipButtonColor").Value
                    equipButton_upvr_2:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = equipButton_upvr_2:WaitForChild("underUnequipButtonColor").Value
                    equipButton_upvr_2:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                    equipButton_upvr_2:WaitForChild("buttonLabel").Text = "UNEQUIP"
                    equipButton_upvr_2.buttonLabel:WaitForChild("shadow").Text = equipButton_upvr_2.buttonLabel.Text
                    -- KONSTANTWARNING: GOTO [183] #134
                end
            elseif var824_upvw ~= nil and var76_upvw == true then
                Humanoid_upvr:UnequipTools()
                var76_upvw = false
                equipButton_upvr_2:WaitForChild("backSquare").ImageColor3 = equipButton_upvr_2:WaitForChild("buttonColor").Value
                equipButton_upvr_2:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = equipButton_upvr_2:WaitForChild("underButtonColor").Value
                equipButton_upvr_2:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                equipButton_upvr_2:WaitForChild("buttonLabel").Text = "EQUIP"
                equipButton_upvr_2.buttonLabel:WaitForChild("shadow").Text = equipButton_upvr_2.buttonLabel.Text
            end
            -- KONSTANTERROR: [0] 1. Error Block 17 end (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [183] 134. Error Block 11 start (CF ANALYSIS FAILED)
            wait(0.5)
            var830_upvw = true
            -- KONSTANTERROR: [183] 134. Error Block 11 end (CF ANALYSIS FAILED)
        end
    end)
    local function getEmptyBoostPage_upvr() -- Line 6159, Named "getEmptyBoostPage"
        --[[ Upvalues[4]:
            [1]: itemsMenu_upvr (copied, readonly)
            [2]: boostsFrames_upvr (copied, readonly)
            [3]: var99_upvw (copied, read and write)
            [4]: var98_upvw (copied, read and write)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        itemsMenu_upvr:WaitForChild("noBoostsLabel").Visible = false
        local pairs_result1_72, pairs_result2_4, pairs_result3_9 = pairs(boostsFrames_upvr:GetChildren())
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [31] 25. Error Block 5 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [31] 25. Error Block 5 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [17] 14. Error Block 2 start (CF ANALYSIS FAILED)
        -- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [31.6]
        -- KONSTANTERROR: [17] 14. Error Block 2 end (CF ANALYSIS FAILED)
    end
    local boostButton_upvr = script:WaitForChild("boostButton")
    local boostImage_upvr = sideBoostMenu_upvr:WaitForChild("boostImage")
    local boostTitle_upvr = sideBoostMenu_upvr:WaitForChild("boostTitle")
    local boostDescs_upvr = ReplicatedStorage_upvr:WaitForChild("boostDescs")
    local function createConsumablesButton_upvr(arg1) -- Line 6212, Named "createConsumablesButton"
        --[[ Upvalues[15]:
            [1]: boostButton_upvr (readonly)
            [2]: getEmptyBoostPage_upvr (readonly)
            [3]: hoverSound_upvr (copied, readonly)
            [4]: TweenService_upvr (copied, readonly)
            [5]: clickSound_upvr (copied, readonly)
            [6]: boostImage_upvr (readonly)
            [7]: boostTitle_upvr (readonly)
            [8]: sideBoostMenu_upvr (copied, readonly)
            [9]: boostDescs_upvr (readonly)
            [10]: var824_upvw (copied, read and write)
            [11]: var826_upvw (copied, read and write)
            [12]: Character_upvr (copied, readonly)
            [13]: var76_upvw (copied, read and write)
            [14]: equipButton_upvr_2 (copied, readonly)
            [15]: itemsMenu_upvr (copied, readonly)
        ]]
        if arg1 ~= nil then
            local clone_39_upvr = boostButton_upvr:Clone()
            clone_39_upvr:WaitForChild("nameLabel").Text = arg1.Name
            clone_39_upvr.nameLabel:WaitForChild("shadow").Text = clone_39_upvr.nameLabel.Text
            clone_39_upvr:WaitForChild("boostImage").Image = arg1.Value
            local ObjectValue_upvr_8 = Instance.new("ObjectValue")
            ObjectValue_upvr_8.Name = "tweenValue"
            ObjectValue_upvr_8.Parent = clone_39_upvr
            local ObjectValue_upvr_14 = Instance.new("ObjectValue")
            ObjectValue_upvr_14.Name = "boostReference"
            ObjectValue_upvr_14.Value = arg1
            ObjectValue_upvr_14.Parent = clone_39_upvr
            clone_39_upvr.Parent = getEmptyBoostPage_upvr()
            local function boostButtonHover() -- Line 6233
                --[[ Upvalues[4]:
                    [1]: hoverSound_upvr (copied, readonly)
                    [2]: clone_39_upvr (readonly)
                    [3]: ObjectValue_upvr_8 (readonly)
                    [4]: TweenService_upvr (copied, readonly)
                ]]
                hoverSound_upvr:Play()
                clone_39_upvr:WaitForChild("nameLabel").TextColor3 = clone_39_upvr:WaitForChild("backSquare").ImageColor3
                clone_39_upvr:WaitForChild("levelLabel").TextColor3 = clone_39_upvr:WaitForChild("backSquare").ImageColor3
                if ObjectValue_upvr_8.Value ~= nil then
                    ObjectValue_upvr_8.Value:Cancel()
                end
                clone_39_upvr:WaitForChild("boostImage").Rotation = 0
                local randint_5 = math.random(1, 2)
                if randint_5 == 1 then
                    randint_5 = -15
                else
                    randint_5 = 15
                end
                ObjectValue_upvr_8.Value = TweenService_upvr:Create(clone_39_upvr:WaitForChild("boostImage"), TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
                    Rotation = randint_5;
                })
                ObjectValue_upvr_8.Value:Play()
            end
            local function boostButtonExit() -- Line 6258
                --[[ Upvalues[1]:
                    [1]: clone_39_upvr (readonly)
                ]]
                clone_39_upvr:WaitForChild("nameLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                clone_39_upvr:WaitForChild("levelLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
            end
            clone_39_upvr.MouseEnter:Connect(boostButtonHover)
            clone_39_upvr.SelectionGained:Connect(boostButtonHover)
            clone_39_upvr.MouseLeave:Connect(boostButtonExit)
            clone_39_upvr.SelectionLost:Connect(boostButtonExit)
            clone_39_upvr.Activated:Connect(function() -- Line 6269, Named "boostButtonClick"
                --[[ Upvalues[13]:
                    [1]: ObjectValue_upvr_14 (readonly)
                    [2]: clickSound_upvr (copied, readonly)
                    [3]: boostImage_upvr (copied, readonly)
                    [4]: boostTitle_upvr (copied, readonly)
                    [5]: sideBoostMenu_upvr (copied, readonly)
                    [6]: boostDescs_upvr (copied, readonly)
                    [7]: var824_upvw (copied, read and write)
                    [8]: var826_upvw (copied, read and write)
                    [9]: clone_39_upvr (readonly)
                    [10]: Character_upvr (copied, readonly)
                    [11]: var76_upvw (copied, read and write)
                    [12]: equipButton_upvr_2 (copied, readonly)
                    [13]: itemsMenu_upvr (copied, readonly)
                ]]
                if ObjectValue_upvr_14 ~= nil and ObjectValue_upvr_14.Value ~= nil and ObjectValue_upvr_14.Value.Parent ~= nil then
                    clickSound_upvr:Play()
                    boostImage_upvr.Image = ObjectValue_upvr_14.Value.Value
                    boostTitle_upvr.Text = ObjectValue_upvr_14.Value.Name
                    boostTitle_upvr:WaitForChild("shadow").Text = boostTitle_upvr.Text
                    if ObjectValue_upvr_14.Value:FindFirstChild("isGift") == nil and ObjectValue_upvr_14.Value:FindFirstChild("isFortune") == nil then
                        sideBoostMenu_upvr:WaitForChild("giftedLabel").Visible = false
                        sideBoostMenu_upvr:WaitForChild("fortuneLabel").Visible = false
                        sideBoostMenu_upvr:WaitForChild("giftButton").Visible = true
                    elseif ObjectValue_upvr_14.Value:FindFirstChild("isGift") ~= nil and ObjectValue_upvr_14.Value:FindFirstChild("isFortune") == nil then
                        sideBoostMenu_upvr:WaitForChild("giftedLabel").Visible = true
                        sideBoostMenu_upvr:WaitForChild("fortuneLabel").Visible = false
                        sideBoostMenu_upvr:WaitForChild("giftButton").Visible = false
                    elseif ObjectValue_upvr_14.Value:FindFirstChild("isFortune") ~= nil then
                        sideBoostMenu_upvr:WaitForChild("giftedLabel").Visible = false
                        sideBoostMenu_upvr:WaitForChild("fortuneLabel").Visible = true
                        sideBoostMenu_upvr:WaitForChild("giftButton").Visible = false
                    end
                    local SOME_16 = boostDescs_upvr:FindFirstChild(ObjectValue_upvr_14.Value.Name)
                    if SOME_16 ~= nil then
                        sideBoostMenu_upvr:WaitForChild("descFrame"):WaitForChild("boostDesc").Text = SOME_16.Value
                        sideBoostMenu_upvr.descFrame.boostDesc:WaitForChild("shadow").Text = sideBoostMenu_upvr.descFrame.boostDesc.Text
                        if SOME_16:FindFirstChild("effectValue") ~= nil then
                            sideBoostMenu_upvr:WaitForChild("effectLabel").Text = SOME_16.effectValue.Value
                            sideBoostMenu_upvr.effectLabel:WaitForChild("shadow").Text = sideBoostMenu_upvr.effectLabel.Text
                            if ObjectValue_upvr_14.Value.Name == "Protein Bar" or ObjectValue_upvr_14.Value.Name == "Protein Shake" or ObjectValue_upvr_14.Value.Name == "TOUGH Bar" or ObjectValue_upvr_14.Value.Name == "ULTRA Shake" then
                                sideBoostMenu_upvr:WaitForChild("effectLabel").TextColor3 = Color3.fromRGB(255, 226, 0)
                            elseif ObjectValue_upvr_14.Value.Name == "Energy Bar" or ObjectValue_upvr_14.Value.Name == "Energy Shake" then
                                sideBoostMenu_upvr:WaitForChild("effectLabel").TextColor3 = Color3.fromRGB(0, 255, 170)
                            elseif ObjectValue_upvr_14.Value.Name == "Protein Egg" then
                                sideBoostMenu_upvr:WaitForChild("effectLabel").TextColor3 = Color3.fromRGB(0, 170, 255)
                            elseif ObjectValue_upvr_14.Value.Name == "Tropical Shake" then
                                sideBoostMenu_upvr:WaitForChild("effectLabel").TextColor3 = Color3.fromRGB(85, 255, 0)
                            end
                        end
                    end
                    var824_upvw = ObjectValue_upvr_14.Value
                    var826_upvw = clone_39_upvr
                    if Character_upvr:FindFirstChild(ObjectValue_upvr_14.Value.Name) == nil then
                        var76_upvw = false
                    else
                        var76_upvw = true
                    end
                    if var76_upvw == true then
                        equipButton_upvr_2:WaitForChild("backSquare").ImageColor3 = equipButton_upvr_2:WaitForChild("unequipButtonColor").Value
                        equipButton_upvr_2:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = equipButton_upvr_2:WaitForChild("underUnequipButtonColor").Value
                        equipButton_upvr_2:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                        equipButton_upvr_2:WaitForChild("buttonLabel").Text = "UNEQUIP"
                        equipButton_upvr_2.buttonLabel:WaitForChild("shadow").Text = equipButton_upvr_2.buttonLabel.Text
                    else
                        equipButton_upvr_2:WaitForChild("backSquare").ImageColor3 = equipButton_upvr_2:WaitForChild("buttonColor").Value
                        equipButton_upvr_2:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = equipButton_upvr_2:WaitForChild("underButtonColor").Value
                        equipButton_upvr_2:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                        equipButton_upvr_2:WaitForChild("buttonLabel").Text = "EQUIP"
                        equipButton_upvr_2.buttonLabel:WaitForChild("shadow").Text = equipButton_upvr_2.buttonLabel.Text
                    end
                    itemsMenu_upvr:TweenPosition(UDim2.new(0.475, 0, 0.5, 0), "Out", "Back", 0.25, true)
                    sideBoostMenu_upvr.Visible = true
                end
            end)
        end
    end
    for _, v_55 in pairs(consumablesFolder_upvr:GetDescendants()) do
        if v_55 ~= nil and v_55:IsA("StringValue") and v_55.Parent ~= nil and v_55.Parent == consumablesFolder_upvr then
            createConsumablesButton_upvr(v_55)
        end
    end
    consumablesFolder_upvr.DescendantAdded:Connect(function(arg1) -- Line 6362, Named "boostAddedToInventory"
        --[[ Upvalues[2]:
            [1]: consumablesFolder_upvr (copied, readonly)
            [2]: createConsumablesButton_upvr (readonly)
        ]]
        if arg1 ~= nil and arg1:IsA("StringValue") and arg1.Parent ~= nil and arg1.Parent == consumablesFolder_upvr then
            createConsumablesButton_upvr(arg1)
        end
    end)
    consumablesFolder_upvr.DescendantRemoving:Connect(function(arg1) -- Line 6374
        --[[ Upvalues[5]:
            [1]: consumablesFolder_upvr (copied, readonly)
            [2]: boostsFrames_upvr (copied, readonly)
            [3]: var98_upvw (copied, read and write)
            [4]: var99_upvw (copied, read and write)
            [5]: itemsMenu_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [2] 2. Error Block 2 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [2] 2. Error Block 2 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [7] 6. Error Block 3 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [7] 6. Error Block 3 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [11] 8. Error Block 4 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [11] 8. Error Block 4 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [218] 153. Error Block 29 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [218] 153. Error Block 29 end (CF ANALYSIS FAILED)
    end)
    local var850_upvw
    local confirmGiftMenu_upvr = Parent_3_upvr:WaitForChild("confirmGiftMenu")
    local giftMenu_upvr = Parent_3_upvr:WaitForChild("giftMenu")
    sideBoostMenu_upvr:WaitForChild("giftButton").Activated:Connect(function() -- Line 6444, Named "giftButtonClick"
        --[[ Upvalues[10]:
            [1]: var824_upvw (copied, read and write)
            [2]: clickSound_upvr (copied, readonly)
            [3]: giftMenu_upvr (readonly)
            [4]: Parent_3_upvr (copied, readonly)
            [5]: confirmGiftMenu_upvr (readonly)
            [6]: LocalPlayer_upvr (copied, readonly)
            [7]: hoverSound_upvr (copied, readonly)
            [8]: var850_upvw (read and write)
            [9]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [10]: GuiService_upvr (copied, readonly)
        ]]
        if var824_upvw ~= nil and var824_upvw:FindFirstChild("isGift") == nil then
            clickSound_upvr:Play()
            for _, v_56 in pairs(giftMenu_upvr:WaitForChild("listBackImage"):WaitForChild("listFrame"):GetChildren()) do
                if v_56 ~= nil and v_56:IsA("UIListLayout") == false then
                    v_56:Destroy()
                end
            end
            Parent_3_upvr:WaitForChild("giftCoverFrame").Visible = true
            confirmGiftMenu_upvr.Visible = false
            for i_57, v_57 in pairs(game.Players:GetChildren()) do
                if v_57 ~= nil and v_57 ~= LocalPlayer_upvr then
                    local clone_3_upvr = script:WaitForChild("playerGiftFrame"):Clone()
                    clone_3_upvr:WaitForChild("nameLabel").Text = v_57.DisplayName
                    clone_3_upvr.nameLabel:WaitForChild("shadow").Text = clone_3_upvr.nameLabel.Text
                    clone_3_upvr.Parent = giftMenu_upvr:WaitForChild("listBackImage"):WaitForChild("listFrame")
                    local giftButton_upvr_2 = clone_3_upvr:WaitForChild("nameLabel"):WaitForChild("giftButton")
                    local function giftFrameButtonHover() -- Line 6471
                        --[[ Upvalues[2]:
                            [1]: hoverSound_upvr (copied, readonly)
                            [2]: giftButton_upvr_2 (readonly)
                        ]]
                        hoverSound_upvr:Play()
                        giftButton_upvr_2:TweenSize(UDim2.new(0.82, 0, 1.1, 0), "Out", "Quad", 0.25, true)
                        giftButton_upvr_2:WaitForChild("buttonLabel").TextColor3 = giftButton_upvr_2:WaitForChild("backSquare").ImageColor3
                        giftButton_upvr_2:WaitForChild("backSquare").ImageColor3 = giftButton_upvr_2:WaitForChild("hoverButtonColor").Value
                        giftButton_upvr_2:WaitForChild("backSquare"):WaitForChild("squareShadow"):TweenPosition(UDim2.new(0, 0, 0.5, 0), "Out", "Quad", 0.25, true)
                    end
                    local function giftFrameButtonExit() -- Line 6484
                        --[[ Upvalues[1]:
                            [1]: giftButton_upvr_2 (readonly)
                        ]]
                        giftButton_upvr_2:TweenSize(UDim2.new(0.8, 0, 1, 0), "Out", "Quad", 0.25, true)
                        giftButton_upvr_2:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                        giftButton_upvr_2:WaitForChild("backSquare").ImageColor3 = giftButton_upvr_2:WaitForChild("buttonColor").Value
                        giftButton_upvr_2:WaitForChild("backSquare"):WaitForChild("squareShadow"):TweenPosition(UDim2.new(0, 0, 0.53, 0), "Out", "Quad", 0.25, true)
                    end
                    giftButton_upvr_2.MouseEnter:Connect(giftFrameButtonHover)
                    giftButton_upvr_2.SelectionGained:Connect(giftFrameButtonHover)
                    giftButton_upvr_2.MouseLeave:Connect(giftFrameButtonExit)
                    giftButton_upvr_2.SelectionLost:Connect(giftFrameButtonExit)
                    local Name_upvr_3 = v_57.Name
                    local function giftFrameButtonClick() -- Line 6501
                        --[[ Upvalues[10]:
                            [1]: var824_upvw (copied, read and write)
                            [2]: Name_upvr_3 (readonly)
                            [3]: clickSound_upvr (copied, readonly)
                            [4]: var850_upvw (copied, read and write)
                            [5]: confirmGiftMenu_upvr (copied, readonly)
                            [6]: giftMenu_upvr (copied, readonly)
                            [7]: Parent_3_upvr (copied, readonly)
                            [8]: any_getPlayerPlatform_result1_upvr (copied, readonly)
                            [9]: GuiService_upvr (copied, readonly)
                            [10]: clone_3_upvr (readonly)
                        ]]
                        -- KONSTANTERROR: [0] 1. Error Block 12 start (CF ANALYSIS FAILED)
                        if var824_upvw == nil or var824_upvw.Parent == nil or var824_upvw.Value == "" then return end
                        -- KONSTANTERROR: [0] 1. Error Block 12 end (CF ANALYSIS FAILED)
                        -- KONSTANTERROR: [102] 71. Error Block 8 start (CF ANALYSIS FAILED)
                        GuiService_upvr.SelectedObject = confirmGiftMenu_upvr:WaitForChild("noButton")
                        do
                            return
                        end
                        -- KONSTANTERROR: [102] 71. Error Block 8 end (CF ANALYSIS FAILED)
                        -- KONSTANTERROR: [111] 78. Error Block 9 start (CF ANALYSIS FAILED)
                        clone_3_upvr:Destroy()
                        -- KONSTANTERROR: [111] 78. Error Block 9 end (CF ANALYSIS FAILED)
                    end
                    giftButton_upvr_2.Activated:Connect(giftFrameButtonClick)
                end
            end
            giftMenu_upvr.Visible = true
            if any_getPlayerPlatform_result1_upvr == "console" then
                i_57 = "cancelButton"
                GuiService_upvr.SelectedObject = giftMenu_upvr:WaitForChild(i_57)
            end
        end
    end)
    giftMenu_upvr:WaitForChild("cancelButton").Activated:Connect(function() -- Line 6550, Named "cancelGiftButtonClick"
        --[[ Upvalues[4]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: giftMenu_upvr (readonly)
            [3]: Parent_3_upvr (copied, readonly)
            [4]: confirmGiftMenu_upvr (readonly)
        ]]
        clickSound_upvr:Play()
        giftMenu_upvr.Visible = false
        Parent_3_upvr:WaitForChild("giftCoverFrame").Visible = false
        confirmGiftMenu_upvr.Visible = false
    end)
    confirmGiftMenu_upvr:WaitForChild("noButton").Activated:Connect(function() -- Line 6560, Named "noGiftButtonClick"
        --[[ Upvalues[5]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: confirmGiftMenu_upvr (readonly)
            [3]: giftMenu_upvr (readonly)
            [4]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [5]: GuiService_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        confirmGiftMenu_upvr.Visible = false
        giftMenu_upvr.Visible = true
        if any_getPlayerPlatform_result1_upvr == "console" then
            GuiService_upvr.SelectedObject = giftMenu_upvr:WaitForChild("cancelButton")
        end
    end)
    local giftRemote_upvr = rEvents_upvr:WaitForChild("giftRemote")
    confirmGiftMenu_upvr:WaitForChild("yesButton").Activated:Connect(function() -- Line 6574, Named "yesGiftButtonClick"
        --[[ Upvalues[11]:
            [1]: var850_upvw (read and write)
            [2]: var824_upvw (copied, read and write)
            [3]: clickSound_upvr (copied, readonly)
            [4]: giftRemote_upvr (readonly)
            [5]: gemsSound_upvr (copied, readonly)
            [6]: confirmGiftMenu_upvr (readonly)
            [7]: giftMenu_upvr (readonly)
            [8]: Parent_3_upvr (copied, readonly)
            [9]: itemsMenu_upvr (copied, readonly)
            [10]: sideBoostMenu_upvr (copied, readonly)
            [11]: deniedSound_upvr (copied, readonly)
        ]]
        if var850_upvw ~= nil and var850_upvw.Parent ~= nil and var824_upvw ~= nil and var824_upvw:FindFirstChild("isGift") == nil then
            clickSound_upvr:Play()
            if giftRemote_upvr:InvokeServer("giftRequest", var850_upvw, var824_upvw) == true then
                gemsSound_upvr:Play()
                confirmGiftMenu_upvr.Visible = false
                giftMenu_upvr.Visible = false
                Parent_3_upvr:WaitForChild("giftCoverFrame").Visible = false
                if itemsMenu_upvr.Visible == true and sideBoostMenu_upvr.Visible == true then
                    itemsMenu_upvr:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), "Out", "Back", 0.25, true)
                end
                sideBoostMenu_upvr.Visible = false
            else
                confirmGiftMenu_upvr.Visible = false
                giftMenu_upvr.Visible = false
                Parent_3_upvr:WaitForChild("giftCoverFrame").Visible = false
                deniedSound_upvr:Play()
            end
        end
        deniedSound_upvr:Play()
        confirmGiftMenu_upvr.Visible = false
        giftMenu_upvr.Visible = false
        Parent_3_upvr:WaitForChild("giftCoverFrame").Visible = false
    end)
    local var868_upvw
    local var869_upvw
    local giftedIcon_upvr = Parent_3_upvr:WaitForChild("giftedIcon")
    rEvents_upvr:WaitForChild("giftedEvent").OnClientEvent:Connect(function(arg1, arg2, arg3) -- Line 6620
        --[[ Upvalues[5]:
            [1]: var868_upvw (read and write)
            [2]: var869_upvw (read and write)
            [3]: giftedIcon_upvr (readonly)
            [4]: TweenService_upvr (copied, readonly)
            [5]: powerUpLevelUpSound_upvr (copied, readonly)
        ]]
        if arg1 ~= nil and arg1 == "wasGifted" and arg2 ~= nil and arg3 ~= nil then
            if var868_upvw ~= nil then
                var868_upvw:Cancel()
            end
            if var869_upvw ~= nil then
                var869_upvw:Cancel()
            end
            giftedIcon_upvr.Size = UDim2.new(0, 0, 0, 0)
            giftedIcon_upvr.Image = arg2
            giftedIcon_upvr:WaitForChild("giftedLabel").Text = arg3
            giftedIcon_upvr.giftedLabel:WaitForChild("shadow").Text = giftedIcon_upvr.giftedLabel.Text
            giftedIcon_upvr.Visible = true
            var868_upvw = TweenService_upvr:Create(giftedIcon_upvr, TweenInfo.new(0.5), {
                Size = UDim2.new(0.3, 0, 0.13, 0);
            })
            var868_upvw:Play()
            var869_upvw = TweenService_upvr:Create(giftedIcon_upvr, TweenInfo.new(5.5), {
                Visible = false;
            })
            var869_upvw:Play()
            powerUpLevelUpSound_upvr:Play()
        end
    end)
end)()
local randomItemsDisabled_upvr = LocalPlayer_upvr:WaitForChild("randomItemsDisabled")
local petsFrames_upvr = tradePanel_upvr:WaitForChild("petsFrames")
local var875_upvw = 0
local var876_upvw = 0
local tradingEvent_upvr = rEvents_upvr:WaitForChild("tradingEvent")
local auraFrames_upvr = tradePanel_upvr:WaitForChild("auraFrames")
local var879_upvw = 0
local var880_upvw = 0
;(function() -- Line 6658, Named "connectTradeMenuFunctions"
    --[[ Upvalues[36]:
        [1]: sideButtons_upvr_3 (readonly)
        [2]: tradeMenu_upvr (readonly)
        [3]: resetMenus_upvr (readonly)
        [4]: paidTradingDisabled_upvr (readonly)
        [5]: fortuneMenu_upvr (readonly)
        [6]: randomItemsDisabled_upvr (readonly)
        [7]: LocalPlayer_upvr (readonly)
        [8]: tradePanel_upvr (readonly)
        [9]: Parent_3_upvr (readonly)
        [10]: var78_upvw (read and write)
        [11]: tradingOn_3_upvr (readonly)
        [12]: petsFrames_upvr (readonly)
        [13]: inventoryPage_upvr (readonly)
        [14]: var875_upvw (read and write)
        [15]: var876_upvw (read and write)
        [16]: rarityColorsFolder_upvr (readonly)
        [17]: TweenService_upvr (readonly)
        [18]: hoverSound_upvr (readonly)
        [19]: clickSound_upvr (readonly)
        [20]: ReplicatedStorage_upvr (readonly)
        [21]: tradingEvent_upvr (readonly)
        [22]: auraFrames_upvr (readonly)
        [23]: var879_upvw (read and write)
        [24]: var880_upvw (read and write)
        [25]: powerUpButton_upvr (readonly)
        [26]: Strength_4_upvr (readonly)
        [27]: Rebirths_upvr (readonly)
        [28]: gemsSound_upvr (readonly)
        [29]: any_getPlayerPlatform_result1_upvr (readonly)
        [30]: GuiService_upvr (readonly)
        [31]: unblurScreenEffect_upvr (readonly)
        [32]: rightSideButtons_upvr (readonly)
        [33]: blurScreenEffect_upvr (readonly)
        [34]: petsFolder_upvr (readonly)
        [35]: powerUpsFolder_upvr (readonly)
        [36]: Humanoid_upvr (readonly)
    ]]
    local function _() -- Line 6660, Named "hideTradeMenus"
        --[[ Upvalues[3]:
            [1]: sideButtons_upvr_3 (copied, readonly)
            [2]: tradeMenu_upvr (copied, readonly)
            [3]: resetMenus_upvr (copied, readonly)
        ]]
        sideButtons_upvr_3:WaitForChild("tradeButton").Visible = false
        if tradeMenu_upvr.Visible == true then
            resetMenus_upvr()
        end
    end
    if paidTradingDisabled_upvr.Value == true then
        sideButtons_upvr_3:WaitForChild("tradeButton").Visible = false
        if tradeMenu_upvr.Visible == true then
            resetMenus_upvr()
        end
    end
    paidTradingDisabled_upvr.Changed:Connect(function() -- Line 6668, Named "policyTradingDisabled"
        --[[ Upvalues[4]:
            [1]: paidTradingDisabled_upvr (copied, readonly)
            [2]: sideButtons_upvr_3 (copied, readonly)
            [3]: tradeMenu_upvr (copied, readonly)
            [4]: resetMenus_upvr (copied, readonly)
        ]]
        if paidTradingDisabled_upvr.Value == true then
            sideButtons_upvr_3:WaitForChild("tradeButton").Visible = false
            if tradeMenu_upvr.Visible == true then
                resetMenus_upvr()
            end
        end
    end)
    local function _() -- Line 6678, Named "hideRandomItemsMenus"
        --[[ Upvalues[1]:
            [1]: fortuneMenu_upvr (copied, readonly)
        ]]
        fortuneMenu_upvr:WaitForChild("buttonsFrame"):WaitForChild("giftButton").Visible = false
        fortuneMenu_upvr:WaitForChild("buttonsFrame"):WaitForChild("buySpinsButton").Visible = false
    end
    if randomItemsDisabled_upvr.Value == true then
        fortuneMenu_upvr:WaitForChild("buttonsFrame"):WaitForChild("giftButton").Visible = false
        fortuneMenu_upvr:WaitForChild("buttonsFrame"):WaitForChild("buySpinsButton").Visible = false
        sideButtons_upvr_3:WaitForChild("tradeButton").Visible = false
        if tradeMenu_upvr.Visible == true then
            resetMenus_upvr()
        end
    end
    randomItemsDisabled_upvr.Changed:Connect(function() -- Line 6690, Named "policyRandomItemsDisabled"
        --[[ Upvalues[5]:
            [1]: randomItemsDisabled_upvr (copied, readonly)
            [2]: fortuneMenu_upvr (copied, readonly)
            [3]: sideButtons_upvr_3 (copied, readonly)
            [4]: tradeMenu_upvr (copied, readonly)
            [5]: resetMenus_upvr (copied, readonly)
        ]]
        if randomItemsDisabled_upvr.Value == true then
            fortuneMenu_upvr:WaitForChild("buttonsFrame"):WaitForChild("giftButton").Visible = false
            fortuneMenu_upvr:WaitForChild("buttonsFrame"):WaitForChild("buySpinsButton").Visible = false
            sideButtons_upvr_3:WaitForChild("tradeButton").Visible = false
            if tradeMenu_upvr.Visible == true then
                resetMenus_upvr()
            end
        end
    end)
    local listFrame_upvr_2 = tradeMenu_upvr:WaitForChild("listBackImage"):WaitForChild("listFrame")
    local isTrading_upvr = LocalPlayer_upvr:WaitForChild("isTrading")
    local otherOfferMenu_upvr_2 = tradePanel_upvr:WaitForChild("otherOfferMenu")
    local yourOfferMenu_upvr = tradePanel_upvr:WaitForChild("yourOfferMenu")
    local acceptButton_upvr = tradePanel_upvr:WaitForChild("acceptButton")
    local cancelButton_upvr = tradePanel_upvr:WaitForChild("cancelButton")
    local tradeSuccessMenu_upvr_2 = Parent_3_upvr:WaitForChild("tradeSuccessMenu")
    local sideButtons_upvr = tradePanel_upvr:WaitForChild("sideButtons")
    local petsButton_upvr_2 = sideButtons_upvr:WaitForChild("petsButton")
    local itemsButton_upvr = sideButtons_upvr:WaitForChild("itemsButton")
    local noPetsLabel_upvr_2 = tradePanel_upvr:WaitForChild("noPetsLabel")
    local noItemsLabel_upvr = tradePanel_upvr:WaitForChild("noItemsLabel")
    local tickImage_upvr_2 = script:WaitForChild("tickImage")
    var78_upvw = petsButton_upvr_2
    var78_upvw.Size = UDim2.new(1.1, 0, 0.5, 0)
    var78_upvw:WaitForChild("backSquare").ImageColor3 = var78_upvw:WaitForChild("hoverButtonColor").Value
    var78_upvw.backSquare:WaitForChild("squareShadow").ImageColor3 = var78_upvw:WaitForChild("underButtonHoverColor").Value
    var78_upvw:WaitForChild("buttonLabel").TextColor3 = var78_upvw:WaitForChild("hoverButtonColor").Value
    local xButton_upvr = tradeSuccessMenu_upvr_2:WaitForChild("xButton")
    local enableButton_upvr = tradeMenu_upvr:WaitForChild("tradingLabel"):WaitForChild("enableButton")
    if tradingOn_3_upvr.Value == false then
        enableButton_upvr:WaitForChild("backSquare").ImageColor3 = enableButton_upvr:WaitForChild("disabledButtonColor").Value
        enableButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = enableButton_upvr:WaitForChild("disabledUnderButtonColor").Value
        enableButton_upvr:WaitForChild("buttonLabel").Text = "Disabled"
        enableButton_upvr.buttonLabel:WaitForChild("shadow").Text = enableButton_upvr.buttonLabel.Text
    end
    local petButton_upvr_2 = script:WaitForChild("petButton")
    local confirmCoverFrame_upvr = Parent_3_upvr:WaitForChild("confirmCoverFrame")
    local confirmMenu_upvr = Parent_3_upvr:WaitForChild("confirmMenu")
    local noButton_upvr_2 = confirmMenu_upvr:WaitForChild("noButton")
    local function getEmptyPetTradingPage_upvr() -- Line 6764, Named "getEmptyPetTradingPage"
        --[[ Upvalues[6]:
            [1]: noPetsLabel_upvr_2 (readonly)
            [2]: petsFrames_upvr (copied, readonly)
            [3]: inventoryPage_upvr (copied, readonly)
            [4]: var875_upvw (copied, read and write)
            [5]: var876_upvw (copied, read and write)
            [6]: tradePanel_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        noPetsLabel_upvr_2.Visible = false
        local pairs_result1_77, pairs_result2_2, pairs_result3_46 = pairs(petsFrames_upvr:GetChildren())
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [27] 22. Error Block 5 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [27] 22. Error Block 5 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [13] 11. Error Block 2 start (CF ANALYSIS FAILED)
        -- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [27.6]
        -- KONSTANTERROR: [13] 11. Error Block 2 end (CF ANALYSIS FAILED)
    end
    local function createPetTradingButton_upvr(arg1) -- Line 6810, Named "createPetTradingButton"
        --[[ Upvalues[10]:
            [1]: petButton_upvr_2 (readonly)
            [2]: rarityColorsFolder_upvr (copied, readonly)
            [3]: TweenService_upvr (copied, readonly)
            [4]: getEmptyPetTradingPage_upvr (readonly)
            [5]: hoverSound_upvr (copied, readonly)
            [6]: clickSound_upvr (copied, readonly)
            [7]: ReplicatedStorage_upvr (copied, readonly)
            [8]: LocalPlayer_upvr (copied, readonly)
            [9]: tradingEvent_upvr (copied, readonly)
            [10]: tickImage_upvr_2 (readonly)
        ]]
        if arg1 ~= nil and arg1:FindFirstChild("untradeable") == nil then
            local clone_4_upvr = petButton_upvr_2:Clone()
            clone_4_upvr:WaitForChild("nameLabel").Text = arg1.Name
            clone_4_upvr.nameLabel:WaitForChild("shadow").Text = clone_4_upvr.nameLabel.Text
            clone_4_upvr:WaitForChild("levelLabel").Text = "Level "..tostring(arg1:WaitForChild("level").Value)
            clone_4_upvr.levelLabel:WaitForChild("shadow").Text = clone_4_upvr.levelLabel.shadow.Text
            clone_4_upvr:WaitForChild("petImage").Image = arg1.Value
            local SOME_17 = rarityColorsFolder_upvr:WaitForChild(arg1.Parent.Name)
            clone_4_upvr:WaitForChild("backSquare").ImageColor3 = SOME_17.Value
            clone_4_upvr.backSquare:WaitForChild("squareShadow").ImageColor3 = SOME_17:WaitForChild("underColor").Value
            local ObjectValue_upvr_17 = Instance.new("ObjectValue")
            ObjectValue_upvr_17.Name = "tweenValue"
            ObjectValue_upvr_17.Parent = clone_4_upvr
            local ObjectValue_upvr_5 = Instance.new("ObjectValue")
            ObjectValue_upvr_5.Name = "petReference"
            ObjectValue_upvr_5.Value = arg1
            ObjectValue_upvr_5.Parent = clone_4_upvr
            if ObjectValue_upvr_5.Value:FindFirstChild("evolved") ~= nil then
                local clone_2 = script:WaitForChild("evolvedGlow"):Clone()
                clone_2.Parent = clone_4_upvr:WaitForChild("evolvedFrame")
                TweenService_upvr:Create(clone_2, TweenInfo.new(1.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, -1, false, 0), {
                    Position = UDim2.new(2, 0, 2, 0);
                }):Play()
                clone_4_upvr:WaitForChild("evolvedLabel").Visible = true
            end
            clone_4_upvr.Parent = getEmptyPetTradingPage_upvr()
            local function petButtonHover() -- Line 6851
                --[[ Upvalues[4]:
                    [1]: hoverSound_upvr (copied, readonly)
                    [2]: clone_4_upvr (readonly)
                    [3]: ObjectValue_upvr_17 (readonly)
                    [4]: TweenService_upvr (copied, readonly)
                ]]
                hoverSound_upvr:Play()
                clone_4_upvr:WaitForChild("nameLabel").TextColor3 = clone_4_upvr:WaitForChild("backSquare").ImageColor3
                clone_4_upvr:WaitForChild("levelLabel").TextColor3 = clone_4_upvr:WaitForChild("backSquare").ImageColor3
                if ObjectValue_upvr_17.Value ~= nil then
                    ObjectValue_upvr_17.Value:Cancel()
                end
                clone_4_upvr:WaitForChild("petImage").Rotation = 0
                local randint_2 = math.random(1, 2)
                if randint_2 == 1 then
                    randint_2 = -15
                else
                    randint_2 = 15
                end
                ObjectValue_upvr_17.Value = TweenService_upvr:Create(clone_4_upvr:WaitForChild("petImage"), TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
                    Rotation = randint_2;
                })
                ObjectValue_upvr_17.Value:Play()
            end
            local function petButtonExit() -- Line 6876
                --[[ Upvalues[1]:
                    [1]: clone_4_upvr (readonly)
                ]]
                clone_4_upvr:WaitForChild("nameLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                clone_4_upvr:WaitForChild("levelLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
            end
            clone_4_upvr.MouseEnter:Connect(petButtonHover)
            clone_4_upvr.SelectionGained:Connect(petButtonHover)
            clone_4_upvr.MouseLeave:Connect(petButtonExit)
            clone_4_upvr.SelectionLost:Connect(petButtonExit)
            local function petButtonClick() -- Line 6887
                --[[ Upvalues[7]:
                    [1]: ObjectValue_upvr_5 (readonly)
                    [2]: clickSound_upvr (copied, readonly)
                    [3]: ReplicatedStorage_upvr (copied, readonly)
                    [4]: LocalPlayer_upvr (copied, readonly)
                    [5]: tradingEvent_upvr (copied, readonly)
                    [6]: clone_4_upvr (readonly)
                    [7]: tickImage_upvr_2 (copied, readonly)
                ]]
                -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [3] 3. Error Block 2 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [3] 3. Error Block 2 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [8] 6. Error Block 3 start (CF ANALYSIS FAILED)
                local Parent_4 = ObjectValue_upvr_5.Value.Parent
                -- KONSTANTERROR: [8] 6. Error Block 3 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [58] 41. Error Block 11 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [58] 41. Error Block 11 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [119] 81. Error Block 22 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [119] 81. Error Block 22 end (CF ANALYSIS FAILED)
            end
            clone_4_upvr.Activated:Connect(petButtonClick)
        end
    end
    local function getEmptyItemTradingPage_upvr() -- Line 6948, Named "getEmptyItemTradingPage"
        --[[ Upvalues[6]:
            [1]: noItemsLabel_upvr (readonly)
            [2]: auraFrames_upvr (copied, readonly)
            [3]: inventoryPage_upvr (copied, readonly)
            [4]: var879_upvw (copied, read and write)
            [5]: var880_upvw (copied, read and write)
            [6]: tradePanel_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        noItemsLabel_upvr.Visible = false
        local pairs_result1_29, pairs_result2_34, pairs_result3_44 = pairs(auraFrames_upvr:GetChildren())
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [27] 22. Error Block 5 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [27] 22. Error Block 5 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [13] 11. Error Block 2 start (CF ANALYSIS FAILED)
        -- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [27.6]
        -- KONSTANTERROR: [13] 11. Error Block 2 end (CF ANALYSIS FAILED)
    end
    local function createTradingItemButton_upvr(arg1) -- Line 6994, Named "createTradingItemButton"
        --[[ Upvalues[10]:
            [1]: powerUpButton_upvr (copied, readonly)
            [2]: rarityColorsFolder_upvr (copied, readonly)
            [3]: TweenService_upvr (copied, readonly)
            [4]: getEmptyItemTradingPage_upvr (readonly)
            [5]: hoverSound_upvr (copied, readonly)
            [6]: clickSound_upvr (copied, readonly)
            [7]: ReplicatedStorage_upvr (copied, readonly)
            [8]: LocalPlayer_upvr (copied, readonly)
            [9]: tradingEvent_upvr (copied, readonly)
            [10]: tickImage_upvr_2 (readonly)
        ]]
        if arg1 ~= nil and arg1.Name ~= "itemImage" then
            local clone_5_upvr = powerUpButton_upvr:Clone()
            local SOME_11 = rarityColorsFolder_upvr:FindFirstChild(arg1.Parent.Name)
            if SOME_11 ~= nil then
                clone_5_upvr:WaitForChild("backSquare").ImageColor3 = SOME_11.Value
                clone_5_upvr.backSquare:WaitForChild("squareShadow").ImageColor3 = SOME_11:WaitForChild("underColor").Value
            end
            clone_5_upvr:WaitForChild("nameLabel").Text = arg1.Name
            clone_5_upvr.nameLabel:WaitForChild("shadow").Text = clone_5_upvr.nameLabel.Text
            clone_5_upvr:WaitForChild("levelLabel").Text = "Level "..tostring(arg1:WaitForChild("level").Value)
            clone_5_upvr.levelLabel:WaitForChild("shadow").Text = clone_5_upvr.levelLabel.Text
            clone_5_upvr:WaitForChild("powerUpImage").Image = arg1.Texture
            if arg1.Texture == "" then
                clone_5_upvr:WaitForChild("powerUpImage").BackgroundColor3 = arg1.Color.Keypoints[1].Value
                clone_5_upvr.powerUpImage.BackgroundTransparency = 0.2
                clone_5_upvr.powerUpImage.Size = UDim2.new(0.8, 0, 0.8, 0)
            end
            clone_5_upvr.powerUpImage.ImageColor3 = arg1.Color.Keypoints[1].Value
            local ObjectValue_upvr_16 = Instance.new("ObjectValue")
            ObjectValue_upvr_16.Name = "itemReference"
            ObjectValue_upvr_16.Value = arg1
            ObjectValue_upvr_16.Parent = clone_5_upvr
            if ObjectValue_upvr_16.Value:FindFirstChild("evolved") ~= nil then
                local clone_33 = script:WaitForChild("evolvedGlow"):Clone()
                clone_33.Parent = clone_5_upvr:WaitForChild("evolvedFrame")
                TweenService_upvr:Create(clone_33, TweenInfo.new(1.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, -1, false, 0), {
                    Position = UDim2.new(2, 0, 2, 0);
                }):Play()
                clone_5_upvr:WaitForChild("evolvedLabel").Visible = true
            end
            clone_5_upvr.Parent = getEmptyItemTradingPage_upvr()
            local ObjectValue_upvr_15 = Instance.new("ObjectValue")
            ObjectValue_upvr_15.Name = "tweenValue"
            ObjectValue_upvr_15.Parent = clone_5_upvr
            local function itemButtonCHover() -- Line 7046
                --[[ Upvalues[4]:
                    [1]: clone_5_upvr (readonly)
                    [2]: hoverSound_upvr (copied, readonly)
                    [3]: ObjectValue_upvr_15 (readonly)
                    [4]: TweenService_upvr (copied, readonly)
                ]]
                if clone_5_upvr ~= nil and clone_5_upvr.Parent ~= nil then
                    hoverSound_upvr:Play()
                    for _, v_58 in pairs(clone_5_upvr.Parent:GetChildren()) do
                        if v_58:IsA("TextButton") and v_58 ~= clone_5_upvr and v_58:FindFirstChild("nameLabel") ~= nil and v_58:FindFirstChild("levelLabel") ~= nil then
                            v_58.nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                            v_58.levelLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                        end
                    end
                    clone_5_upvr:WaitForChild("nameLabel").TextColor3 = clone_5_upvr:WaitForChild("backSquare").ImageColor3
                    clone_5_upvr:WaitForChild("levelLabel").TextColor3 = clone_5_upvr:WaitForChild("backSquare").ImageColor3
                    if ObjectValue_upvr_15.Value ~= nil then
                        ObjectValue_upvr_15.Value:Cancel()
                    end
                    clone_5_upvr:WaitForChild("powerUpImage").Rotation = 0
                    local randint_3 = math.random(1, 2)
                    if randint_3 == 1 then
                        randint_3 = -15
                    else
                        randint_3 = 15
                    end
                    ObjectValue_upvr_15.Value = TweenService_upvr:Create(clone_5_upvr:WaitForChild("powerUpImage"), TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
                        Rotation = randint_3;
                    })
                    ObjectValue_upvr_15.Value:Play()
                end
            end
            clone_5_upvr.MouseEnter:Connect(itemButtonCHover)
            clone_5_upvr.SelectionGained:Connect(itemButtonCHover)
            local function itemButtonCLeave() -- Line 7085
                --[[ Upvalues[1]:
                    [1]: clone_5_upvr (readonly)
                ]]
                if clone_5_upvr ~= nil and clone_5_upvr.Parent ~= nil then
                    clone_5_upvr:WaitForChild("nameLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                    clone_5_upvr:WaitForChild("levelLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                end
            end
            clone_5_upvr.MouseLeave:Connect(itemButtonCLeave)
            clone_5_upvr.SelectionLost:Connect(itemButtonCLeave)
            local function itemButtonClick() -- Line 7097
                --[[ Upvalues[7]:
                    [1]: ObjectValue_upvr_16 (readonly)
                    [2]: clickSound_upvr (copied, readonly)
                    [3]: ReplicatedStorage_upvr (copied, readonly)
                    [4]: LocalPlayer_upvr (copied, readonly)
                    [5]: tradingEvent_upvr (copied, readonly)
                    [6]: clone_5_upvr (readonly)
                    [7]: tickImage_upvr_2 (copied, readonly)
                ]]
                -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [3] 3. Error Block 2 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [3] 3. Error Block 2 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [8] 6. Error Block 3 start (CF ANALYSIS FAILED)
                local Parent = ObjectValue_upvr_16.Value.Parent
                -- KONSTANTERROR: [8] 6. Error Block 3 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [58] 41. Error Block 11 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [58] 41. Error Block 11 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [119] 81. Error Block 22 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [119] 81. Error Block 22 end (CF ANALYSIS FAILED)
            end
            clone_5_upvr.Activated:Connect(itemButtonClick)
        end
    end
    local function createPetOfferButton_upvr(arg1, arg2) -- Line 7159, Named "createPetOfferButton"
        --[[ Upvalues[8]:
            [1]: petButton_upvr_2 (readonly)
            [2]: rarityColorsFolder_upvr (copied, readonly)
            [3]: TweenService_upvr (copied, readonly)
            [4]: yourOfferMenu_upvr (readonly)
            [5]: hoverSound_upvr (copied, readonly)
            [6]: clickSound_upvr (copied, readonly)
            [7]: tradingEvent_upvr (copied, readonly)
            [8]: petsFrames_upvr (copied, readonly)
        ]]
        if arg1 ~= nil and arg1:FindFirstChild("rarityType") ~= nil and arg1:FindFirstChild("itemReference").Value then
            local clone_40_upvr = petButton_upvr_2:Clone()
            clone_40_upvr:WaitForChild("nameLabel").Text = arg1.Name
            clone_40_upvr.nameLabel:WaitForChild("shadow").Text = clone_40_upvr.nameLabel.Text
            clone_40_upvr:WaitForChild("levelLabel").Text = "Level "..tostring(arg1:WaitForChild("level").Value)
            clone_40_upvr.levelLabel:WaitForChild("shadow").Text = clone_40_upvr.levelLabel.shadow.Text
            clone_40_upvr:WaitForChild("petImage").Image = arg1.Value
            local SOME_20 = rarityColorsFolder_upvr:WaitForChild(arg1.rarityType.Value)
            clone_40_upvr:WaitForChild("backSquare").ImageColor3 = SOME_20.Value
            clone_40_upvr.backSquare:WaitForChild("squareShadow").ImageColor3 = SOME_20:WaitForChild("underColor").Value
            local ObjectValue_upvr_13 = Instance.new("ObjectValue")
            ObjectValue_upvr_13.Name = "tweenValue"
            ObjectValue_upvr_13.Parent = clone_40_upvr
            local ObjectValue_upvr_12 = Instance.new("ObjectValue")
            ObjectValue_upvr_12.Name = "petReference"
            ObjectValue_upvr_12.Value = arg1.itemReference.Value
            ObjectValue_upvr_12.Parent = clone_40_upvr
            if ObjectValue_upvr_12.Value:FindFirstChild("evolved") ~= nil then
                local clone_11 = script:WaitForChild("evolvedGlow"):Clone()
                clone_11.Parent = clone_40_upvr:WaitForChild("evolvedFrame")
                TweenService_upvr:Create(clone_11, TweenInfo.new(1.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, -1, false, 0), {
                    Position = UDim2.new(2, 0, 2, 0);
                }):Play()
                clone_40_upvr:WaitForChild("evolvedLabel").Visible = true
            end
            clone_40_upvr.Parent = arg2:WaitForChild("itemFrames"):WaitForChild("inventoryPage")
            if arg2 == yourOfferMenu_upvr then
                local function petButtonHover() -- Line 7202
                    --[[ Upvalues[4]:
                        [1]: hoverSound_upvr (copied, readonly)
                        [2]: clone_40_upvr (readonly)
                        [3]: ObjectValue_upvr_13 (readonly)
                        [4]: TweenService_upvr (copied, readonly)
                    ]]
                    hoverSound_upvr:Play()
                    clone_40_upvr:WaitForChild("nameLabel").TextColor3 = clone_40_upvr:WaitForChild("backSquare").ImageColor3
                    clone_40_upvr:WaitForChild("levelLabel").TextColor3 = clone_40_upvr:WaitForChild("backSquare").ImageColor3
                    if ObjectValue_upvr_13.Value ~= nil then
                        ObjectValue_upvr_13.Value:Cancel()
                    end
                    clone_40_upvr:WaitForChild("petImage").Rotation = 0
                    local randint = math.random(1, 2)
                    if randint == 1 then
                        randint = -15
                    else
                        randint = 15
                    end
                    ObjectValue_upvr_13.Value = TweenService_upvr:Create(clone_40_upvr:WaitForChild("petImage"), TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
                        Rotation = randint;
                    })
                    ObjectValue_upvr_13.Value:Play()
                end
                local function petButtonExit() -- Line 7227
                    --[[ Upvalues[1]:
                        [1]: clone_40_upvr (readonly)
                    ]]
                    clone_40_upvr:WaitForChild("nameLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                    clone_40_upvr:WaitForChild("levelLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                end
                clone_40_upvr.MouseEnter:Connect(petButtonHover)
                clone_40_upvr.SelectionGained:Connect(petButtonHover)
                clone_40_upvr.MouseLeave:Connect(petButtonExit)
                clone_40_upvr.SelectionLost:Connect(petButtonExit)
                clone_40_upvr.Activated:Connect(function() -- Line 7238, Named "petButtonClick"
                    --[[ Upvalues[5]:
                        [1]: ObjectValue_upvr_12 (readonly)
                        [2]: clickSound_upvr (copied, readonly)
                        [3]: tradingEvent_upvr (copied, readonly)
                        [4]: arg1 (readonly)
                        [5]: petsFrames_upvr (copied, readonly)
                    ]]
                    -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [3] 3. Error Block 2 start (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [3] 3. Error Block 2 end (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [8] 6. Error Block 3 start (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [8] 6. Error Block 3 end (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [91] 62. Error Block 18 start (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [91] 62. Error Block 18 end (CF ANALYSIS FAILED)
                end)
            end
        end
    end
    local function createItemOfferButton_upvr(arg1, arg2) -- Line 7276, Named "createItemOfferButton"
        --[[ Upvalues[8]:
            [1]: powerUpButton_upvr (copied, readonly)
            [2]: rarityColorsFolder_upvr (copied, readonly)
            [3]: TweenService_upvr (copied, readonly)
            [4]: yourOfferMenu_upvr (readonly)
            [5]: hoverSound_upvr (copied, readonly)
            [6]: clickSound_upvr (copied, readonly)
            [7]: tradingEvent_upvr (copied, readonly)
            [8]: auraFrames_upvr (copied, readonly)
        ]]
        if arg1 ~= nil and arg1.Name ~= "itemImage" then
            if arg1:FindFirstChild("rarityType") ~= nil and arg1:FindFirstChild("itemReference").Value then
                local clone_28_upvr = powerUpButton_upvr:Clone()
                local SOME_19 = rarityColorsFolder_upvr:FindFirstChild(arg1.rarityType.Value)
                if SOME_19 ~= nil then
                    clone_28_upvr:WaitForChild("backSquare").ImageColor3 = SOME_19.Value
                    clone_28_upvr.backSquare:WaitForChild("squareShadow").ImageColor3 = SOME_19:WaitForChild("underColor").Value
                end
                clone_28_upvr:WaitForChild("nameLabel").Text = arg1.Name
                clone_28_upvr.nameLabel:WaitForChild("shadow").Text = clone_28_upvr.nameLabel.Text
                clone_28_upvr:WaitForChild("levelLabel").Text = "Level "..tostring(arg1:WaitForChild("level").Value)
                clone_28_upvr.levelLabel:WaitForChild("shadow").Text = clone_28_upvr.levelLabel.Text
                clone_28_upvr:WaitForChild("powerUpImage").Image = arg1.Texture
                if arg1.Texture == "" then
                    clone_28_upvr:WaitForChild("powerUpImage").BackgroundColor3 = arg1.Color.Keypoints[1].Value
                    clone_28_upvr.powerUpImage.BackgroundTransparency = 0.2
                    clone_28_upvr.powerUpImage.Size = UDim2.new(0.8, 0, 0.8, 0)
                end
                clone_28_upvr.powerUpImage.ImageColor3 = arg1.Color.Keypoints[1].Value
                local ObjectValue_upvr_3 = Instance.new("ObjectValue")
                ObjectValue_upvr_3.Name = "itemReference"
                ObjectValue_upvr_3.Value = arg1.itemReference.Value
                ObjectValue_upvr_3.Parent = clone_28_upvr
                if ObjectValue_upvr_3.Value:FindFirstChild("evolved") ~= nil then
                    local clone = script:WaitForChild("evolvedGlow"):Clone()
                    clone.Parent = clone_28_upvr:WaitForChild("evolvedFrame")
                    TweenService_upvr:Create(clone, TweenInfo.new(1.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, -1, false, 0), {
                        Position = UDim2.new(2, 0, 2, 0);
                    }):Play()
                    clone_28_upvr:WaitForChild("evolvedLabel").Visible = true
                end
                clone_28_upvr.Parent = arg2:WaitForChild("itemFrames"):WaitForChild("inventoryPage")
                local ObjectValue_upvr_10 = Instance.new("ObjectValue")
                ObjectValue_upvr_10.Name = "tweenValue"
                ObjectValue_upvr_10.Parent = clone_28_upvr
                if arg2 == yourOfferMenu_upvr then
                    local function itemButtonCHover() -- Line 7330
                        --[[ Upvalues[4]:
                            [1]: clone_28_upvr (readonly)
                            [2]: hoverSound_upvr (copied, readonly)
                            [3]: ObjectValue_upvr_10 (readonly)
                            [4]: TweenService_upvr (copied, readonly)
                        ]]
                        if clone_28_upvr ~= nil and clone_28_upvr.Parent ~= nil then
                            hoverSound_upvr:Play()
                            for _, v_59 in pairs(clone_28_upvr.Parent:GetChildren()) do
                                if v_59:IsA("TextButton") and v_59 ~= clone_28_upvr and v_59:FindFirstChild("nameLabel") ~= nil and v_59:FindFirstChild("levelLabel") ~= nil then
                                    v_59.nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                                    v_59.levelLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                                end
                            end
                            clone_28_upvr:WaitForChild("nameLabel").TextColor3 = clone_28_upvr:WaitForChild("backSquare").ImageColor3
                            clone_28_upvr:WaitForChild("levelLabel").TextColor3 = clone_28_upvr:WaitForChild("backSquare").ImageColor3
                            if ObjectValue_upvr_10.Value ~= nil then
                                ObjectValue_upvr_10.Value:Cancel()
                            end
                            clone_28_upvr:WaitForChild("powerUpImage").Rotation = 0
                            local randint_6 = math.random(1, 2)
                            if randint_6 == 1 then
                                randint_6 = -15
                            else
                                randint_6 = 15
                            end
                            ObjectValue_upvr_10.Value = TweenService_upvr:Create(clone_28_upvr:WaitForChild("powerUpImage"), TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
                                Rotation = randint_6;
                            })
                            ObjectValue_upvr_10.Value:Play()
                        end
                    end
                    clone_28_upvr.MouseEnter:Connect(itemButtonCHover)
                    clone_28_upvr.SelectionGained:Connect(itemButtonCHover)
                    local function itemButtonCLeave() -- Line 7369
                        --[[ Upvalues[1]:
                            [1]: clone_28_upvr (readonly)
                        ]]
                        if clone_28_upvr ~= nil and clone_28_upvr.Parent ~= nil then
                            clone_28_upvr:WaitForChild("nameLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                            clone_28_upvr:WaitForChild("levelLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                        end
                    end
                    clone_28_upvr.MouseLeave:Connect(itemButtonCLeave)
                    clone_28_upvr.SelectionLost:Connect(itemButtonCLeave)
                    clone_28_upvr.Activated:Connect(function() -- Line 7381, Named "itemButtonClick"
                        --[[ Upvalues[5]:
                            [1]: ObjectValue_upvr_3 (readonly)
                            [2]: clickSound_upvr (copied, readonly)
                            [3]: tradingEvent_upvr (copied, readonly)
                            [4]: arg1 (readonly)
                            [5]: auraFrames_upvr (copied, readonly)
                        ]]
                        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
                        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
                        -- KONSTANTERROR: [3] 3. Error Block 2 start (CF ANALYSIS FAILED)
                        -- KONSTANTERROR: [3] 3. Error Block 2 end (CF ANALYSIS FAILED)
                        -- KONSTANTERROR: [8] 6. Error Block 3 start (CF ANALYSIS FAILED)
                        -- KONSTANTERROR: [8] 6. Error Block 3 end (CF ANALYSIS FAILED)
                        -- KONSTANTERROR: [91] 62. Error Block 18 start (CF ANALYSIS FAILED)
                        -- KONSTANTERROR: [91] 62. Error Block 18 end (CF ANALYSIS FAILED)
                    end)
                end
            end
        end
    end
    local function tradeSideButtonsClick_upvr(arg1) -- Line 7420, Named "tradeSideButtonsClick"
        --[[ Upvalues[9]:
            [1]: var78_upvw (copied, read and write)
            [2]: clickSound_upvr (copied, readonly)
            [3]: sideButtons_upvr (readonly)
            [4]: petsButton_upvr_2 (readonly)
            [5]: petsFrames_upvr (copied, readonly)
            [6]: auraFrames_upvr (copied, readonly)
            [7]: noItemsLabel_upvr (readonly)
            [8]: noPetsLabel_upvr_2 (readonly)
            [9]: itemsButton_upvr (readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [3] 3. Error Block 19 start (CF ANALYSIS FAILED)
        clickSound_upvr:Play()
        var78_upvw = arg1
        for _, v_60 in pairs(sideButtons_upvr:GetChildren()) do
            if v_60:IsA("TextButton") and v_60 ~= var78_upvw then
                v_60:TweenSize(UDim2.new(1, 0, 0.45, 0), "Out", "Quad", 0.25, true)
                v_60:WaitForChild("backSquare").ImageColor3 = v_60:WaitForChild("buttonColor").Value
                v_60.backSquare:WaitForChild("squareShadow").ImageColor3 = v_60:WaitForChild("underButtonColor").Value
                v_60:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
            end
        end
        arg1:TweenSize(UDim2.new(1.1, 0, 0.5, 0), "Out", "Quad", 0.25, true)
        arg1:WaitForChild("backSquare").ImageColor3 = arg1:WaitForChild("hoverButtonColor").Value
        arg1.backSquare:WaitForChild("squareShadow").ImageColor3 = arg1:WaitForChild("underButtonHoverColor").Value
        -- KONSTANTERROR: [3] 3. Error Block 19 end (CF ANALYSIS FAILED)
    end
    for _, v_61_upvr in pairs(sideButtons_upvr:GetChildren()) do
        if v_61_upvr:IsA("TextButton") then
            v_61_upvr.Activated:Connect(function() -- Line 7476
                --[[ Upvalues[2]:
                    [1]: tradeSideButtonsClick_upvr (readonly)
                    [2]: v_61_upvr (readonly)
                ]]
                tradeSideButtonsClick_upvr(v_61_upvr)
            end)
        end
    end
    local function _(arg1) -- Line 7480, Named "checkIfPlrIsInBrawl"
        if arg1 ~= nil and arg1.Character ~= nil then
            if arg1.Character:FindFirstChild("lastMapCFrame") ~= nil then
                return true
            end
        end
        return false
    end
    local playerTradeFrame_upvr = script:WaitForChild("playerTradeFrame")
    local function createNewTradeFrame_upvr(arg1) -- Line 7488, Named "createNewTradeFrame"
        --[[ Upvalues[10]:
            [1]: playerTradeFrame_upvr (readonly)
            [2]: listFrame_upvr_2 (readonly)
            [3]: Strength_4_upvr (copied, readonly)
            [4]: Rebirths_upvr (copied, readonly)
            [5]: hoverSound_upvr (copied, readonly)
            [6]: isTrading_upvr (readonly)
            [7]: tradingOn_3_upvr (copied, readonly)
            [8]: LocalPlayer_upvr (copied, readonly)
            [9]: clickSound_upvr (copied, readonly)
            [10]: tradingEvent_upvr (copied, readonly)
        ]]
        local clone_7_upvr = playerTradeFrame_upvr:Clone()
        clone_7_upvr:WaitForChild("nameLabel").Text = arg1.DisplayName
        clone_7_upvr.nameLabel:WaitForChild("shadow").Text = clone_7_upvr.nameLabel.Text
        local StringValue_2 = Instance.new("StringValue")
        StringValue_2.Name = "nameValue"
        StringValue_2.Value = arg1.Name
        StringValue_2.Parent = clone_7_upvr
        local tradeButton_upvr = clone_7_upvr:WaitForChild("nameLabel"):WaitForChild("tradeButton")
        clone_7_upvr.Parent = listFrame_upvr_2
        local BoolValue_upvr_2 = Instance.new("BoolValue")
        BoolValue_upvr_2.Value = true
        BoolValue_upvr_2.Name = "canHoverTradeButton"
        BoolValue_upvr_2.Parent = tradeButton_upvr
        local function tradeFrameButtonHover() -- Line 7509
            --[[ Upvalues[6]:
                [1]: BoolValue_upvr_2 (readonly)
                [2]: arg1 (readonly)
                [3]: Strength_4_upvr (copied, readonly)
                [4]: Rebirths_upvr (copied, readonly)
                [5]: hoverSound_upvr (copied, readonly)
                [6]: tradeButton_upvr (readonly)
            ]]
            if BoolValue_upvr_2.Value == true then
                if arg1 ~= nil and arg1.Parent ~= nil and arg1:FindFirstChild("tradingOn") ~= nil and arg1:FindFirstChild("isTrading") ~= nil then
                    local leaderstats_5 = arg1:FindFirstChild("leaderstats")
                    if leaderstats_5 ~= nil then
                        local var1141 = arg1
                        if var1141 ~= nil and var1141.Character ~= nil and var1141.Character:FindFirstChild("lastMapCFrame") ~= nil then
                            leaderstats_5 = true
                        else
                            leaderstats_5 = false
                        end
                        if leaderstats_5 == false then
                            leaderstats_5 = arg1.tradingOn.Value
                            if leaderstats_5 == true then
                                leaderstats_5 = arg1.isTrading.Value
                                if leaderstats_5 == false then
                                    leaderstats_5 = arg1.leaderstats:FindFirstChild("Strength")
                                    if leaderstats_5 ~= nil then
                                        leaderstats_5 = arg1.leaderstats:FindFirstChild("Rebirths")
                                        if leaderstats_5 ~= nil then
                                            leaderstats_5 = arg1.leaderstats.Strength.Value
                                            if leaderstats_5 < 1000 then
                                                leaderstats_5 = arg1.leaderstats.Rebirths.Value
                                                if leaderstats_5 < 1 then return end
                                            end
                                            leaderstats_5 = Strength_4_upvr.Value
                                            if leaderstats_5 < 1000 then
                                                leaderstats_5 = Rebirths_upvr.Value
                                                if leaderstats_5 < 1 then return end
                                            end
                                            leaderstats_5 = hoverSound_upvr:Play
                                            leaderstats_5()
                                            leaderstats_5 = tradeButton_upvr:TweenSize
                                            leaderstats_5(UDim2.new(0.82, 0, 1.1, 0), "Out", "Quad", 0.25, true)
                                            leaderstats_5 = tradeButton_upvr:WaitForChild("buttonLabel")
                                            leaderstats_5.TextColor3 = tradeButton_upvr:WaitForChild("backSquare").ImageColor3
                                            leaderstats_5 = tradeButton_upvr:WaitForChild("backSquare")
                                            leaderstats_5.ImageColor3 = tradeButton_upvr:WaitForChild("hoverButtonColor").Value
                                            leaderstats_5 = tradeButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow"):TweenPosition
                                            leaderstats_5(UDim2.new(0, 0, 0.5, 0), "Out", "Quad", 0.25, true)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        tradeButton_upvr.MouseEnter:Connect(tradeFrameButtonHover)
        tradeButton_upvr.SelectionGained:Connect(tradeFrameButtonHover)
        local function tradeFrameButtonExit() -- Line 7542
            --[[ Upvalues[5]:
                [1]: BoolValue_upvr_2 (readonly)
                [2]: arg1 (readonly)
                [3]: Strength_4_upvr (copied, readonly)
                [4]: Rebirths_upvr (copied, readonly)
                [5]: tradeButton_upvr (readonly)
            ]]
            if BoolValue_upvr_2.Value == true then
                if arg1 ~= nil and arg1.Parent ~= nil and arg1:FindFirstChild("tradingOn") ~= nil and arg1:FindFirstChild("isTrading") ~= nil then
                    local leaderstats_2 = arg1:FindFirstChild("leaderstats")
                    if leaderstats_2 ~= nil then
                        local var1143 = arg1
                        if var1143 ~= nil and var1143.Character ~= nil and var1143.Character:FindFirstChild("lastMapCFrame") ~= nil then
                            leaderstats_2 = true
                        else
                            leaderstats_2 = false
                        end
                        if leaderstats_2 == false then
                            leaderstats_2 = arg1.tradingOn.Value
                            if leaderstats_2 == true then
                                leaderstats_2 = arg1.isTrading.Value
                                if leaderstats_2 == false then
                                    leaderstats_2 = arg1.leaderstats:FindFirstChild("Strength")
                                    if leaderstats_2 ~= nil then
                                        leaderstats_2 = arg1.leaderstats:FindFirstChild("Rebirths")
                                        if leaderstats_2 ~= nil then
                                            leaderstats_2 = arg1.leaderstats.Strength.Value
                                            if leaderstats_2 < 1000 then
                                                leaderstats_2 = arg1.leaderstats.Rebirths.Value
                                                if leaderstats_2 < 1 then return end
                                            end
                                            leaderstats_2 = Strength_4_upvr.Value
                                            if leaderstats_2 < 1000 then
                                                leaderstats_2 = Rebirths_upvr.Value
                                                if leaderstats_2 < 1 then return end
                                            end
                                            leaderstats_2 = tradeButton_upvr:TweenSize
                                            leaderstats_2(UDim2.new(0.8, 0, 1, 0), "Out", "Quad", 0.25, true)
                                            leaderstats_2 = tradeButton_upvr:WaitForChild("buttonLabel")
                                            leaderstats_2.TextColor3 = Color3.fromRGB(255, 255, 255)
                                            leaderstats_2 = tradeButton_upvr:WaitForChild("backSquare")
                                            leaderstats_2.ImageColor3 = tradeButton_upvr:WaitForChild("buttonColor").Value
                                            leaderstats_2 = tradeButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow"):TweenPosition
                                            leaderstats_2(UDim2.new(0, 0, 0.53, 0), "Out", "Quad", 0.25, true)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        tradeButton_upvr.MouseLeave:Connect(tradeFrameButtonExit)
        tradeButton_upvr.SelectionLost:Connect(tradeFrameButtonExit)
        tradeButton_upvr.Activated:Connect(function() -- Line 7578, Named "tradeFrameButtonClick"
            --[[ Upvalues[10]:
                [1]: isTrading_upvr (copied, readonly)
                [2]: tradingOn_3_upvr (copied, readonly)
                [3]: clone_7_upvr (readonly)
                [4]: LocalPlayer_upvr (copied, readonly)
                [5]: Strength_4_upvr (copied, readonly)
                [6]: Rebirths_upvr (copied, readonly)
                [7]: clickSound_upvr (copied, readonly)
                [8]: tradingEvent_upvr (copied, readonly)
                [9]: BoolValue_upvr_2 (readonly)
                [10]: tradeButton_upvr (readonly)
            ]]
            -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [5] 4. Error Block 44 start (CF ANALYSIS FAILED)
            if tradingOn_3_upvr.Value == false then
                -- KONSTANTERROR: [10] 7. Error Block 3 start (CF ANALYSIS FAILED)
                do
                    return
                end
                -- KONSTANTERROR: [10] 7. Error Block 3 end (CF ANALYSIS FAILED)
            end
            local SOME_18 = game.Players:FindFirstChild(clone_7_upvr:WaitForChild("nameValue").Value)
            if SOME_18 ~= nil then
                if SOME_18 ~= nil then
                    if SOME_18.Character ~= nil and SOME_18.Character:FindFirstChild("lastMapCFrame") ~= nil then
                        -- KONSTANTWARNING: GOTO [45] #30
                    end
                end
                if false == false then
                    local isTrading_2 = SOME_18:FindFirstChild("isTrading")
                    local tradingOn = SOME_18:FindFirstChild("tradingOn")
                    local leaderstats_4 = SOME_18:FindFirstChild("leaderstats")
                    if isTrading_2 ~= nil and tradingOn ~= nil and SOME_18:FindFirstChild("tradeCooldownFolder") ~= nil and leaderstats_4 ~= nil then
                        local Strength_2 = leaderstats_4:FindFirstChild("Strength")
                        local Rebirths = leaderstats_4:FindFirstChild("Rebirths")
                        if isTrading_2.Value == false and tradingOn.Value == true and SOME_18:FindFirstChild("tradeCooldownFolder"):FindFirstChild(LocalPlayer_upvr.Name) == nil then
                            if Strength_2 ~= nil and Rebirths ~= nil then
                                if Strength_2.Value < 1000 and Rebirths.Value < 1 then return end
                                if Strength_4_upvr.Value < 1000 and Rebirths_upvr.Value < 1 then return end
                                clickSound_upvr:Play()
                                tradingEvent_upvr:FireServer("sendTradeRequest", SOME_18)
                                BoolValue_upvr_2.Value = false
                                tradeButton_upvr:WaitForChild("buttonLabel").Text = "Pending"
                                tradeButton_upvr.buttonLabel:WaitForChild("shadow").Text = tradeButton_upvr.buttonLabel.Text
                                tradeButton_upvr:WaitForChild("backSquare").ImageColor3 = tradeButton_upvr:WaitForChild("pendingButtonColor").Value
                                tradeButton_upvr.backSquare:WaitForChild("squareShadow").ImageColor3 = tradeButton_upvr:WaitForChild("pendingUnderButtonColor").Value
                                tradeButton_upvr.buttonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                            end
                        end
                    end
                end
            end
            -- KONSTANTERROR: [5] 4. Error Block 44 end (CF ANALYSIS FAILED)
        end)
    end
    local function showCorrectButtonType_upvr(arg1, arg2, arg3, arg4, arg5, arg6) -- Line 7636, Named "showCorrectButtonType"
        --[[ Upvalues[2]:
            [1]: tradingOn_3_upvr (copied, readonly)
            [2]: LocalPlayer_upvr (copied, readonly)
        ]]
        if arg1 == nil or arg1.Parent == nil then
        else
            if tradingOn_3_upvr.Value == false then
                arg6.Value = false
                arg2:WaitForChild("buttonLabel").Text = "Off"
                arg2.buttonLabel:WaitForChild("shadow").Text = arg2.buttonLabel.Text
                arg2:WaitForChild("backSquare").ImageColor3 = arg2:WaitForChild("tradingOffButtonColor").Value
                arg2.backSquare:WaitForChild("squareShadow").ImageColor3 = arg2:WaitForChild("tradingOffUnderButtonColor").Value
                arg2.buttonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                return
            end
            if arg3 ~= nil and arg3:FindFirstChild("Strength") ~= nil then
                if arg3:FindFirstChild("Rebirths") ~= nil and arg3.Strength.Value < 1000 and arg3.Rebirths.Value < 1 then
                    arg6.Value = false
                    arg2:WaitForChild("buttonLabel").Text = "Locked"
                    arg2.buttonLabel:WaitForChild("shadow").Text = arg2.buttonLabel.Text
                    arg2:WaitForChild("backSquare").ImageColor3 = arg2:WaitForChild("tradingOffButtonColor").Value
                    arg2.backSquare:WaitForChild("squareShadow").ImageColor3 = arg2:WaitForChild("tradingOffUnderButtonColor").Value
                    arg2.buttonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                    return
                end
            end
            local tradeCooldownFolder_2 = arg1:FindFirstChild("tradeCooldownFolder")
            if tradeCooldownFolder_2 ~= nil and tradeCooldownFolder_2:FindFirstChild(LocalPlayer_upvr.Name) ~= nil then
                arg6.Value = false
                arg2:WaitForChild("buttonLabel").Text = "Pending"
                arg2.buttonLabel:WaitForChild("shadow").Text = arg2.buttonLabel.Text
                arg2:WaitForChild("backSquare").ImageColor3 = arg2:WaitForChild("pendingButtonColor").Value
                arg2.backSquare:WaitForChild("squareShadow").ImageColor3 = arg2:WaitForChild("pendingUnderButtonColor").Value
                arg2.buttonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                do
                    return
                end
                local var1151
            end
            if arg1 ~= nil and arg1.Character ~= nil and arg1.Character:FindFirstChild("lastMapCFrame") ~= nil then
                var1151 = true
            else
                var1151 = false
            end
            if var1151 == true then
                var1151 = false
                arg6.Value = var1151
                var1151 = arg2:WaitForChild("buttonLabel")
                var1151.Text = "In Brawl"
                var1151 = arg2.buttonLabel:WaitForChild("shadow")
                var1151.Text = arg2.buttonLabel.Text
                var1151 = arg2:WaitForChild("backSquare")
                var1151.ImageColor3 = arg2:WaitForChild("tradingOffButtonColor").Value
                var1151 = arg2.backSquare:WaitForChild("squareShadow")
                var1151.ImageColor3 = arg2:WaitForChild("tradingOffUnderButtonColor").Value
                var1151 = arg2.buttonLabel
                var1151.TextColor3 = Color3.fromRGB(255, 255, 255)
                return
            end
            if arg4 ~= nil then
                var1151 = arg4.Value
                if var1151 == false then
                    var1151 = false
                    arg6.Value = var1151
                    var1151 = arg2:WaitForChild("buttonLabel")
                    var1151.Text = "Off"
                    var1151 = arg2.buttonLabel:WaitForChild("shadow")
                    var1151.Text = arg2.buttonLabel.Text
                    var1151 = arg2:WaitForChild("backSquare")
                    var1151.ImageColor3 = arg2:WaitForChild("tradingOffButtonColor").Value
                    var1151 = arg2.backSquare:WaitForChild("squareShadow")
                    var1151.ImageColor3 = arg2:WaitForChild("tradingOffUnderButtonColor").Value
                    var1151 = arg2.buttonLabel
                    var1151.TextColor3 = Color3.fromRGB(255, 255, 255)
                    return
                end
                var1151 = true
                arg6.Value = var1151
                var1151 = arg2:WaitForChild("buttonLabel")
                var1151.Text = "Trade"
                var1151 = arg2.buttonLabel:WaitForChild("shadow")
                var1151.Text = arg2.buttonLabel.Text
                var1151 = arg2:WaitForChild("backSquare")
                var1151.ImageColor3 = arg2:WaitForChild("buttonColor").Value
                var1151 = arg2.backSquare:WaitForChild("squareShadow")
                var1151.ImageColor3 = arg2:WaitForChild("underButtonColor").Value
                var1151 = arg2.buttonLabel
                var1151.TextColor3 = Color3.fromRGB(255, 255, 255)
            end
            if arg5 ~= nil then
                var1151 = arg5.Value
                if var1151 == true then
                    var1151 = false
                    arg6.Value = var1151
                    var1151 = arg2:WaitForChild("buttonLabel")
                    var1151.Text = "Busy"
                    var1151 = arg2.buttonLabel:WaitForChild("shadow")
                    var1151.Text = arg2.buttonLabel.Text
                    var1151 = arg2.buttonLabel
                    var1151.TextColor3 = Color3.fromRGB(255, 255, 255)
                    var1151 = arg2:WaitForChild("backSquare")
                    var1151.ImageColor3 = arg2:WaitForChild("tradingButtonColor").Value
                    var1151 = arg2.backSquare:WaitForChild("squareShadow")
                    var1151.ImageColor3 = arg2:WaitForChild("tradingUnderButtonColor").Value
                    return
                end
                var1151 = true
                arg6.Value = var1151
                var1151 = arg2:WaitForChild("buttonLabel")
                var1151.Text = "Trade"
                var1151 = arg2.buttonLabel:WaitForChild("shadow")
                var1151.Text = arg2.buttonLabel.Text
                var1151 = arg2.buttonLabel
                var1151.TextColor3 = Color3.fromRGB(255, 255, 255)
                var1151 = arg2:WaitForChild("backSquare")
                var1151.ImageColor3 = arg2:WaitForChild("buttonColor").Value
                var1151 = arg2.backSquare:WaitForChild("squareShadow")
                var1151.ImageColor3 = arg2:WaitForChild("underButtonColor").Value
            end
        end
    end
    coroutine.resume(coroutine.create(function() -- Line 7768
        --[[ Upvalues[2]:
            [1]: listFrame_upvr_2 (readonly)
            [2]: showCorrectButtonType_upvr (readonly)
        ]]
        while wait(0.5) do
            for _, v_62 in pairs(listFrame_upvr_2:GetChildren()) do
                if v_62 ~= nil then
                    if v_62:IsA("Frame") and v_62:FindFirstChild("nameLabel") ~= nil and v_62.nameLabel:FindFirstChild("tradeButton") ~= nil and v_62.nameLabel.tradeButton:FindFirstChild("canHoverTradeButton") ~= nil then
                        local SOME_15 = game.Players:FindFirstChild(v_62:WaitForChild("nameValue").Value)
                        if SOME_15 ~= nil then
                            showCorrectButtonType_upvr(SOME_15, v_62.nameLabel.tradeButton, SOME_15:FindFirstChild("leaderstats"), SOME_15:FindFirstChild("tradingOn"), SOME_15:FindFirstChild("isTrading"), v_62.nameLabel.tradeButton.canHoverTradeButton)
                        end
                    end
                end
            end
        end
    end))
    for _, v_63 in pairs(game.Players:GetChildren()) do
        if v_63 ~= nil and v_63 ~= LocalPlayer_upvr then
            createNewTradeFrame_upvr(v_63)
        end
    end
    game.Players.PlayerAdded:Connect(function(arg1) -- Line 7805
        --[[ Upvalues[3]:
            [1]: LocalPlayer_upvr (copied, readonly)
            [2]: listFrame_upvr_2 (readonly)
            [3]: createNewTradeFrame_upvr (readonly)
        ]]
        if arg1 ~= nil and arg1 ~= LocalPlayer_upvr then
            for _, v_64 in pairs(listFrame_upvr_2:GetChildren()) do
                if v_64 ~= nil and v_64:IsA("Frame") and v_64:WaitForChild("nameValue").Value == arg1.Name then
                    v_64:Destroy()
                end
            end
            createNewTradeFrame_upvr(arg1)
        end
    end)
    game.Players.PlayerRemoving:Connect(function(arg1) -- Line 7819
        --[[ Upvalues[2]:
            [1]: LocalPlayer_upvr (copied, readonly)
            [2]: listFrame_upvr_2 (readonly)
        ]]
        if arg1 ~= nil and arg1 ~= LocalPlayer_upvr then
            for _, v_65 in pairs(listFrame_upvr_2:GetChildren()) do
                if v_65 ~= nil and v_65:IsA("Frame") and v_65:WaitForChild("nameValue").Value == arg1.Name then
                    v_65:Destroy()
                end
            end
        end
    end)
    local function closeTradingFunc_upvr(arg1) -- Line 7831, Named "closeTradingFunc"
        --[[ Upvalues[20]:
            [1]: tradePanel_upvr (copied, readonly)
            [2]: tradeSuccessMenu_upvr_2 (readonly)
            [3]: gemsSound_upvr (copied, readonly)
            [4]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [5]: GuiService_upvr (copied, readonly)
            [6]: otherOfferMenu_upvr_2 (readonly)
            [7]: yourOfferMenu_upvr (readonly)
            [8]: petsFrames_upvr (copied, readonly)
            [9]: auraFrames_upvr (copied, readonly)
            [10]: confirmMenu_upvr (readonly)
            [11]: confirmCoverFrame_upvr (readonly)
            [12]: noPetsLabel_upvr_2 (readonly)
            [13]: noItemsLabel_upvr (readonly)
            [14]: var78_upvw (copied, read and write)
            [15]: petsButton_upvr_2 (readonly)
            [16]: itemsButton_upvr (readonly)
            [17]: var876_upvw (copied, read and write)
            [18]: var875_upvw (copied, read and write)
            [19]: var880_upvw (copied, read and write)
            [20]: var879_upvw (copied, read and write)
        ]]
        tradePanel_upvr.Visible = false
        if arg1 == false then
            tradeSuccessMenu_upvr_2:WaitForChild("successIcon").Image = "rbxassetid://2923552498"
            tradeSuccessMenu_upvr_2:WaitForChild("msgLabel").Text = "Trade Declined!"
            tradeSuccessMenu_upvr_2.msgLabel:WaitForChild("shadow").Text = tradeSuccessMenu_upvr_2.msgLabel.Text
        else
            tradeSuccessMenu_upvr_2:WaitForChild("successIcon").Image = "rbxassetid://2923565226"
            tradeSuccessMenu_upvr_2:WaitForChild("msgLabel").Text = "Trade Accepted!"
            tradeSuccessMenu_upvr_2.msgLabel:WaitForChild("shadow").Text = tradeSuccessMenu_upvr_2.msgLabel.Text
            gemsSound_upvr:Play()
        end
        tradeSuccessMenu_upvr_2.Visible = true
        if any_getPlayerPlatform_result1_upvr == "console" then
            GuiService_upvr.SelectedObject = tradeSuccessMenu_upvr_2:WaitForChild("xButton")
        end
        for _, v_66 in pairs(otherOfferMenu_upvr_2:WaitForChild("itemFrames"):WaitForChild("inventoryPage"):GetChildren()) do
            if v_66:IsA("Folder") == false and v_66:IsA("UIGridLayout") == false then
                v_66:Destroy()
            end
        end
        for _, v_67 in pairs(yourOfferMenu_upvr:WaitForChild("itemFrames"):WaitForChild("inventoryPage"):GetChildren()) do
            if v_67:IsA("Folder") == false and v_67:IsA("UIGridLayout") == false then
                v_67:Destroy()
            end
        end
        for _, v_68 in pairs(petsFrames_upvr:GetChildren()) do
            if v_68:IsA("Frame") then
                v_68:Destroy()
            end
        end
        for _, v_69 in pairs(auraFrames_upvr:GetChildren()) do
            if v_69:IsA("Frame") then
                v_69:Destroy()
            end
        end
        confirmMenu_upvr.Visible = false
        confirmCoverFrame_upvr.Visible = false
        noPetsLabel_upvr_2.Visible = true
        noItemsLabel_upvr.Visible = false
        petsFrames_upvr.Visible = true
        auraFrames_upvr.Visible = false
        yourOfferMenu_upvr:WaitForChild("itemFrames"):WaitForChild("backImageFolder"):WaitForChild("acceptedCover").Visible = false
        otherOfferMenu_upvr_2:WaitForChild("itemFrames"):WaitForChild("backImageFolder"):WaitForChild("acceptedCover").Visible = false
        var78_upvw = petsButton_upvr_2
        var78_upvw.Size = UDim2.new(1.1, 0, 0.5, 0)
        var78_upvw:WaitForChild("backSquare").ImageColor3 = var78_upvw:WaitForChild("hoverButtonColor").Value
        var78_upvw.backSquare:WaitForChild("squareShadow").ImageColor3 = var78_upvw:WaitForChild("underButtonHoverColor").Value
        itemsButton_upvr.Size = UDim2.new(1, 0, 0.45, 0)
        itemsButton_upvr:WaitForChild("backSquare").ImageColor3 = var78_upvw:WaitForChild("buttonColor").Value
        itemsButton_upvr.backSquare:WaitForChild("squareShadow").ImageColor3 = var78_upvw:WaitForChild("underButtonColor").Value
        tradePanel_upvr:WaitForChild("pageLabel").Text = "Page 0/0"
        tradePanel_upvr.pageLabel:WaitForChild("shadow").Text = tradePanel_upvr.pageLabel.Text
        var876_upvw = 0
        var875_upvw = 0
        var880_upvw = 0
        var879_upvw = 0
    end
    local function tradeSuccessMenuXButtonHover() -- Line 7914
        --[[ Upvalues[2]:
            [1]: hoverSound_upvr (copied, readonly)
            [2]: xButton_upvr (readonly)
        ]]
        hoverSound_upvr:Play()
        xButton_upvr:WaitForChild("backSquare").ImageColor3 = Color3.fromRGB(255, 0, 0)
    end
    local function tradeSuccessMenuXButtonExit() -- Line 7921
        --[[ Upvalues[1]:
            [1]: xButton_upvr (readonly)
        ]]
        xButton_upvr:WaitForChild("backSquare").ImageColor3 = Color3.fromRGB(170, 0, 0)
    end
    xButton_upvr.MouseEnter:Connect(tradeSuccessMenuXButtonHover)
    xButton_upvr.SelectionGained:Connect(tradeSuccessMenuXButtonHover)
    xButton_upvr.MouseLeave:Connect(tradeSuccessMenuXButtonExit)
    xButton_upvr.SelectionLost:Connect(tradeSuccessMenuXButtonExit)
    xButton_upvr.Activated:Connect(function() -- Line 7927, Named "tradeSuccessMenuXButtonClick"
        --[[ Upvalues[7]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: tradeSuccessMenu_upvr_2 (readonly)
            [3]: unblurScreenEffect_upvr (copied, readonly)
            [4]: sideButtons_upvr_3 (copied, readonly)
            [5]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [6]: Parent_3_upvr (copied, readonly)
            [7]: rightSideButtons_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        tradeSuccessMenu_upvr_2.Visible = false
        unblurScreenEffect_upvr()
        sideButtons_upvr_3.Visible = true
        if any_getPlayerPlatform_result1_upvr == "console" then
            Parent_3_upvr:WaitForChild("yButtonIcon").Visible = true
        end
        rightSideButtons_upvr.Visible = true
    end)
    acceptButton_upvr.Activated:Connect(function() -- Line 7959, Named "acceptButtonClick"
        --[[ Upvalues[6]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: confirmCoverFrame_upvr (readonly)
            [3]: confirmMenu_upvr (readonly)
            [4]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [5]: GuiService_upvr (copied, readonly)
            [6]: noButton_upvr_2 (readonly)
        ]]
        clickSound_upvr:Play()
        confirmCoverFrame_upvr.Visible = true
        confirmMenu_upvr.Visible = true
        if any_getPlayerPlatform_result1_upvr == "console" then
            GuiService_upvr.SelectedObject = noButton_upvr_2
        end
    end)
    tradePanel_upvr:WaitForChild("declineButton").Activated:Connect(function() -- Line 7950, Named "declineButtonClick"
        --[[ Upvalues[3]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: tradingEvent_upvr (copied, readonly)
            [3]: closeTradingFunc_upvr (readonly)
        ]]
        clickSound_upvr:Play()
        tradingEvent_upvr:FireServer("cancelTrade")
        closeTradingFunc_upvr(false)
    end)
    cancelButton_upvr.Activated:Connect(function() -- Line 7972, Named "cancelButtonClick"
        --[[ Upvalues[2]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: tradingEvent_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        tradingEvent_upvr:FireServer("retractTradeAccept")
    end)
    confirmMenu_upvr:WaitForChild("yesButton").Activated:Connect(function() -- Line 7998, Named "confirmYesButtonClick"
        --[[ Upvalues[2]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: tradingEvent_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        tradingEvent_upvr:FireServer("acceptTrade")
    end)
    noButton_upvr_2.Activated:Connect(function() -- Line 7985, Named "confirmNoButtonClick"
        --[[ Upvalues[6]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: confirmMenu_upvr (readonly)
            [3]: confirmCoverFrame_upvr (readonly)
            [4]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [5]: GuiService_upvr (copied, readonly)
            [6]: acceptButton_upvr (readonly)
        ]]
        clickSound_upvr:Play()
        confirmMenu_upvr.Visible = false
        confirmCoverFrame_upvr.Visible = false
        if any_getPlayerPlatform_result1_upvr == "console" then
            GuiService_upvr.SelectedObject = acceptButton_upvr
        end
    end)
    local var1194_upvw = true
    enableButton_upvr.Activated:Connect(function() -- Line 8011, Named "enableButtonClick"
        --[[ Upvalues[5]:
            [1]: var1194_upvw (read and write)
            [2]: clickSound_upvr (copied, readonly)
            [3]: enableButton_upvr (readonly)
            [4]: tradingOn_3_upvr (copied, readonly)
            [5]: tradingEvent_upvr (copied, readonly)
        ]]
        if var1194_upvw == false then
        else
            var1194_upvw = false
            clickSound_upvr:Play()
            enableButton_upvr:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
            if tradingOn_3_upvr.Value == true then
                tradingOn_3_upvr.Value = false
                tradingEvent_upvr:FireServer("disableTrading")
                enableButton_upvr:WaitForChild("backSquare").ImageColor3 = enableButton_upvr:WaitForChild("disabledButtonColor").Value
                enableButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = enableButton_upvr:WaitForChild("disabledUnderButtonColor").Value
                enableButton_upvr:WaitForChild("buttonLabel").Text = "Disabled"
                enableButton_upvr.buttonLabel:WaitForChild("shadow").Text = enableButton_upvr.buttonLabel.Text
            else
                tradingOn_3_upvr.Value = true
                tradingEvent_upvr:FireServer("enableTrading")
                enableButton_upvr:WaitForChild("backSquare").ImageColor3 = enableButton_upvr:WaitForChild("buttonColor").Value
                enableButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow").ImageColor3 = enableButton_upvr:WaitForChild("underButtonColor").Value
                enableButton_upvr:WaitForChild("buttonLabel").Text = "Enabled"
                enableButton_upvr.buttonLabel:WaitForChild("shadow").Text = enableButton_upvr.buttonLabel.Text
            end
            wait(0.5)
            var1194_upvw = true
        end
    end)
    local tradeRequestMenu_upvr_2 = script:WaitForChild("tradeRequestMenu")
    tradingEvent_upvr.OnClientEvent:Connect(function(arg1, arg2, arg3) -- Line 8056
        --[[ Upvalues[29]:
            [1]: tradeRequestMenu_upvr_2 (readonly)
            [2]: Parent_3_upvr (copied, readonly)
            [3]: hoverSound_upvr (copied, readonly)
            [4]: clickSound_upvr (copied, readonly)
            [5]: tradingEvent_upvr (copied, readonly)
            [6]: sideButtons_upvr_3 (copied, readonly)
            [7]: rightSideButtons_upvr (copied, readonly)
            [8]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [9]: resetMenus_upvr (copied, readonly)
            [10]: blurScreenEffect_upvr (copied, readonly)
            [11]: otherOfferMenu_upvr_2 (readonly)
            [12]: yourOfferMenu_upvr (readonly)
            [13]: tradeSuccessMenu_upvr_2 (readonly)
            [14]: petsFolder_upvr (copied, readonly)
            [15]: createPetTradingButton_upvr (readonly)
            [16]: powerUpsFolder_upvr (copied, readonly)
            [17]: createTradingItemButton_upvr (readonly)
            [18]: cancelButton_upvr (readonly)
            [19]: acceptButton_upvr (readonly)
            [20]: tradePanel_upvr (copied, readonly)
            [21]: GuiService_upvr (copied, readonly)
            [22]: LocalPlayer_upvr (copied, readonly)
            [23]: Humanoid_upvr (copied, readonly)
            [24]: isTrading_upvr (readonly)
            [25]: closeTradingFunc_upvr (readonly)
            [26]: confirmMenu_upvr (readonly)
            [27]: confirmCoverFrame_upvr (readonly)
            [28]: createPetOfferButton_upvr (readonly)
            [29]: createItemOfferButton_upvr (readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [4] 3. Error Block 3 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [4] 3. Error Block 3 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [6] 4. Error Block 4 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [6] 4. Error Block 4 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [10] 6. Error Block 5 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [10] 6. Error Block 5 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [170] 124. Error Block 8 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [170] 124. Error Block 8 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [172] 125. Error Block 9 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [172] 125. Error Block 9 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [176] 127. Error Block 10 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [176] 127. Error Block 10 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [501] 358. Error Block 45 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [501] 358. Error Block 45 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [503] 359. Error Block 46 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [503] 359. Error Block 46 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [505] 360. Error Block 47 start (CF ANALYSIS FAILED)
        yourOfferMenu_upvr:WaitForChild("itemFrames"):WaitForChild("backImageFolder"):WaitForChild("acceptedCover").Visible = false
        otherOfferMenu_upvr_2:WaitForChild("itemFrames"):WaitForChild("backImageFolder"):WaitForChild("acceptedCover").Visible = false
        acceptButton_upvr.Visible = true
        cancelButton_upvr.Visible = false
        confirmMenu_upvr.Visible = false
        confirmCoverFrame_upvr.Visible = false
        -- KONSTANTERROR: [505] 360. Error Block 47 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [578] 415. Error Block 52 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [578] 415. Error Block 52 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [599] 431. Error Block 57 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [599] 431. Error Block 57 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [601] 432. Error Block 58 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [601] 432. Error Block 58 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [714] 512. Error Block 75 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [714] 512. Error Block 75 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [719] 515. Error Block 77 start (CF ANALYSIS FAILED)
        confirmMenu_upvr.Visible = false
        confirmCoverFrame_upvr.Visible = false
        yourOfferMenu_upvr:WaitForChild("itemFrames"):WaitForChild("backImageFolder"):WaitForChild("acceptedCover").Visible = true
        acceptButton_upvr.Visible = false
        cancelButton_upvr.Visible = true
        -- KONSTANTERROR: [719] 515. Error Block 77 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [782] 563. Error Block 82 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [782] 563. Error Block 82 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [784] 564. Error Block 83 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [784] 564. Error Block 83 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [789] 567. Error Block 85 start (CF ANALYSIS FAILED)
        yourOfferMenu_upvr:WaitForChild("itemFrames"):WaitForChild("backImageFolder"):WaitForChild("acceptedCover").Visible = false
        acceptButton_upvr.Visible = true
        cancelButton_upvr.Visible = false
        confirmMenu_upvr.Visible = false
        confirmCoverFrame_upvr.Visible = false
        -- KONSTANTERROR: [789] 567. Error Block 85 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [829] 597. Error Block 87 start (CF ANALYSIS FAILED)
        otherOfferMenu_upvr_2:WaitForChild("itemFrames"):WaitForChild("backImageFolder"):WaitForChild("acceptedCover").Visible = false
        -- KONSTANTERROR: [829] 597. Error Block 87 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [845] 609. Error Block 88 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [845] 609. Error Block 88 end (CF ANALYSIS FAILED)
    end)
    local nextButton_upvr_2 = tradePanel_upvr:WaitForChild("nextButton")
    local prevButton_upvr = tradePanel_upvr:WaitForChild("prevButton")
    local function nextPrevButtonClick_upvr(arg1) -- Line 8359, Named "nextPrevButtonClick"
        --[[ Upvalues[8]:
            [1]: tradePanel_upvr (copied, readonly)
            [2]: petsFrames_upvr (copied, readonly)
            [3]: var875_upvw (copied, read and write)
            [4]: clickSound_upvr (copied, readonly)
            [5]: var876_upvw (copied, read and write)
            [6]: auraFrames_upvr (copied, readonly)
            [7]: var879_upvw (copied, read and write)
            [8]: var880_upvw (copied, read and write)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [10] 7. Error Block 3 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [10] 7. Error Block 3 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [115] 85. Error Block 69 start (CF ANALYSIS FAILED)
        if auraFrames_upvr.Visible == true and 0 < var879_upvw then
            clickSound_upvr:Play()
            if arg1.Name == "nextButton" then
                if var879_upvw <= var880_upvw then
                    var880_upvw = 1
                else
                    var880_upvw += 1
                end
            elseif var880_upvw <= 1 then
                var880_upvw = var879_upvw
            else
                var880_upvw -= 1
            end
            arg1.Parent:WaitForChild("pageLabel").Text = "Page "..tostring(var880_upvw)..'/'..tostring(var879_upvw)
            arg1.Parent.pageLabel:WaitForChild("shadow").Text = arg1.Parent.pageLabel.Text
            for _, v_70 in pairs(auraFrames_upvr:GetChildren()) do
                if v_70:IsA("Frame") then
                    if v_70.Name == "page"..tostring(var880_upvw) then
                        v_70.Visible = true
                    else
                        v_70.Visible = false
                    end
                end
            end
        end
        -- KONSTANTERROR: [115] 85. Error Block 69 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [224] 165. Error Block 41 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [224] 165. Error Block 41 end (CF ANALYSIS FAILED)
    end
    nextButton_upvr_2.Activated:Connect(function() -- Line 8447
        --[[ Upvalues[2]:
            [1]: nextPrevButtonClick_upvr (readonly)
            [2]: nextButton_upvr_2 (readonly)
        ]]
        nextPrevButtonClick_upvr(nextButton_upvr_2)
    end)
    prevButton_upvr.Activated:Connect(function() -- Line 8448
        --[[ Upvalues[2]:
            [1]: nextPrevButtonClick_upvr (readonly)
            [2]: prevButton_upvr (readonly)
        ]]
        nextPrevButtonClick_upvr(prevButton_upvr)
    end)
end)()
local unlockAreaMenu_upvr = Parent_3_upvr:WaitForChild("unlockAreaMenu")
local circleCoverImage_upvr = script:WaitForChild("circleCoverImage")
local areaTravelRemote_upvr = rEvents_upvr:WaitForChild("areaTravelRemote")
;(function() -- Line 8454, Named "connectAreas"
    --[[ Upvalues[31]:
        [1]: Character_upvr (readonly)
        [2]: travelAreaMenu_upvr (readonly)
        [3]: unlockAreaMenu_upvr (readonly)
        [4]: Strength_4_upvr (readonly)
        [5]: Gems_upvr (readonly)
        [6]: Rebirths_upvr (readonly)
        [7]: Brawls_upvr (readonly)
        [8]: areaWarningLabel_upvr (readonly)
        [9]: deniedSound_upvr (readonly)
        [10]: var82_upvw (read and write)
        [11]: TweenService_upvr (readonly)
        [12]: Debris_upvr (readonly)
        [13]: ReplicatedStorage_upvr (readonly)
        [14]: shortenNumber_upvr (readonly)
        [15]: clickSound_upvr (readonly)
        [16]: circleCoverImage_upvr (readonly)
        [17]: Parent_3_upvr (readonly)
        [18]: areaTravelRemote_upvr (readonly)
        [19]: module_upvr_2 (readonly)
        [20]: LocalPlayer_upvr (readonly)
        [21]: packsMenu_upvr (readonly)
        [22]: MarketplaceService_upvr (readonly)
        [23]: any_getPlayerPlatform_result1_upvr (readonly)
        [24]: hoverSound_upvr (readonly)
        [25]: rEvents_upvr (readonly)
        [26]: GuiService_upvr (readonly)
        [27]: calculateRemainingPowerUpCapacity_upvr (readonly)
        [28]: gemsSound_upvr (readonly)
        [29]: groupRewardsMenu_upvr (readonly)
        [30]: resetMenus_upvr (readonly)
        [31]: notInGroupMenu_upvr (readonly)
    ]]
    local var1358_upvw
    local var1359_upvw
    local var1360_upvw = true
    local function areaCircleTouched_upvr(arg1, arg2) -- Line 8464, Named "areaCircleTouched"
        --[[ Upvalues[15]:
            [1]: var1360_upvw (read and write)
            [2]: Character_upvr (copied, readonly)
            [3]: travelAreaMenu_upvr (copied, readonly)
            [4]: unlockAreaMenu_upvr (copied, readonly)
            [5]: var1359_upvw (read and write)
            [6]: Strength_4_upvr (copied, readonly)
            [7]: Gems_upvr (copied, readonly)
            [8]: Rebirths_upvr (copied, readonly)
            [9]: Brawls_upvr (copied, readonly)
            [10]: var1358_upvw (read and write)
            [11]: areaWarningLabel_upvr (copied, readonly)
            [12]: deniedSound_upvr (copied, readonly)
            [13]: var82_upvw (copied, read and write)
            [14]: TweenService_upvr (copied, readonly)
            [15]: Debris_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [3] 3. Error Block 2 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [3] 3. Error Block 2 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [5] 4. Error Block 3 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [5] 4. Error Block 3 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [9] 6. Error Block 4 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [9] 6. Error Block 4 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [14] 9. Error Block 5 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [14] 9. Error Block 5 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [326] 230. Error Block 44 start (CF ANALYSIS FAILED)
        wait(0.1)
        var1360_upvw = true
        -- KONSTANTERROR: [326] 230. Error Block 44 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [332] 235. Error Block 45 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [332] 235. Error Block 45 end (CF ANALYSIS FAILED)
    end
    for _, v_71_upvr in pairs(workspace:WaitForChild("areaCircles"):GetChildren()) do
        if v_71_upvr ~= nil and v_71_upvr:IsA("Model") and v_71_upvr:FindFirstChild("circleInner") ~= nil then
            if v_71_upvr:FindFirstChild("areaType") ~= nil then
                if v_71_upvr:FindFirstChild("requiredAmount") ~= nil then
                    if v_71_upvr:FindFirstChild("areaName") ~= nil then
                        v_71_upvr.circleInner.Touched:Connect(function(arg1) -- Line 8571
                            --[[ Upvalues[2]:
                                [1]: areaCircleTouched_upvr (readonly)
                                [2]: v_71_upvr (readonly)
                            ]]
                            areaCircleTouched_upvr(arg1, v_71_upvr)
                        end)
                    end
                end
            end
        end
    end
    local legendsBeachBarrierPart_upvr = workspace:WaitForChild("legendsBeachBarrierPart")
    local legendsBeachGradientPart_upvr = workspace:WaitForChild("legendsBeachGradientPart")
    local legendsBeachStrengthAmount_upvr = ReplicatedStorage_upvr:WaitForChild("legendsBeachStrengthAmount")
    local var1369_upvw = 0
    legendsBeachBarrierPart_upvr.Touched:Connect(function(arg1) -- Line 8585
        --[[ Upvalues[12]:
            [1]: Character_upvr (copied, readonly)
            [2]: Strength_4_upvr (copied, readonly)
            [3]: legendsBeachStrengthAmount_upvr (readonly)
            [4]: legendsBeachBarrierPart_upvr (readonly)
            [5]: legendsBeachGradientPart_upvr (readonly)
            [6]: var1369_upvw (read and write)
            [7]: deniedSound_upvr (copied, readonly)
            [8]: var82_upvw (copied, read and write)
            [9]: areaWarningLabel_upvr (copied, readonly)
            [10]: shortenNumber_upvr (copied, readonly)
            [11]: TweenService_upvr (copied, readonly)
            [12]: Debris_upvr (copied, readonly)
        ]]
        if arg1 ~= nil and arg1.Parent ~= nil then
            if arg1.Parent == Character_upvr then
                if legendsBeachStrengthAmount_upvr.Value <= Strength_4_upvr.Value then
                    legendsBeachBarrierPart_upvr.CanCollide = false
                    legendsBeachGradientPart_upvr:ClearAllChildren()
                    return
                end
                legendsBeachBarrierPart_upvr.CanCollide = true
                if tick() - var1369_upvw < 3 then return end
                var1369_upvw = tick()
                deniedSound_upvr:Play()
                if var82_upvw ~= nil then
                    var82_upvw:Cancel()
                end
                areaWarningLabel_upvr.Text = "You need "..shortenNumber_upvr(legendsBeachStrengthAmount_upvr.Value).." Strength to enter Legend Beach!"
                areaWarningLabel_upvr.Visible = true
                var82_upvw = TweenService_upvr:Create(areaWarningLabel_upvr, TweenInfo.new(3), {
                    Visible = false;
                })
                var82_upvw:Play()
                local clone_21 = areaWarningLabel_upvr:Clone()
                clone_21.TextStrokeTransparency = 1
                clone_21.Parent = areaWarningLabel_upvr.Parent
                Debris_upvr:AddItem(clone_21, 0.5)
                TweenService_upvr:Create(clone_21, TweenInfo.new(0.5), {
                    TextTransparency = 1;
                    Size = UDim2.new(0.45, 0, 0.15, 0);
                }):Play()
            end
        end
    end)
    travelAreaMenu_upvr:WaitForChild("noButton").Activated:Connect(function() -- Line 8628
        --[[ Upvalues[4]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: var1358_upvw (read and write)
            [3]: travelAreaMenu_upvr (copied, readonly)
            [4]: TweenService_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        if var1358_upvw ~= nil then
            var1358_upvw:Cancel()
        end
        travelAreaMenu_upvr:TweenPosition(UDim2.new(0.5, 0, 2, 0), "In", "Back", 0.25, true)
        var1358_upvw = TweenService_upvr:Create(travelAreaMenu_upvr, TweenInfo.new(0.5), {
            Visible = false;
        })
        var1358_upvw:Play()
    end)
    travelAreaMenu_upvr:WaitForChild("yesButton").Activated:Connect(function() -- Line 8643
        --[[ Upvalues[10]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: var1358_upvw (read and write)
            [3]: travelAreaMenu_upvr (copied, readonly)
            [4]: TweenService_upvr (copied, readonly)
            [5]: var1359_upvw (read and write)
            [6]: Character_upvr (copied, readonly)
            [7]: circleCoverImage_upvr (copied, readonly)
            [8]: Parent_3_upvr (copied, readonly)
            [9]: Debris_upvr (copied, readonly)
            [10]: areaTravelRemote_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        clickSound_upvr:Play()
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [7] 6. Error Block 2 start (CF ANALYSIS FAILED)
        var1358_upvw:Cancel()
        -- KONSTANTERROR: [7] 6. Error Block 2 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [11] 9. Error Block 3 start (CF ANALYSIS FAILED)
        travelAreaMenu_upvr:TweenPosition(UDim2.new(0.5, 0, 2, 0), "In", "Back", 0.25, true)
        var1358_upvw = TweenService_upvr:Create(travelAreaMenu_upvr, TweenInfo.new(0.5), {
            Visible = false;
        })
        var1358_upvw:Play()
        -- KONSTANTERROR: [11] 9. Error Block 3 end (CF ANALYSIS FAILED)
    end)
    local function timeFormat_upvr(arg1, arg2, arg3) -- Line 8708, Named "timeFormat"
        if arg1 == 0 then
            return "00:00:00"
        end
        if arg2 ~= true then
            local formatted_3 = string.format("%02.f", math.floor(arg1 / 3600))
            local formatted_8 = string.format("%02.f", math.floor(arg1 / 60 - formatted_3 * 60))
            return formatted_3..':'..formatted_8..':'..string.format("%02.f", math.floor(arg1 - formatted_3 * 3600 - formatted_8 * 60))
        end
        local formatted = string.format("%02.f", math.floor(arg1 / 86400))
        local formatted_6 = string.format("%02.f", math.floor(arg1 / 3600 - formatted * 24))
        local formatted_7 = string.format("%02.f", math.floor(arg1 / 60 - formatted_6 * 60 - formatted * 24 * 60))
        return formatted.."d "..formatted_6.."h "..formatted_7.."m "..string.format("%02.f", math.floor(arg1 - formatted_7 * 60 - formatted_6 * 3600 - formatted * 24 * 3600))..'s'
    end
    local checkIfGivenTimeHasPassed_upvr_2 = module_upvr_2.checkIfGivenTimeHasPassed
    local function updateChestTimeLabels_upvr(arg1) -- Line 8739, Named "updateChestTimeLabels"
        --[[ Upvalues[4]:
            [1]: LocalPlayer_upvr (copied, readonly)
            [2]: checkIfGivenTimeHasPassed_upvr_2 (readonly)
            [3]: ReplicatedStorage_upvr (copied, readonly)
            [4]: timeFormat_upvr (readonly)
        ]]
        local var1383 = false
        if LocalPlayer_upvr.MembershipType == Enum.MembershipType.Premium then
            var1383 = true
        end
        local function _(arg1_4) -- Line 8747, Named "enablePremiumChestRewardLabels"
            local premiumFrame_11 = arg1_4:FindFirstChild("premiumFrame", true)
            if premiumFrame_11 ~= nil and premiumFrame_11:IsA("Frame") then
                premiumFrame_11.Visible = true
            end
        end
        if var1383 == true then
            local premiumFrame_5 = workspace:WaitForChild("groupRewardsCircle"):WaitForChild("circleSignPart"):WaitForChild("signGui"):FindFirstChild("premiumFrame", true)
            if premiumFrame_5 ~= nil and premiumFrame_5:IsA("Frame") then
                premiumFrame_5.Visible = true
            end
            local premiumFrame_10 = workspace:WaitForChild("goldenChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):FindFirstChild("premiumFrame", true)
            if premiumFrame_10 ~= nil and premiumFrame_10:IsA("Frame") then
                premiumFrame_10.Visible = true
            end
            local premiumFrame_9 = workspace:WaitForChild("enchantedChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):FindFirstChild("premiumFrame", true)
            if premiumFrame_9 ~= nil and premiumFrame_9:IsA("Frame") then
                premiumFrame_9.Visible = true
            end
            local premiumFrame_4 = workspace:WaitForChild("magmaChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):FindFirstChild("premiumFrame", true)
            if premiumFrame_4 ~= nil and premiumFrame_4:IsA("Frame") then
                premiumFrame_4.Visible = true
            end
            local premiumFrame = workspace:WaitForChild("mythicalChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):FindFirstChild("premiumFrame", true)
            if premiumFrame ~= nil and premiumFrame:IsA("Frame") then
                premiumFrame.Visible = true
            end
            local premiumFrame_8 = workspace:WaitForChild("legendsChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):FindFirstChild("premiumFrame", true)
            if premiumFrame_8 ~= nil and premiumFrame_8:IsA("Frame") then
                premiumFrame_8.Visible = true
            end
            local premiumFrame_3 = workspace:WaitForChild("jungleChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):FindFirstChild("premiumFrame", true)
            if premiumFrame_3 ~= nil and premiumFrame_3:IsA("Frame") then
                premiumFrame_3.Visible = true
            end
        end
        if checkIfGivenTimeHasPassed_upvr_2(ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("groupRewards").Value, LocalPlayer_upvr:WaitForChild("groupRewardsTime").Value, arg1) == true then
            workspace:WaitForChild("groupRewardsCircle"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Ready To Collect"
        else
            workspace:WaitForChild("groupRewardsCircle"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Collect in "..timeFormat_upvr((ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("groupRewards").Value) - (arg1 - LocalPlayer_upvr:WaitForChild("groupRewardsTime").Value))
        end
        if checkIfGivenTimeHasPassed_upvr_2(ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("Golden Chest").Value, LocalPlayer_upvr:WaitForChild("goldenChestTime").Value, arg1) == true then
            workspace:WaitForChild("goldenChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Ready To Collect"
        else
            workspace:WaitForChild("goldenChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Collect in "..timeFormat_upvr((ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("Golden Chest").Value) - (arg1 - LocalPlayer_upvr:WaitForChild("goldenChestTime").Value))
        end
        if checkIfGivenTimeHasPassed_upvr_2(ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("Enchanted Chest").Value, LocalPlayer_upvr:WaitForChild("enchantedChestTime").Value, arg1) == true then
            workspace:WaitForChild("enchantedChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Ready To Collect"
        else
            workspace:WaitForChild("enchantedChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Collect in "..timeFormat_upvr((ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("Enchanted Chest").Value) - (arg1 - LocalPlayer_upvr:WaitForChild("enchantedChestTime").Value))
        end
        if checkIfGivenTimeHasPassed_upvr_2(ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("Magma Chest").Value, LocalPlayer_upvr:WaitForChild("magmaChestTime").Value, arg1) == true then
            workspace:WaitForChild("magmaChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Ready To Collect"
        else
            workspace:WaitForChild("magmaChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Collect in "..timeFormat_upvr((ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("Magma Chest").Value) - (arg1 - LocalPlayer_upvr:WaitForChild("magmaChestTime").Value))
        end
        if checkIfGivenTimeHasPassed_upvr_2(ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("Mythical Chest").Value, LocalPlayer_upvr:WaitForChild("mythicalChestTime").Value, arg1) == true then
            workspace:WaitForChild("mythicalChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Ready To Collect"
        else
            workspace:WaitForChild("mythicalChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Collect in "..timeFormat_upvr((ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("Mythical Chest").Value) - (arg1 - LocalPlayer_upvr:WaitForChild("mythicalChestTime").Value))
        end
        if checkIfGivenTimeHasPassed_upvr_2(ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("Legends Chest").Value, LocalPlayer_upvr:WaitForChild("legendsChestTime").Value, arg1) == true then
            workspace:WaitForChild("legendsChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Ready To Collect"
        else
            workspace:WaitForChild("legendsChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Collect in "..timeFormat_upvr((ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("Legends Chest").Value) - (arg1 - LocalPlayer_upvr:WaitForChild("legendsChestTime").Value))
        end
        if checkIfGivenTimeHasPassed_upvr_2(ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("Legends Chest").Value, LocalPlayer_upvr:WaitForChild("jungleChestTime").Value, arg1) == true then
            workspace:WaitForChild("jungleChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Ready To Collect"
        else
            workspace:WaitForChild("jungleChest"):WaitForChild("circleSignPart"):WaitForChild("signGui"):WaitForChild("timeLabel").Text = "Collect in "..timeFormat_upvr((ReplicatedStorage_upvr:WaitForChild("neededTimers"):WaitForChild("Jungle Chest").Value) - (arg1 - LocalPlayer_upvr:WaitForChild("jungleChestTime").Value))
        end
    end
    local packGiftMenu_upvr = Parent_3_upvr.Parent:WaitForChild("packsGui"):WaitForChild("packGiftMenu")
    local packConfirmGiftMenu_upvr = Parent_3_upvr.Parent:WaitForChild("packsGui"):WaitForChild("packConfirmGiftMenu")
    local packGiftCoverFrame_upvr = Parent_3_upvr.Parent:WaitForChild("packsGui"):WaitForChild("packGiftCoverFrame")
    for _, v_72_upvr in pairs(packsMenu_upvr:WaitForChild("packsScrollMenu"):GetChildren()) do
        if v_72_upvr ~= nil and v_72_upvr:IsA("ImageLabel") and v_72_upvr:FindFirstChild("buyFrame") ~= nil and v_72_upvr:FindFirstChild("desc") ~= nil then
            v_72_upvr.MouseEnter:Connect(function() -- Line 8820
                --[[ Upvalues[2]:
                    [1]: packsMenu_upvr (copied, readonly)
                    [2]: v_72_upvr (readonly)
                ]]
                packsMenu_upvr:WaitForChild("descLabel").Text = v_72_upvr.desc.Value
                packsMenu_upvr:WaitForChild("descLabel").TextColor3 = v_72_upvr:WaitForChild("packTitle").TextColor3
            end)
        end
        if v_72_upvr ~= nil and v_72_upvr:IsA("ImageLabel") and v_72_upvr:WaitForChild("buyFrame"):FindFirstChild("id") ~= nil and v_72_upvr.buyFrame.id.Value ~= 0 then
            v_72_upvr:WaitForChild("buyFrame"):WaitForChild("buyButton").Activated:Connect(function() -- Line 8831
                --[[ Upvalues[5]:
                    [1]: clickSound_upvr (copied, readonly)
                    [2]: v_72_upvr (readonly)
                    [3]: packsMenu_upvr (copied, readonly)
                    [4]: MarketplaceService_upvr (copied, readonly)
                    [5]: LocalPlayer_upvr (copied, readonly)
                ]]
                clickSound_upvr:Play()
                if v_72_upvr:FindFirstChild("desc") ~= nil then
                    packsMenu_upvr:WaitForChild("descLabel").Text = v_72_upvr.desc.Value
                    packsMenu_upvr:WaitForChild("descLabel").TextColor3 = v_72_upvr:WaitForChild("packTitle").TextColor3
                else
                    packsMenu_upvr:WaitForChild("descLabel").Text = ""
                end
                MarketplaceService_upvr:PromptProductPurchase(LocalPlayer_upvr, v_72_upvr.buyFrame.id.Value)
            end)
            for i_73, v_73_upvr in pairs(v_72_upvr:WaitForChild("packItemsFrame"):GetChildren()) do
                if v_73_upvr ~= nil and v_73_upvr:IsA("Frame") and v_73_upvr.Name == "itemBox" and any_getPlayerPlatform_result1_upvr ~= "console" then
                    local petName_upvr_2 = v_73_upvr:FindFirstChild("petName")
                    if petName_upvr_2 ~= nil then
                        local SOME_9 = ReplicatedStorage_upvr:WaitForChild("packPetPerks"):FindFirstChild(petName_upvr_2.Value)
                        if SOME_9 ~= nil then
                            local perksFolder_upvr = SOME_9:FindFirstChild("perksFolder")
                            if perksFolder_upvr ~= nil then
                                local tbl_17_upvr = {}
                                v_73_upvr.MouseEnter:Connect(function() -- Line 8869
                                    --[[ Upvalues[9]:
                                        [1]: packGiftMenu_upvr (readonly)
                                        [2]: packConfirmGiftMenu_upvr (readonly)
                                        [3]: hoverSound_upvr (copied, readonly)
                                        [4]: Parent_3_upvr (copied, readonly)
                                        [5]: petName_upvr_2 (readonly)
                                        [6]: module_upvr_2 (copied, readonly)
                                        [7]: perksFolder_upvr (readonly)
                                        [8]: v_73_upvr (readonly)
                                        [9]: tbl_17_upvr (readonly)
                                    ]]
                                    -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
                                    -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
                                    -- KONSTANTERROR: [5] 4. Error Block 10 start (CF ANALYSIS FAILED)
                                    if packConfirmGiftMenu_upvr.Visible == true then
                                        -- KONSTANTERROR: [10] 7. Error Block 3 start (CF ANALYSIS FAILED)
                                        do
                                            return
                                        end
                                        -- KONSTANTERROR: [10] 7. Error Block 3 end (CF ANALYSIS FAILED)
                                    end
                                    hoverSound_upvr:Play()
                                    local petStatsMenu_2 = Parent_3_upvr.Parent:WaitForChild("petStatsGui"):FindFirstChild("petStatsMenu")
                                    if petStatsMenu_2 ~= nil then
                                        petStatsMenu_2:Destroy()
                                    end
                                    local clone_18 = script:WaitForChild("petStatsMenu"):Clone()
                                    clone_18.Name = petName_upvr_2.Value
                                    module_upvr_2.decoratePetPerks(perksFolder_upvr, clone_18:WaitForChild("statsMenu"):WaitForChild("mainImage"):WaitForChild("perksImage"):WaitForChild("perksFrame"), 25, 5)
                                    clone_18:WaitForChild("statsMenu"):WaitForChild("mainImage"):WaitForChild("evolutionImage"):WaitForChild("evolutionLabel").Text = v_73_upvr:WaitForChild("rarityLabel").Text
                                    clone_18:WaitForChild("statsMenu"):WaitForChild("mainImage"):WaitForChild("evolutionImage"):WaitForChild("evolutionLabel").TextStrokeColor3 = v_73_upvr:WaitForChild("rarityLabel").TextStrokeColor3
                                    table.insert(tbl_17_upvr, 1, clone_18)
                                    clone_18.Position = UDim2.new(0, v_73_upvr.AbsolutePosition.X + v_73_upvr.AbsoluteSize.X / 1.1, 0, v_73_upvr.AbsolutePosition.Y + v_73_upvr.AbsoluteSize.Y / 2)
                                    clone_18.Parent = Parent_3_upvr.Parent:WaitForChild("petStatsGui")
                                    -- KONSTANTERROR: [5] 4. Error Block 10 end (CF ANALYSIS FAILED)
                                end)
                                v_73_upvr.MouseLeave:Connect(function() -- Line 8901
                                    --[[ Upvalues[2]:
                                        [1]: Parent_3_upvr (copied, readonly)
                                        [2]: petName_upvr_2 (readonly)
                                    ]]
                                    local SOME_7 = Parent_3_upvr.Parent:WaitForChild("petStatsGui"):FindFirstChild(petName_upvr_2.Value)
                                    if SOME_7 ~= nil then
                                        SOME_7:Destroy()
                                    end
                                end)
                                packsMenu_upvr.Changed:Connect(function() -- Line 8911
                                    --[[ Upvalues[2]:
                                        [1]: packsMenu_upvr (copied, readonly)
                                        [2]: tbl_17_upvr (readonly)
                                    ]]
                                    if packsMenu_upvr.Visible == false then
                                        for _, v_74 in pairs(tbl_17_upvr) do
                                            if v_74 ~= nil then
                                                v_74:Destroy()
                                            end
                                        end
                                    end
                                end)
                            end
                        end
                    end
                end
            end
        end
        if v_72_upvr ~= nil and v_72_upvr:IsA("ImageLabel") and v_72_upvr:WaitForChild("buyFrame"):FindFirstChild("giftId") ~= nil and v_72_upvr.buyFrame.giftId.Value ~= 0 then
            i_73 = "buyFrame"
            i_73 = "giftButton"
            local var1419_upvw
            local var1420_upvw
            v_72_upvr:WaitForChild(i_73):WaitForChild(i_73).Activated:Connect(function() -- Line 8937
                --[[ Upvalues[13]:
                    [1]: clickSound_upvr (copied, readonly)
                    [2]: var1419_upvw (read and write)
                    [3]: v_72_upvr (readonly)
                    [4]: var1420_upvw (read and write)
                    [5]: packsMenu_upvr (copied, readonly)
                    [6]: packGiftMenu_upvr (readonly)
                    [7]: packConfirmGiftMenu_upvr (readonly)
                    [8]: LocalPlayer_upvr (copied, readonly)
                    [9]: hoverSound_upvr (copied, readonly)
                    [10]: rEvents_upvr (copied, readonly)
                    [11]: packGiftCoverFrame_upvr (readonly)
                    [12]: any_getPlayerPlatform_result1_upvr (copied, readonly)
                    [13]: GuiService_upvr (copied, readonly)
                ]]
                clickSound_upvr:Play()
                var1419_upvw = v_72_upvr.buyFrame.giftId.Value
                var1420_upvw = v_72_upvr
                if v_72_upvr:FindFirstChild("desc") ~= nil then
                    packsMenu_upvr:WaitForChild("descLabel").Text = v_72_upvr.desc.Value
                    packsMenu_upvr:WaitForChild("descLabel").TextColor3 = v_72_upvr:WaitForChild("packTitle").TextColor3
                else
                    packsMenu_upvr:WaitForChild("descLabel").Text = ""
                end
                for _, v_75 in pairs(packGiftMenu_upvr:WaitForChild("listBackImage"):WaitForChild("listFrame"):GetChildren()) do
                    if v_75 ~= nil and v_75:IsA("UIListLayout") == false then
                        v_75:Destroy()
                    end
                end
                packConfirmGiftMenu_upvr.Visible = false
                for i_76, v_76 in pairs(game.Players:GetChildren()) do
                    if v_76 ~= nil and v_76 ~= LocalPlayer_upvr and v_76:FindFirstChild("dataLoaded") ~= nil and v_76.dataLoaded.Value == true then
                        local clone_17 = script:WaitForChild("playerGiftFramePack"):Clone()
                        clone_17:WaitForChild("nameLabel").Text = v_76.Name
                        clone_17.nameLabel:WaitForChild("shadow").Text = clone_17.nameLabel.Text
                        clone_17.Parent = packGiftMenu_upvr:WaitForChild("listBackImage"):WaitForChild("listFrame")
                        local giftButton_upvr = clone_17:WaitForChild("nameLabel"):WaitForChild("giftButton")
                        local function giftFrameButtonHover() -- Line 8971
                            --[[ Upvalues[2]:
                                [1]: hoverSound_upvr (copied, readonly)
                                [2]: giftButton_upvr (readonly)
                            ]]
                            hoverSound_upvr:Play()
                            giftButton_upvr:TweenSize(UDim2.new(0.82, 0, 1.1, 0), "Out", "Quad", 0.25, true)
                            giftButton_upvr:WaitForChild("buttonLabel").TextColor3 = giftButton_upvr:WaitForChild("backSquare").ImageColor3
                            giftButton_upvr:WaitForChild("backSquare").ImageColor3 = giftButton_upvr:WaitForChild("hoverButtonColor").Value
                            giftButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow"):TweenPosition(UDim2.new(0, 0, 0.5, 0), "Out", "Quad", 0.25, true)
                        end
                        local function giftFrameButtonExit() -- Line 8984
                            --[[ Upvalues[1]:
                                [1]: giftButton_upvr (readonly)
                            ]]
                            giftButton_upvr:TweenSize(UDim2.new(0.8, 0, 1, 0), "Out", "Quad", 0.25, true)
                            giftButton_upvr:WaitForChild("buttonLabel").TextColor3 = Color3.fromRGB(255, 255, 255)
                            giftButton_upvr:WaitForChild("backSquare").ImageColor3 = giftButton_upvr:WaitForChild("buttonColor").Value
                            giftButton_upvr:WaitForChild("backSquare"):WaitForChild("squareShadow"):TweenPosition(UDim2.new(0, 0, 0.53, 0), "Out", "Quad", 0.25, true)
                        end
                        giftButton_upvr.MouseEnter:Connect(giftFrameButtonHover)
                        giftButton_upvr.SelectionGained:Connect(giftFrameButtonHover)
                        giftButton_upvr.MouseLeave:Connect(giftFrameButtonExit)
                        giftButton_upvr.SelectionLost:Connect(giftFrameButtonExit)
                        local Name_upvr = v_76.Name
                        giftButton_upvr.Activated:Connect(function() -- Line 9001, Named "giftFrameButtonClick"
                            --[[ Upvalues[11]:
                                [1]: Name_upvr (readonly)
                                [2]: rEvents_upvr (copied, readonly)
                                [3]: LocalPlayer_upvr (copied, readonly)
                                [4]: var1420_upvw (copied, read and write)
                                [5]: var1419_upvw (copied, read and write)
                                [6]: clickSound_upvr (copied, readonly)
                                [7]: packConfirmGiftMenu_upvr (copied, readonly)
                                [8]: packGiftMenu_upvr (copied, readonly)
                                [9]: packGiftCoverFrame_upvr (copied, readonly)
                                [10]: any_getPlayerPlatform_result1_upvr (copied, readonly)
                                [11]: GuiService_upvr (copied, readonly)
                            ]]
                            local var1434
                            if var1434 ~= nil then
                                var1434 = rEvents_upvr:WaitForChild("playerNamePackRemote"):InvokeServer("linkPlayerPack", var1434.Name)
                            end
                            if var1434 ~= nil and game.Players:FindFirstChild(var1434) ~= nil and LocalPlayer_upvr:WaitForChild("linkedPlayerGift").Value ~= "" then
                                if game.Players:FindFirstChild(LocalPlayer_upvr.linkedPlayerGift.Value) ~= nil and var1420_upvw ~= nil then
                                    if var1419_upvw ~= nil and var1420_upvw:FindFirstChild("packTitle") ~= nil then
                                        if var1420_upvw:FindFirstChild("packImage") ~= nil then
                                            clickSound_upvr:Play()
                                            packConfirmGiftMenu_upvr:WaitForChild("confirmPlayerLabel").Text = "Gift pack to "..var1434..'?'
                                            packConfirmGiftMenu_upvr:WaitForChild("itemIcon").Image = var1420_upvw.packImage.Image
                                            packConfirmGiftMenu_upvr:WaitForChild("itemIcon"):WaitForChild("itemNameLabel").Text = var1420_upvw.packTitle.Text
                                            packConfirmGiftMenu_upvr.itemIcon.itemNameLabel:WaitForChild("shadow").Text = packConfirmGiftMenu_upvr.itemIcon.itemNameLabel.Text
                                            packConfirmGiftMenu_upvr:WaitForChild("itemIcon"):WaitForChild("priceLabel").Text = tostring(var1420_upvw:WaitForChild("packPrice").Value).." Robux"
                                            packGiftMenu_upvr.Visible = false
                                            packGiftCoverFrame_upvr.Visible = true
                                            packConfirmGiftMenu_upvr.Visible = true
                                            if any_getPlayerPlatform_result1_upvr == "console" then
                                                GuiService_upvr.SelectedObject = packConfirmGiftMenu_upvr:WaitForChild("yesButton")
                                            end
                                        end
                                    end
                                end
                            end
                        end)
                    end
                end
                packGiftCoverFrame_upvr.Visible = true
                packGiftMenu_upvr.Visible = true
                if any_getPlayerPlatform_result1_upvr == "console" then
                    i_76 = "cancelButton"
                    GuiService_upvr.SelectedObject = packGiftMenu_upvr:WaitForChild(i_76)
                end
            end)
        end
    end
    packGiftMenu_upvr:WaitForChild("cancelButton").Activated:Connect(function() -- Line 9052
        --[[ Upvalues[4]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: packGiftMenu_upvr (readonly)
            [3]: packGiftCoverFrame_upvr (readonly)
            [4]: packConfirmGiftMenu_upvr (readonly)
        ]]
        clickSound_upvr:Play()
        packGiftMenu_upvr.Visible = false
        packGiftCoverFrame_upvr.Visible = false
        packConfirmGiftMenu_upvr.Visible = false
    end)
    packGiftMenu_upvr:WaitForChild("xButtonSpecial").Activated:Connect(function() -- Line 9060
        --[[ Upvalues[4]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: packGiftMenu_upvr (readonly)
            [3]: packGiftCoverFrame_upvr (readonly)
            [4]: packConfirmGiftMenu_upvr (readonly)
        ]]
        clickSound_upvr:Play()
        packGiftMenu_upvr.Visible = false
        packGiftCoverFrame_upvr.Visible = false
        packConfirmGiftMenu_upvr.Visible = false
    end)
    packConfirmGiftMenu_upvr:WaitForChild("noButton").Activated:Connect(function() -- Line 9068
        --[[ Upvalues[5]:
            [1]: clickSound_upvr (copied, readonly)
            [2]: packGiftMenu_upvr (readonly)
            [3]: packConfirmGiftMenu_upvr (readonly)
            [4]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [5]: GuiService_upvr (copied, readonly)
        ]]
        clickSound_upvr:Play()
        packGiftMenu_upvr.Visible = true
        packConfirmGiftMenu_upvr.Visible = false
        if any_getPlayerPlatform_result1_upvr == "console" then
            GuiService_upvr.SelectedObject = packGiftMenu_upvr:WaitForChild("cancelButton")
        end
    end)
    packConfirmGiftMenu_upvr:WaitForChild("yesButton").Activated:Connect(function() -- Line 9080
        --[[ Upvalues[4]:
            [1]: var1419_upvw (read and write)
            [2]: LocalPlayer_upvr (copied, readonly)
            [3]: clickSound_upvr (copied, readonly)
            [4]: MarketplaceService_upvr (copied, readonly)
        ]]
        if var1419_upvw ~= nil and LocalPlayer_upvr:WaitForChild("linkedPlayerGift").Value ~= "" and game.Players:FindFirstChild(LocalPlayer_upvr.linkedPlayerGift.Value) ~= nil then
            clickSound_upvr:Play()
            MarketplaceService_upvr:PromptProductPurchase(LocalPlayer_upvr, var1419_upvw)
        end
    end)
    local function updatePacksMenuTimers_upvr(arg1) -- Line 9092, Named "updatePacksMenuTimers"
        --[[ Upvalues[2]:
            [1]: packsMenu_upvr (copied, readonly)
            [2]: timeFormat_upvr (readonly)
        ]]
        for _, v_77 in pairs(packsMenu_upvr:WaitForChild("packsScrollMenu"):GetChildren()) do
            if v_77 ~= nil and v_77:IsA("ImageLabel") then
                if v_77:FindFirstChild("timerLabel") ~= nil then
                    if v_77.timerLabel:FindFirstChild("finalTime") ~= nil then
                        local var1446 = v_77.timerLabel.finalTime.Value - arg1
                        local var1447 = "LIMITED TIME!"
                        if 0 < var1446 then
                            var1447 = "LIMITED TIME: "..timeFormat_upvr(var1446, true, true)
                        end
                        v_77.timerLabel.Text = var1447
                    end
                end
            end
        end
    end
    ;(function() -- Line 9112, Named "setupMiscGlowTweens"
        --[[ Upvalues[2]:
            [1]: TweenService_upvr (copied, readonly)
            [2]: packsMenu_upvr (copied, readonly)
        ]]
        local function _(arg1, arg2, arg3, arg4, arg5, arg6, arg7) -- Line 9114, Named "setupOnOffTweenEffect"
            local function whichMenuVisibleChanged() -- Line 9116
                --[[ Upvalues[7]:
                    [1]: arg1 (readonly)
                    [2]: arg2 (readonly)
                    [3]: arg3 (readonly)
                    [4]: arg4 (readonly)
                    [5]: arg5 (readonly)
                    [6]: arg6 (readonly)
                    [7]: arg7 (readonly)
                ]]
                -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [12] 8. Error Block 3 start (CF ANALYSIS FAILED)
                arg2:Play()
                do
                    return
                end
                -- KONSTANTERROR: [12] 8. Error Block 3 end (CF ANALYSIS FAILED)
                -- KONSTANTERROR: [17] 12. Error Block 16 start (CF ANALYSIS FAILED)
                if arg2.PlaybackState ~= Enum.PlaybackState.Cancelled then
                    arg2:Cancel()
                    if arg3 == true then
                        arg2.Instance.Rotation = 0
                    end
                    if arg4 == true then
                        arg2.Instance.Position = arg5
                    end
                    if arg6 == true then
                        arg2.Instance.TextStrokeColor3 = arg7
                    end
                end
                -- KONSTANTERROR: [17] 12. Error Block 16 end (CF ANALYSIS FAILED)
            end
            arg1:GetPropertyChangedSignal("Visible"):Connect(whichMenuVisibleChanged)
        end
        local var1451_upvr = packsMenu_upvr
        local any_Create_result1_upvr = TweenService_upvr:Create(packsMenu_upvr:WaitForChild("behindGlowIcon"), TweenInfo.new(40, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true), {
            Rotation = 1000;
        })
        local var1453_upvr = true
        local var1454_upvr
        local var1455_upvr
        local var1456_upvr
        local var1457_upvr
        local function whichMenuVisibleChanged() -- Line 9116
            --[[ Upvalues[7]:
                [1]: var1451_upvr (readonly)
                [2]: any_Create_result1_upvr (readonly)
                [3]: var1453_upvr (readonly)
                [4]: var1454_upvr (readonly)
                [5]: var1455_upvr (readonly)
                [6]: var1456_upvr (readonly)
                [7]: var1457_upvr (readonly)
            ]]
            -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [12] 8. Error Block 3 start (CF ANALYSIS FAILED)
            any_Create_result1_upvr:Play()
            do
                return
            end
            -- KONSTANTERROR: [12] 8. Error Block 3 end (CF ANALYSIS FAILED)
            -- KONSTANTERROR: [17] 12. Error Block 16 start (CF ANALYSIS FAILED)
            if any_Create_result1_upvr.PlaybackState ~= Enum.PlaybackState.Cancelled then
                any_Create_result1_upvr:Cancel()
                if var1453_upvr == true then
                    any_Create_result1_upvr.Instance.Rotation = 0
                end
                if var1454_upvr == true then
                    any_Create_result1_upvr.Instance.Position = var1455_upvr
                end
                if var1456_upvr == true then
                    any_Create_result1_upvr.Instance.TextStrokeColor3 = var1457_upvr
                end
            end
            -- KONSTANTERROR: [17] 12. Error Block 16 end (CF ANALYSIS FAILED)
        end
        var1455_upvr = "Visible"
        var1453_upvr = var1451_upvr:GetPropertyChangedSignal(var1455_upvr)
        var1455_upvr = whichMenuVisibleChanged
        var1453_upvr = var1453_upvr:Connect
        var1453_upvr(var1455_upvr)
        var1451_upvr = pairs
        var1454_upvr = "packsScrollMenu"
        var1451_upvr = var1451_upvr(packsMenu_upvr:WaitForChild(var1454_upvr):GetChildren())
        for _, v_78 in var1451_upvr(packsMenu_upvr:WaitForChild(var1454_upvr):GetChildren()) do
            local function INLINED_6() -- Internal function, doesn't exist in bytecode
                var1456_upvr = v_78:IsA("ImageLabel")
                return var1456_upvr
            end
            local function INLINED_7() -- Internal function, doesn't exist in bytecode
                var1456_upvr = v_78:FindFirstChild("timerLabel")
                return var1456_upvr ~= nil
            end
            local function INLINED_8() -- Internal function, doesn't exist in bytecode
                var1456_upvr = v_78.timerLabel:FindFirstChild("finalTime")
                return var1456_upvr ~= nil
            end
            local function INLINED_9() -- Internal function, doesn't exist in bytecode
                var1456_upvr = v_78.timerLabel:FindFirstChild("special")
                return var1456_upvr ~= nil
            end
            if v_78 ~= nil and INLINED_6() and INLINED_7() and (INLINED_8() or INLINED_9()) then
                var1456_upvr = TweenService_upvr
                var1456_upvr = var1456_upvr:Create(v_78.timerLabel, TweenInfo.new(1.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, -1, true, 0.2), {
                    TextStrokeColor3 = Color3.fromRGB(255, 255, 255);
                    TextStrokeTransparency = 0;
                })
                var1457_upvr = packsMenu_upvr
                local var1462_upvr = var1457_upvr
                local whichMenuVisibleChanged_upvr = false
                local var1464_upvr = false
                local var1465_upvr
                local var1466_upvr = true
                local TextStrokeColor3_upvr = v_78.timerLabel.TextStrokeColor3
                local function whichMenuVisibleChanged() -- Line 9116
                    --[[ Upvalues[7]:
                        [1]: var1462_upvr (readonly)
                        [2]: var1456_upvr (readonly)
                        [3]: whichMenuVisibleChanged_upvr (readonly)
                        [4]: var1464_upvr (readonly)
                        [5]: var1465_upvr (readonly)
                        [6]: var1466_upvr (readonly)
                        [7]: TextStrokeColor3_upvr (readonly)
                    ]]
                    -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [12] 8. Error Block 3 start (CF ANALYSIS FAILED)
                    var1456_upvr:Play()
                    do
                        return
                    end
                    -- KONSTANTERROR: [12] 8. Error Block 3 end (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [17] 12. Error Block 16 start (CF ANALYSIS FAILED)
                    if var1456_upvr.PlaybackState ~= Enum.PlaybackState.Cancelled then
                        var1456_upvr:Cancel()
                        if whichMenuVisibleChanged_upvr == true then
                            var1456_upvr.Instance.Rotation = 0
                        end
                        if var1464_upvr == true then
                            var1456_upvr.Instance.Position = var1465_upvr
                        end
                        if var1466_upvr == true then
                            var1456_upvr.Instance.TextStrokeColor3 = TextStrokeColor3_upvr
                        end
                    end
                    -- KONSTANTERROR: [17] 12. Error Block 16 end (CF ANALYSIS FAILED)
                end
                var1465_upvr = "Visible"
                whichMenuVisibleChanged_upvr = var1462_upvr:GetPropertyChangedSignal(var1465_upvr)
                var1465_upvr = whichMenuVisibleChanged
                whichMenuVisibleChanged_upvr = whichMenuVisibleChanged_upvr:Connect
                whichMenuVisibleChanged_upvr(var1465_upvr)
                var1462_upvr = v_78:FindFirstChild("saleLabel")
                if var1462_upvr ~= nil then
                    var1462_upvr = TweenService_upvr
                    whichMenuVisibleChanged_upvr = TweenInfo.new
                    var1464_upvr = 1.2
                    var1465_upvr = Enum.EasingStyle.Quad
                    var1466_upvr = Enum.EasingDirection.Out
                    whichMenuVisibleChanged_upvr = whichMenuVisibleChanged_upvr(var1464_upvr, var1465_upvr, var1466_upvr, -1, true, 0.2)
                    var1464_upvr = {}
                    local var1468_upvr = var1464_upvr
                    var1465_upvr = Color3.fromRGB
                    var1466_upvr = 255
                    var1465_upvr = var1465_upvr(var1466_upvr, 255, 255)
                    var1468_upvr.TextStrokeColor3 = var1465_upvr
                    var1465_upvr = 0
                    var1468_upvr.TextStrokeTransparency = var1465_upvr
                    var1462_upvr = var1462_upvr:Create(v_78.saleLabel, whichMenuVisibleChanged_upvr, var1468_upvr)
                    TextStrokeColor3_upvr = packsMenu_upvr
                    local var1469_upvr = TextStrokeColor3_upvr
                    whichMenuVisibleChanged_upvr = v_78.saleLabel
                    var1468_upvr = false
                    var1465_upvr = false
                    var1466_upvr = nil
                    local var1470_upvr = true
                    local TextStrokeColor3_upvr_4 = whichMenuVisibleChanged_upvr.TextStrokeColor3
                    function whichMenuVisibleChanged_upvr() -- Line 9116, Named "whichMenuVisibleChanged"
                        --[[ Upvalues[7]:
                            [1]: var1469_upvr (readonly)
                            [2]: var1462_upvr (readonly)
                            [3]: var1468_upvr (readonly)
                            [4]: var1465_upvr (readonly)
                            [5]: var1466_upvr (readonly)
                            [6]: var1470_upvr (readonly)
                            [7]: TextStrokeColor3_upvr_4 (readonly)
                        ]]
                        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
                        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
                        -- KONSTANTERROR: [12] 8. Error Block 3 start (CF ANALYSIS FAILED)
                        var1462_upvr:Play()
                        do
                            return
                        end
                        -- KONSTANTERROR: [12] 8. Error Block 3 end (CF ANALYSIS FAILED)
                        -- KONSTANTERROR: [17] 12. Error Block 16 start (CF ANALYSIS FAILED)
                        if var1462_upvr.PlaybackState ~= Enum.PlaybackState.Cancelled then
                            var1462_upvr:Cancel()
                            if var1468_upvr == true then
                                var1462_upvr.Instance.Rotation = 0
                            end
                            if var1465_upvr == true then
                                var1462_upvr.Instance.Position = var1466_upvr
                            end
                            if var1470_upvr == true then
                                var1462_upvr.Instance.TextStrokeColor3 = TextStrokeColor3_upvr_4
                            end
                        end
                        -- KONSTANTERROR: [17] 12. Error Block 16 end (CF ANALYSIS FAILED)
                    end
                    var1466_upvr = "Visible"
                    var1468_upvr = var1469_upvr:GetPropertyChangedSignal(var1466_upvr)
                    var1466_upvr = whichMenuVisibleChanged_upvr
                    var1468_upvr = var1468_upvr:Connect
                    var1468_upvr(var1466_upvr)
                end
            end
        end
    end)()
    local serverTime_upvr_2 = ReplicatedStorage_upvr:WaitForChild("serverTime")
    coroutine.resume(coroutine.create(function() -- Line 9167
        --[[ Upvalues[8]:
            [1]: updateChestTimeLabels_upvr (readonly)
            [2]: serverTime_upvr_2 (readonly)
            [3]: calculateRemainingPowerUpCapacity_upvr (copied, readonly)
            [4]: updatePacksMenuTimers_upvr (readonly)
            [5]: Strength_4_upvr (copied, readonly)
            [6]: legendsBeachStrengthAmount_upvr (readonly)
            [7]: legendsBeachBarrierPart_upvr (readonly)
            [8]: legendsBeachGradientPart_upvr (readonly)
        ]]
        while wait(1) do
            updateChestTimeLabels_upvr(serverTime_upvr_2.Value)
            calculateRemainingPowerUpCapacity_upvr()
            updatePacksMenuTimers_upvr(serverTime_upvr_2.Value)
            if legendsBeachStrengthAmount_upvr.Value <= Strength_4_upvr.Value then
                legendsBeachBarrierPart_upvr.CanCollide = false
                legendsBeachGradientPart_upvr:ClearAllChildren()
            end
        end
    end))
    local var1475_upvw = true
    workspace:WaitForChild("groupRewardsCircle"):WaitForChild("circleInner").Touched:Connect(function(arg1) -- Line 9190
        --[[ Upvalues[11]:
            [1]: var1475_upvw (read and write)
            [2]: Character_upvr (copied, readonly)
            [3]: LocalPlayer_upvr (copied, readonly)
            [4]: rEvents_upvr (copied, readonly)
            [5]: gemsSound_upvr (copied, readonly)
            [6]: groupRewardsMenu_upvr (copied, readonly)
            [7]: resetMenus_upvr (copied, readonly)
            [8]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [9]: GuiService_upvr (copied, readonly)
            [10]: deniedSound_upvr (copied, readonly)
            [11]: notInGroupMenu_upvr (copied, readonly)
        ]]
        -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [3] 3. Error Block 2 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [3] 3. Error Block 2 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [5] 4. Error Block 3 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [5] 4. Error Block 3 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [9] 6. Error Block 4 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [9] 6. Error Block 4 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [236] 172. Error Block 22 start (CF ANALYSIS FAILED)
        wait(3)
        var1475_upvw = true
        -- KONSTANTERROR: [236] 172. Error Block 22 end (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [242] 177. Error Block 23 start (CF ANALYSIS FAILED)
        -- KONSTANTERROR: [242] 177. Error Block 23 end (CF ANALYSIS FAILED)
    end)
    local var1476_upvw = true
    local function rewardChestTouched_upvr(arg1, arg2) -- Line 9254, Named "rewardChestTouched"
        --[[ Upvalues[9]:
            [1]: var1476_upvw (read and write)
            [2]: Character_upvr (copied, readonly)
            [3]: LocalPlayer_upvr (copied, readonly)
            [4]: rEvents_upvr (copied, readonly)
            [5]: gemsSound_upvr (copied, readonly)
            [6]: groupRewardsMenu_upvr (copied, readonly)
            [7]: resetMenus_upvr (copied, readonly)
            [8]: any_getPlayerPlatform_result1_upvr (copied, readonly)
            [9]: GuiService_upvr (copied, readonly)
        ]]
        if var1476_upvw == true and arg1 ~= nil then
            if arg1.Parent ~= nil and arg1.Parent == Character_upvr then
                if LocalPlayer_upvr:FindFirstChild("alreadyCheckedForChests") ~= nil then return end
                var1476_upvw = false
                local any_InvokeServer_result1, any_InvokeServer_result2_3, any_InvokeServer_result3_2 = rEvents_upvr:WaitForChild("checkChestRemote"):InvokeServer(arg2)
                if any_InvokeServer_result1 ~= nil and any_InvokeServer_result2_3 ~= nil and any_InvokeServer_result1 == true and any_InvokeServer_result3_2 ~= nil then
                    gemsSound_upvr:Play()
                    groupRewardsMenu_upvr:WaitForChild("rewardIcon"):WaitForChild("rewardLabel").Text = '+'..tostring(any_InvokeServer_result3_2)
                    groupRewardsMenu_upvr:WaitForChild("rewardIcon"):WaitForChild("rewardLabel"):WaitForChild("shadow").Text = groupRewardsMenu_upvr:WaitForChild("rewardIcon"):WaitForChild("rewardLabel").Text
                    groupRewardsMenu_upvr:WaitForChild("msgLabel").Text = "Check back in 6 hours for your next reward!"
                    groupRewardsMenu_upvr:WaitForChild("msgLabel"):WaitForChild("shadow").Text = groupRewardsMenu_upvr.msgLabel.Text
                    if any_InvokeServer_result2_3 == "Strength" then
                        groupRewardsMenu_upvr:WaitForChild("rewardIcon").Image = "rbxassetid://3552034095"
                        groupRewardsMenu_upvr:WaitForChild("rewardIcon"):WaitForChild("rewardLabel").TextColor3 = Color3.fromRGB(253, 224, 1)
                    elseif any_InvokeServer_result2_3 == "Gems" then
                        groupRewardsMenu_upvr:WaitForChild("rewardIcon").Image = "rbxassetid://2829564501"
                        groupRewardsMenu_upvr:WaitForChild("rewardIcon"):WaitForChild("rewardLabel").TextColor3 = Color3.fromRGB(98, 221, 255)
                    end
                    resetMenus_upvr(groupRewardsMenu_upvr)
                    if any_getPlayerPlatform_result1_upvr == "console" then
                        GuiService_upvr.SelectedObject = groupRewardsMenu_upvr:WaitForChild("xButton")
                    end
                end
                wait(3)
                var1476_upvw = true
            end
        end
    end
    function petName_upvr_2(arg1) -- Line 9302, Named "goldenChestTouched"
        --[[ Upvalues[1]:
            [1]: rewardChestTouched_upvr (readonly)
        ]]
        rewardChestTouched_upvr(arg1, "Golden Chest")
    end
    workspace:WaitForChild("goldenChest"):WaitForChild("circleInner").Touched:Connect(petName_upvr_2)
    petName_upvr_2 = workspace:WaitForChild("enchantedChest"):WaitForChild("circleInner")
    petName_upvr_2.Touched:Connect(function(arg1) -- Line 9308, Named "enchantedChestTouched"
        --[[ Upvalues[1]:
            [1]: rewardChestTouched_upvr (readonly)
        ]]
        rewardChestTouched_upvr(arg1, "Enchanted Chest")
    end)
    perksFolder_upvr = "magmaChest"
    perksFolder_upvr = "circleInner"
    petName_upvr_2 = workspace:WaitForChild(perksFolder_upvr):WaitForChild(perksFolder_upvr).Touched:Connect
    petName_upvr_2(function(arg1) -- Line 9314, Named "magmaChestTouched"
        --[[ Upvalues[1]:
            [1]: rewardChestTouched_upvr (readonly)
        ]]
        rewardChestTouched_upvr(arg1, "Magma Chest")
    end)
    function petName_upvr_2(arg1) -- Line 9320, Named "mythicalChestTouched"
        --[[ Upvalues[1]:
            [1]: rewardChestTouched_upvr (readonly)
        ]]
        rewardChestTouched_upvr(arg1, "Mythical Chest")
    end
    tbl_17_upvr = "mythicalChest"
    tbl_17_upvr = "circleInner"
    perksFolder_upvr = petName_upvr_2
    workspace:WaitForChild(tbl_17_upvr):WaitForChild(tbl_17_upvr).Touched:Connect(perksFolder_upvr)
    perksFolder_upvr = workspace:WaitForChild("legendsChest"):WaitForChild("circleInner")
    function tbl_17_upvr(arg1) -- Line 9326, Named "legendsChestTouched"
        --[[ Upvalues[1]:
            [1]: rewardChestTouched_upvr (readonly)
        ]]
        rewardChestTouched_upvr(arg1, "Legends Chest")
    end
    perksFolder_upvr.Touched:Connect(tbl_17_upvr)
    tbl_17_upvr = workspace:WaitForChild("jungleChest"):WaitForChild("circleInner")
    perksFolder_upvr = tbl_17_upvr.Touched:Connect
    perksFolder_upvr(function(arg1) -- Line 9332, Named "jungleChestTouched"
        --[[ Upvalues[1]:
            [1]: rewardChestTouched_upvr (readonly)
        ]]
        rewardChestTouched_upvr(arg1, "Jungle Chest")
    end)
end)()
